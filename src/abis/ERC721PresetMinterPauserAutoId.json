{
  "contractName": "ERC721PresetMinterPauserAutoId",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseTokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\":\"ERC721PresetMinterPauserAutoId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4064dc9c8b4605d31822511a71bb668b1e7a23bc2bbed1df57813bdc9398217d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e629709fcafaf6de37170d35db522d32c9caf0bf762b6fb2bac05e998e408eee\",\"dweb:/ipfs/QmWqSYZW1i8jjDh22XPYtjFG3X1pTv4nPzLRynLR26x2Qw\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x33ba8a175bb81046a02b02e8d5eb4cabc87e1875f4a74bbc6f11c51db5e40d8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61b5e6e61e0a342dafdab72b7113f735dfd1612389cda77d7edf6f263b400015\",\"dweb:/ipfs/QmRxm43A3sSiJhnVtqYtCJfnWwLzzLd2365DNAToYHokbS\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x7481c284b0ff5983d3f1784f0ceae1ec397f8c8938bc60552b19889cc057aee8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c834984a08e9fcb78657f3e6bc1209463581c4660fb7a0d7b785b1aec52490bc\",\"dweb:/ipfs/Qman8u5hNWrE34xNinnSgNqMXcsyPsHh5992b4G7iM2xFX\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x41dc7bf7f69c668eb98aa078c5140a4d3c3b097124ee4b6058a649ca99688300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://621b0e2f8b95aa04707f3106f48a8c7cfab2d6fbe2dd8253e70b0b024daee683\",\"dweb:/ipfs/QmTptvu7MJ6QcogPJUxkDEkdKm97KGTC28bhsZKu4sex4M\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xe8f81ba5ba258c2a3ad5cf4c0bf6263c78e60f320bd0bc150c9de2445958c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c64c6df28d5884d784d0b83ca067dd012dfda8c93e76e29c77c8906ab05894e\",\"dweb:/ipfs/QmRoCfuwBaDRii84xeBFNGL1EWYX1AaAkYGVUe2y8JWP3a\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xa69205e5009601cf13be78b1e2f500e1e3b1d8012f22d966e63975273f602038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d919a0061e43f9878f6171b7f853cb92093805cd1160858c1884195a639b40a0\",\"dweb:/ipfs/QmRZsS3EYuLp75nBym1QQ4y6aQXGew75wSbv1uwqkvouUK\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\":{\"keccak256\":\"0xe8d33b91c7eedd75d2bf76b67c63e0989e8e98ab08641af7026c55db7f853d95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33fab95215ec544ef44e47c45a954375d4d1929c8a5f99c7cb98626d7f1a0c92\",\"dweb:/ipfs/Qmdpmua9Y4UQhUwR6EeyZwVYJJ1n4iAG1giFDgb9EXuyqd\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0\",\"dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x3778dc944f4a696335878bad8beca60f38b7c79b7a0bd8ddbeb618bd502a95ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12961fd593c79b60088c8829fd760db4149790b1c702411919fac76769e8c39a\",\"dweb:/ipfs/QmXN79ZS3btSrPhiMBWtWmdwaWKjYTaAYpVMt5QHvwwKMw\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004f6c38038062004f6c833981810160405281019062000037919062000514565b8282816002908051906020019062000051929190620003e6565b5080600390805190602001906200006a929190620003e6565b5050506000600c60006101000a81548160ff02191690831515021790555080600e9080519060200190620000a0929190620003e6565b50620000c56000801b620000b96200015060201b60201c565b6200015860201b60201c565b620001067f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000fa6200015060201b60201c565b6200015860201b60201c565b620001477f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6200013b6200015060201b60201c565b6200015860201b60201c565b50505062000751565b600033905090565b6200016f8282620001a060201b620012e41760201c565b6200019b8160016000858152602001908152602001600020620001b660201b620012f21790919060201c565b505050565b620001b28282620001ee60201b60201c565b5050565b6000620001e6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620002df60201b60201c565b905092915050565b6200020082826200035960201b60201c565b620002db57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002806200015060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002f38383620003c360201b60201c565b6200034e57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000353565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054620003f49062000662565b90600052602060002090601f01602090048101928262000418576000855562000464565b82601f106200043357805160ff191683800117855562000464565b8280016001018555821562000464579182015b828111156200046357825182559160200191906001019062000446565b5b50905062000473919062000477565b5090565b5b808211156200049257600081600090555060010162000478565b5090565b6000620004ad620004a784620005f6565b620005cd565b905082815260208101848484011115620004cc57620004cb62000731565b5b620004d98482856200062c565b509392505050565b600082601f830112620004f957620004f86200072c565b5b81516200050b84826020860162000496565b91505092915050565b60008060006060848603121562000530576200052f6200073b565b5b600084015167ffffffffffffffff81111562000551576200055062000736565b5b6200055f86828701620004e1565b935050602084015167ffffffffffffffff81111562000583576200058262000736565b5b6200059186828701620004e1565b925050604084015167ffffffffffffffff811115620005b557620005b462000736565b5b620005c386828701620004e1565b9150509250925092565b6000620005d9620005ec565b9050620005e7828262000698565b919050565b6000604051905090565b600067ffffffffffffffff821115620006145762000613620006fd565b5b6200061f8262000740565b9050602081019050919050565b60005b838110156200064c5780820151818401526020810190506200062f565b838111156200065c576000848401525b50505050565b600060028204905060018216806200067b57607f821691505b60208210811415620006925762000691620006ce565b5b50919050565b620006a38262000740565b810181811067ffffffffffffffff82111715620006c557620006c4620006fd565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61480b80620007616000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063d539139311610071578063d5391393146105a0578063d547741f146105be578063e63ab1e9146105da578063e985e9c5146105f8576101e5565b8063a22cb46514610508578063b88d4fde14610524578063c87b56dd14610540578063ca15c87314610570576101e5565b80639010d07c116100de5780639010d07c1461046c57806391d148541461049c57806395d89b41146104cc578063a217fddf146104ea576101e5565b80636352211e146103e65780636a6278421461041657806370a08231146104325780638456cb5914610462576101e5565b80632f2ff15d1161018757806342842e0e1161015657806342842e0e1461036057806342966c681461037c5780634f6ccce7146103985780635c975abb146103c8576101e5565b80632f2ff15d146102ee5780632f745c591461030a57806336568abe1461033a5780633f4ba83a14610356576101e5565b8063095ea7b3116101c3578063095ea7b31461026857806318160ddd1461028457806323b872dd146102a2578063248a9ca3146102be576101e5565b806301ffc9a7146101ea57806306fdde031461021a578063081812fc14610238575b600080fd5b61020460048036038101906101ff919061321a565b610628565b60405161021191906137f6565b60405180910390f35b61022261063a565b60405161022f919061382c565b60405180910390f35b610252600480360381019061024d9190613274565b6106cc565b60405161025f919061378f565b60405180910390f35b610282600480360381019061027d919061312d565b610751565b005b61028c610869565b6040516102999190613b6e565b60405180910390f35b6102bc60048036038101906102b79190613017565b610876565b005b6102d860048036038101906102d3919061316d565b6108d6565b6040516102e59190613811565b60405180910390f35b6103086004803603810190610303919061319a565b6108f5565b005b610324600480360381019061031f919061312d565b610929565b6040516103319190613b6e565b60405180910390f35b610354600480360381019061034f919061319a565b6109ce565b005b61035e610a02565b005b61037a60048036038101906103759190613017565b610a7c565b005b61039660048036038101906103919190613274565b610a9c565b005b6103b260048036038101906103ad9190613274565b610af8565b6040516103bf9190613b6e565b60405180910390f35b6103d0610b69565b6040516103dd91906137f6565b60405180910390f35b61040060048036038101906103fb9190613274565b610b80565b60405161040d919061378f565b60405180910390f35b610430600480360381019061042b9190612faa565b610c32565b005b61044c60048036038101906104479190612faa565b610cc2565b6040516104599190613b6e565b60405180910390f35b61046a610d7a565b005b610486600480360381019061048191906131da565b610df4565b604051610493919061378f565b60405180910390f35b6104b660048036038101906104b1919061319a565b610e23565b6040516104c391906137f6565b60405180910390f35b6104d4610e8d565b6040516104e1919061382c565b60405180910390f35b6104f2610f1f565b6040516104ff9190613811565b60405180910390f35b610522600480360381019061051d91906130ed565b610f26565b005b61053e6004803603810190610539919061306a565b6110a7565b005b61055a60048036038101906105559190613274565b611109565b604051610567919061382c565b60405180910390f35b61058a6004803603810190610585919061316d565b6111b0565b6040516105979190613b6e565b60405180910390f35b6105a86111d4565b6040516105b59190613811565b60405180910390f35b6105d860048036038101906105d3919061319a565b6111f8565b005b6105e261122c565b6040516105ef9190613811565b60405180910390f35b610612600480360381019061060d9190612fd7565b611250565b60405161061f91906137f6565b60405180910390f35b600061063382611322565b9050919050565b60606002805461064990613e21565b80601f016020809104026020016040519081016040528092919081815260200182805461067590613e21565b80156106c25780601f10610697576101008083540402835291602001916106c2565b820191906000526020600020905b8154815290600101906020018083116106a557829003601f168201915b5050505050905090565b60006106d78261139c565b610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90613a2e565b60405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061075c82610b80565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490613a8e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107ec611408565b73ffffffffffffffffffffffffffffffffffffffff16148061081b575061081a81610815611408565b611250565b5b61085a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610851906139ae565b60405180910390fd5b6108648383611410565b505050565b6000600a80549050905090565b610887610881611408565b826114c9565b6108c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bd90613aae565b60405180910390fd5b6108d18383836115a7565b505050565b6000806000838152602001908152602001600020600101549050919050565b6108ff8282611803565b61092481600160008581526020019081526020016000206112f290919063ffffffff16565b505050565b600061093483610cc2565b8210610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906138ae565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6109d8828261182c565b6109fd81600160008581526020019081526020016000206118af90919063ffffffff16565b505050565b610a337f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a2e611408565b610e23565b610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6990613b2e565b60405180910390fd5b610a7a6118df565b565b610a97838383604051806020016040528060008152506110a7565b505050565b610aad610aa7611408565b826114c9565b610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae390613b0e565b60405180910390fd5b610af581611981565b50565b6000610b02610869565b8210610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a90613ace565b60405180910390fd5b600a8281548110610b5757610b56613fba565b5b90600052602060002001549050919050565b6000600c60009054906101000a900460ff16905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c20906139ee565b60405180910390fd5b80915050919050565b610c637f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c5e611408565b610e23565b610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9990613aee565b60405180910390fd5b610cb581610cb0600d611a92565b611aa0565b610cbf600d611c6e565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a906139ce565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610dab7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610da6611408565b610e23565b610dea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de19061390e565b60405180910390fd5b610df2611c84565b565b6000610e1b8260016000868152602001908152602001600020611d2790919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060038054610e9c90613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec890613e21565b8015610f155780601f10610eea57610100808354040283529160200191610f15565b820191906000526020600020905b815481529060010190602001808311610ef857829003601f168201915b5050505050905090565b6000801b81565b610f2e611408565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f939061394e565b60405180910390fd5b8060076000610fa9611408565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611056611408565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161109b91906137f6565b60405180910390a35050565b6110b86110b2611408565b836114c9565b6110f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ee90613aae565b60405180910390fd5b61110384848484611d41565b50505050565b60606111148261139c565b611153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114a90613a6e565b60405180910390fd5b600061115d611d9d565b9050600081511161117d57604051806020016040528060008152506111a8565b8061118784611e2f565b604051602001611198929190613731565b6040516020818303038152906040525b915050919050565b60006111cd60016000848152602001908152602001600020611f90565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6112028282611fa5565b61122781600160008581526020019081526020016000206118af90919063ffffffff16565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6112ee8282611fce565b5050565b600061131a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6120ae565b905092915050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061139557506113948261211e565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661148383610b80565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006114d48261139c565b611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a9061396e565b60405180910390fd5b600061151e83610b80565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061158d57508373ffffffffffffffffffffffffffffffffffffffff16611575846106cc565b73ffffffffffffffffffffffffffffffffffffffff16145b8061159e575061159d8185611250565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166115c782610b80565b73ffffffffffffffffffffffffffffffffffffffff161461161d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161490613a4e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561168d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116849061392e565b60405180910390fd5b611698838383612200565b6116a3600082611410565b6001600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116f39190613d03565b925050819055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461174a9190613c22565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61180c826108d6565b61181d81611818611408565b612210565b6118278383611fce565b505050565b611834611408565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189890613b4e565b60405180910390fd5b6118ab82826122ad565b5050565b60006118d7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61238e565b905092915050565b6118e7610b69565b611926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191d9061388e565b60405180910390fd5b6000600c60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61196a611408565b604051611977919061378f565b60405180910390a1565b600061198c82610b80565b905061199a81600084612200565b6119a5600083611410565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119f59190613d03565b925050819055506004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0790613a0e565b60405180910390fd5b611b198161139c565b15611b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b50906138ee565b60405180910390fd5b611b6560008383612200565b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bb59190613c22565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b611c8c610b69565b15611ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc39061398e565b60405180910390fd5b6001600c60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d10611408565b604051611d1d919061378f565b60405180910390a1565b6000611d3683600001836124a2565b60001c905092915050565b611d4c8484846115a7565b611d58848484846124cd565b611d97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8e906138ce565b60405180910390fd5b50505050565b6060600e8054611dac90613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054611dd890613e21565b8015611e255780601f10611dfa57610100808354040283529160200191611e25565b820191906000526020600020905b815481529060010190602001808311611e0857829003601f168201915b5050505050905090565b60606000821415611e77576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611f8b565b600082905060005b60008214611ea9578080611e9290613e84565b915050600a82611ea29190613c78565b9150611e7f565b60008167ffffffffffffffff811115611ec557611ec4613fe9565b5b6040519080825280601f01601f191660200182016040528015611ef75781602001600182028036833780820191505090505b5090505b60008514611f8457600182611f109190613d03565b9150600a85611f1f9190613ecd565b6030611f2b9190613c22565b60f81b818381518110611f4157611f40613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611f7d9190613c78565b9450611efb565b8093505050505b919050565b6000611f9e82600001612664565b9050919050565b611fae826108d6565b611fbf81611fba611408565b612210565b611fc983836122ad565b505050565b611fd88282610e23565b6120aa57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061204f611408565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006120ba8383612675565b612113578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612118565b600090505b92915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806121e957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806121f957506121f882612698565b5b9050919050565b61220b838383612712565b505050565b61221a8282610e23565b6122a95761223f8173ffffffffffffffffffffffffffffffffffffffff16601461276a565b61224d8360001c602061276a565b60405160200161225e929190613755565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a0919061382c565b60405180910390fd5b5050565b6122b78282610e23565b1561238a57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061232f611408565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080836001016000848152602001908152602001600020549050600081146124965760006001826123c09190613d03565b90506000600186600001805490506123d89190613d03565b90508181146124475760008660000182815481106123f9576123f8613fba565b5b906000526020600020015490508087600001848154811061241d5761241c613fba565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061245b5761245a613f8b565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061249c565b60009150505b92915050565b60008260000182815481106124ba576124b9613fba565b5b9060005260206000200154905092915050565b60006124ee8473ffffffffffffffffffffffffffffffffffffffff166129a6565b15612657578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612517611408565b8786866040518563ffffffff1660e01b815260040161253994939291906137aa565b602060405180830381600087803b15801561255357600080fd5b505af192505050801561258457506040513d601f19601f820116820180604052508101906125819190613247565b60015b612607573d80600081146125b4576040519150601f19603f3d011682016040523d82523d6000602084013e6125b9565b606091505b506000815114156125ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125f6906138ce565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061265c565b600190505b949350505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061270b575061270a826129b9565b5b9050919050565b61271d838383612a33565b612725610b69565b15612765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161275c9061386e565b60405180910390fd5b505050565b60606000600283600261277d9190613ca9565b6127879190613c22565b67ffffffffffffffff8111156127a05761279f613fe9565b5b6040519080825280601f01601f1916602001820160405280156127d25781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061280a57612809613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061286e5761286d613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026128ae9190613ca9565b6128b89190613c22565b90505b6001811115612958577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106128fa576128f9613fba565b5b1a60f81b82828151811061291157612910613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061295190613df7565b90506128bb565b506000841461299c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129939061384e565b60405180910390fd5b8091505092915050565b600080823b905060008111915050919050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612a2c5750612a2b82612b47565b5b9050919050565b612a3e838383612bb1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612a8157612a7c81612bb6565b612ac0565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612abf57612abe8382612bff565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612b0357612afe81612d6c565b612b42565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612b4157612b408282612e3d565b5b5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612c0c84610cc2565b612c169190613d03565b9050600060096000848152602001908152602001600020549050818114612cfb576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816009600083815260200190815260200160002081905550505b6009600084815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600a80549050612d809190613d03565b90506000600b60008481526020019081526020016000205490506000600a8381548110612db057612daf613fba565b5b9060005260206000200154905080600a8381548110612dd257612dd1613fba565b5b906000526020600020018190555081600b600083815260200190815260200160002081905550600b600085815260200190815260200160002060009055600a805480612e2157612e20613f8b565b5b6001900381819060005260206000200160009055905550505050565b6000612e4883610cc2565b905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806009600084815260200190815260200160002081905550505050565b6000612ecf612eca84613bae565b613b89565b905082815260208101848484011115612eeb57612eea61401d565b5b612ef6848285613db5565b509392505050565b600081359050612f0d81614762565b92915050565b600081359050612f2281614779565b92915050565b600081359050612f3781614790565b92915050565b600081359050612f4c816147a7565b92915050565b600081519050612f61816147a7565b92915050565b600082601f830112612f7c57612f7b614018565b5b8135612f8c848260208601612ebc565b91505092915050565b600081359050612fa4816147be565b92915050565b600060208284031215612fc057612fbf614027565b5b6000612fce84828501612efe565b91505092915050565b60008060408385031215612fee57612fed614027565b5b6000612ffc85828601612efe565b925050602061300d85828601612efe565b9150509250929050565b6000806000606084860312156130305761302f614027565b5b600061303e86828701612efe565b935050602061304f86828701612efe565b925050604061306086828701612f95565b9150509250925092565b6000806000806080858703121561308457613083614027565b5b600061309287828801612efe565b94505060206130a387828801612efe565b93505060406130b487828801612f95565b925050606085013567ffffffffffffffff8111156130d5576130d4614022565b5b6130e187828801612f67565b91505092959194509250565b6000806040838503121561310457613103614027565b5b600061311285828601612efe565b925050602061312385828601612f13565b9150509250929050565b6000806040838503121561314457613143614027565b5b600061315285828601612efe565b925050602061316385828601612f95565b9150509250929050565b60006020828403121561318357613182614027565b5b600061319184828501612f28565b91505092915050565b600080604083850312156131b1576131b0614027565b5b60006131bf85828601612f28565b92505060206131d085828601612efe565b9150509250929050565b600080604083850312156131f1576131f0614027565b5b60006131ff85828601612f28565b925050602061321085828601612f95565b9150509250929050565b6000602082840312156132305761322f614027565b5b600061323e84828501612f3d565b91505092915050565b60006020828403121561325d5761325c614027565b5b600061326b84828501612f52565b91505092915050565b60006020828403121561328a57613289614027565b5b600061329884828501612f95565b91505092915050565b6132aa81613d37565b82525050565b6132b981613d49565b82525050565b6132c881613d55565b82525050565b60006132d982613bdf565b6132e38185613bf5565b93506132f3818560208601613dc4565b6132fc8161402c565b840191505092915050565b600061331282613bea565b61331c8185613c06565b935061332c818560208601613dc4565b6133358161402c565b840191505092915050565b600061334b82613bea565b6133558185613c17565b9350613365818560208601613dc4565b80840191505092915050565b600061337e602083613c06565b91506133898261403d565b602082019050919050565b60006133a1602b83613c06565b91506133ac82614066565b604082019050919050565b60006133c4601483613c06565b91506133cf826140b5565b602082019050919050565b60006133e7602b83613c06565b91506133f2826140de565b604082019050919050565b600061340a603283613c06565b91506134158261412d565b604082019050919050565b600061342d601c83613c06565b91506134388261417c565b602082019050919050565b6000613450603e83613c06565b915061345b826141a5565b604082019050919050565b6000613473602483613c06565b915061347e826141f4565b604082019050919050565b6000613496601983613c06565b91506134a182614243565b602082019050919050565b60006134b9602c83613c06565b91506134c48261426c565b604082019050919050565b60006134dc601083613c06565b91506134e7826142bb565b602082019050919050565b60006134ff603883613c06565b915061350a826142e4565b604082019050919050565b6000613522602a83613c06565b915061352d82614333565b604082019050919050565b6000613545602983613c06565b915061355082614382565b604082019050919050565b6000613568602083613c06565b9150613573826143d1565b602082019050919050565b600061358b602c83613c06565b9150613596826143fa565b604082019050919050565b60006135ae602983613c06565b91506135b982614449565b604082019050919050565b60006135d1602f83613c06565b91506135dc82614498565b604082019050919050565b60006135f4602183613c06565b91506135ff826144e7565b604082019050919050565b6000613617603183613c06565b915061362282614536565b604082019050919050565b600061363a602c83613c06565b915061364582614585565b604082019050919050565b600061365d601783613c17565b9150613668826145d4565b601782019050919050565b6000613680603d83613c06565b915061368b826145fd565b604082019050919050565b60006136a3603083613c06565b91506136ae8261464c565b604082019050919050565b60006136c6604083613c06565b91506136d18261469b565b604082019050919050565b60006136e9601183613c17565b91506136f4826146ea565b601182019050919050565b600061370c602f83613c06565b915061371782614713565b604082019050919050565b61372b81613dab565b82525050565b600061373d8285613340565b91506137498284613340565b91508190509392505050565b600061376082613650565b915061376c8285613340565b9150613777826136dc565b91506137838284613340565b91508190509392505050565b60006020820190506137a460008301846132a1565b92915050565b60006080820190506137bf60008301876132a1565b6137cc60208301866132a1565b6137d96040830185613722565b81810360608301526137eb81846132ce565b905095945050505050565b600060208201905061380b60008301846132b0565b92915050565b600060208201905061382660008301846132bf565b92915050565b600060208201905081810360008301526138468184613307565b905092915050565b6000602082019050818103600083015261386781613371565b9050919050565b6000602082019050818103600083015261388781613394565b9050919050565b600060208201905081810360008301526138a7816133b7565b9050919050565b600060208201905081810360008301526138c7816133da565b9050919050565b600060208201905081810360008301526138e7816133fd565b9050919050565b6000602082019050818103600083015261390781613420565b9050919050565b6000602082019050818103600083015261392781613443565b9050919050565b6000602082019050818103600083015261394781613466565b9050919050565b6000602082019050818103600083015261396781613489565b9050919050565b60006020820190508181036000830152613987816134ac565b9050919050565b600060208201905081810360008301526139a7816134cf565b9050919050565b600060208201905081810360008301526139c7816134f2565b9050919050565b600060208201905081810360008301526139e781613515565b9050919050565b60006020820190508181036000830152613a0781613538565b9050919050565b60006020820190508181036000830152613a278161355b565b9050919050565b60006020820190508181036000830152613a478161357e565b9050919050565b60006020820190508181036000830152613a67816135a1565b9050919050565b60006020820190508181036000830152613a87816135c4565b9050919050565b60006020820190508181036000830152613aa7816135e7565b9050919050565b60006020820190508181036000830152613ac78161360a565b9050919050565b60006020820190508181036000830152613ae78161362d565b9050919050565b60006020820190508181036000830152613b0781613673565b9050919050565b60006020820190508181036000830152613b2781613696565b9050919050565b60006020820190508181036000830152613b47816136b9565b9050919050565b60006020820190508181036000830152613b67816136ff565b9050919050565b6000602082019050613b836000830184613722565b92915050565b6000613b93613ba4565b9050613b9f8282613e53565b919050565b6000604051905090565b600067ffffffffffffffff821115613bc957613bc8613fe9565b5b613bd28261402c565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613c2d82613dab565b9150613c3883613dab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c6d57613c6c613efe565b5b828201905092915050565b6000613c8382613dab565b9150613c8e83613dab565b925082613c9e57613c9d613f2d565b5b828204905092915050565b6000613cb482613dab565b9150613cbf83613dab565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613cf857613cf7613efe565b5b828202905092915050565b6000613d0e82613dab565b9150613d1983613dab565b925082821015613d2c57613d2b613efe565b5b828203905092915050565b6000613d4282613d8b565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613de2578082015181840152602081019050613dc7565b83811115613df1576000848401525b50505050565b6000613e0282613dab565b91506000821415613e1657613e15613efe565b5b600182039050919050565b60006002820490506001821680613e3957607f821691505b60208210811415613e4d57613e4c613f5c565b5b50919050565b613e5c8261402c565b810181811067ffffffffffffffff82111715613e7b57613e7a613fe9565b5b80604052505050565b6000613e8f82613dab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613ec257613ec1613efe565b5b600182019050919050565b6000613ed882613dab565b9150613ee383613dab565b925082613ef357613ef2613f2d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f4552433732315061757361626c653a20746f6b656e207472616e73666572207760008201527f68696c6520706175736564000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d75737420686176652070617573657220726f6c6520746f2070617573650000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d7573742068617665206d696e74657220726f6c6520746f206d696e74000000602082015250565b7f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656400000000000000000000000000000000602082015250565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d75737420686176652070617573657220726f6c6520746f20756e7061757365602082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b61476b81613d37565b811461477657600080fd5b50565b61478281613d49565b811461478d57600080fd5b50565b61479981613d55565b81146147a457600080fd5b50565b6147b081613d5f565b81146147bb57600080fd5b50565b6147c781613dab565b81146147d257600080fd5b5056fea26469706673582212207e3e1d1156791888b457392dde8daec277103602ac18689daae187d6e3af592e64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063d539139311610071578063d5391393146105a0578063d547741f146105be578063e63ab1e9146105da578063e985e9c5146105f8576101e5565b8063a22cb46514610508578063b88d4fde14610524578063c87b56dd14610540578063ca15c87314610570576101e5565b80639010d07c116100de5780639010d07c1461046c57806391d148541461049c57806395d89b41146104cc578063a217fddf146104ea576101e5565b80636352211e146103e65780636a6278421461041657806370a08231146104325780638456cb5914610462576101e5565b80632f2ff15d1161018757806342842e0e1161015657806342842e0e1461036057806342966c681461037c5780634f6ccce7146103985780635c975abb146103c8576101e5565b80632f2ff15d146102ee5780632f745c591461030a57806336568abe1461033a5780633f4ba83a14610356576101e5565b8063095ea7b3116101c3578063095ea7b31461026857806318160ddd1461028457806323b872dd146102a2578063248a9ca3146102be576101e5565b806301ffc9a7146101ea57806306fdde031461021a578063081812fc14610238575b600080fd5b61020460048036038101906101ff919061321a565b610628565b60405161021191906137f6565b60405180910390f35b61022261063a565b60405161022f919061382c565b60405180910390f35b610252600480360381019061024d9190613274565b6106cc565b60405161025f919061378f565b60405180910390f35b610282600480360381019061027d919061312d565b610751565b005b61028c610869565b6040516102999190613b6e565b60405180910390f35b6102bc60048036038101906102b79190613017565b610876565b005b6102d860048036038101906102d3919061316d565b6108d6565b6040516102e59190613811565b60405180910390f35b6103086004803603810190610303919061319a565b6108f5565b005b610324600480360381019061031f919061312d565b610929565b6040516103319190613b6e565b60405180910390f35b610354600480360381019061034f919061319a565b6109ce565b005b61035e610a02565b005b61037a60048036038101906103759190613017565b610a7c565b005b61039660048036038101906103919190613274565b610a9c565b005b6103b260048036038101906103ad9190613274565b610af8565b6040516103bf9190613b6e565b60405180910390f35b6103d0610b69565b6040516103dd91906137f6565b60405180910390f35b61040060048036038101906103fb9190613274565b610b80565b60405161040d919061378f565b60405180910390f35b610430600480360381019061042b9190612faa565b610c32565b005b61044c60048036038101906104479190612faa565b610cc2565b6040516104599190613b6e565b60405180910390f35b61046a610d7a565b005b610486600480360381019061048191906131da565b610df4565b604051610493919061378f565b60405180910390f35b6104b660048036038101906104b1919061319a565b610e23565b6040516104c391906137f6565b60405180910390f35b6104d4610e8d565b6040516104e1919061382c565b60405180910390f35b6104f2610f1f565b6040516104ff9190613811565b60405180910390f35b610522600480360381019061051d91906130ed565b610f26565b005b61053e6004803603810190610539919061306a565b6110a7565b005b61055a60048036038101906105559190613274565b611109565b604051610567919061382c565b60405180910390f35b61058a6004803603810190610585919061316d565b6111b0565b6040516105979190613b6e565b60405180910390f35b6105a86111d4565b6040516105b59190613811565b60405180910390f35b6105d860048036038101906105d3919061319a565b6111f8565b005b6105e261122c565b6040516105ef9190613811565b60405180910390f35b610612600480360381019061060d9190612fd7565b611250565b60405161061f91906137f6565b60405180910390f35b600061063382611322565b9050919050565b60606002805461064990613e21565b80601f016020809104026020016040519081016040528092919081815260200182805461067590613e21565b80156106c25780601f10610697576101008083540402835291602001916106c2565b820191906000526020600020905b8154815290600101906020018083116106a557829003601f168201915b5050505050905090565b60006106d78261139c565b610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d90613a2e565b60405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061075c82610b80565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490613a8e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107ec611408565b73ffffffffffffffffffffffffffffffffffffffff16148061081b575061081a81610815611408565b611250565b5b61085a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610851906139ae565b60405180910390fd5b6108648383611410565b505050565b6000600a80549050905090565b610887610881611408565b826114c9565b6108c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bd90613aae565b60405180910390fd5b6108d18383836115a7565b505050565b6000806000838152602001908152602001600020600101549050919050565b6108ff8282611803565b61092481600160008581526020019081526020016000206112f290919063ffffffff16565b505050565b600061093483610cc2565b8210610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906138ae565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6109d8828261182c565b6109fd81600160008581526020019081526020016000206118af90919063ffffffff16565b505050565b610a337f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a2e611408565b610e23565b610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6990613b2e565b60405180910390fd5b610a7a6118df565b565b610a97838383604051806020016040528060008152506110a7565b505050565b610aad610aa7611408565b826114c9565b610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae390613b0e565b60405180910390fd5b610af581611981565b50565b6000610b02610869565b8210610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a90613ace565b60405180910390fd5b600a8281548110610b5757610b56613fba565b5b90600052602060002001549050919050565b6000600c60009054906101000a900460ff16905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c20906139ee565b60405180910390fd5b80915050919050565b610c637f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c5e611408565b610e23565b610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9990613aee565b60405180910390fd5b610cb581610cb0600d611a92565b611aa0565b610cbf600d611c6e565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a906139ce565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610dab7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610da6611408565b610e23565b610dea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de19061390e565b60405180910390fd5b610df2611c84565b565b6000610e1b8260016000868152602001908152602001600020611d2790919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060038054610e9c90613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec890613e21565b8015610f155780601f10610eea57610100808354040283529160200191610f15565b820191906000526020600020905b815481529060010190602001808311610ef857829003601f168201915b5050505050905090565b6000801b81565b610f2e611408565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f939061394e565b60405180910390fd5b8060076000610fa9611408565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611056611408565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161109b91906137f6565b60405180910390a35050565b6110b86110b2611408565b836114c9565b6110f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ee90613aae565b60405180910390fd5b61110384848484611d41565b50505050565b60606111148261139c565b611153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114a90613a6e565b60405180910390fd5b600061115d611d9d565b9050600081511161117d57604051806020016040528060008152506111a8565b8061118784611e2f565b604051602001611198929190613731565b6040516020818303038152906040525b915050919050565b60006111cd60016000848152602001908152602001600020611f90565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6112028282611fa5565b61122781600160008581526020019081526020016000206118af90919063ffffffff16565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6112ee8282611fce565b5050565b600061131a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6120ae565b905092915050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061139557506113948261211e565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661148383610b80565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006114d48261139c565b611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a9061396e565b60405180910390fd5b600061151e83610b80565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061158d57508373ffffffffffffffffffffffffffffffffffffffff16611575846106cc565b73ffffffffffffffffffffffffffffffffffffffff16145b8061159e575061159d8185611250565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166115c782610b80565b73ffffffffffffffffffffffffffffffffffffffff161461161d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161490613a4e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561168d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116849061392e565b60405180910390fd5b611698838383612200565b6116a3600082611410565b6001600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116f39190613d03565b925050819055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461174a9190613c22565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61180c826108d6565b61181d81611818611408565b612210565b6118278383611fce565b505050565b611834611408565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189890613b4e565b60405180910390fd5b6118ab82826122ad565b5050565b60006118d7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61238e565b905092915050565b6118e7610b69565b611926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191d9061388e565b60405180910390fd5b6000600c60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61196a611408565b604051611977919061378f565b60405180910390a1565b600061198c82610b80565b905061199a81600084612200565b6119a5600083611410565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119f59190613d03565b925050819055506004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0790613a0e565b60405180910390fd5b611b198161139c565b15611b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b50906138ee565b60405180910390fd5b611b6560008383612200565b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bb59190613c22565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b611c8c610b69565b15611ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc39061398e565b60405180910390fd5b6001600c60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d10611408565b604051611d1d919061378f565b60405180910390a1565b6000611d3683600001836124a2565b60001c905092915050565b611d4c8484846115a7565b611d58848484846124cd565b611d97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8e906138ce565b60405180910390fd5b50505050565b6060600e8054611dac90613e21565b80601f0160208091040260200160405190810160405280929190818152602001828054611dd890613e21565b8015611e255780601f10611dfa57610100808354040283529160200191611e25565b820191906000526020600020905b815481529060010190602001808311611e0857829003601f168201915b5050505050905090565b60606000821415611e77576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611f8b565b600082905060005b60008214611ea9578080611e9290613e84565b915050600a82611ea29190613c78565b9150611e7f565b60008167ffffffffffffffff811115611ec557611ec4613fe9565b5b6040519080825280601f01601f191660200182016040528015611ef75781602001600182028036833780820191505090505b5090505b60008514611f8457600182611f109190613d03565b9150600a85611f1f9190613ecd565b6030611f2b9190613c22565b60f81b818381518110611f4157611f40613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611f7d9190613c78565b9450611efb565b8093505050505b919050565b6000611f9e82600001612664565b9050919050565b611fae826108d6565b611fbf81611fba611408565b612210565b611fc983836122ad565b505050565b611fd88282610e23565b6120aa57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061204f611408565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006120ba8383612675565b612113578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612118565b600090505b92915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806121e957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806121f957506121f882612698565b5b9050919050565b61220b838383612712565b505050565b61221a8282610e23565b6122a95761223f8173ffffffffffffffffffffffffffffffffffffffff16601461276a565b61224d8360001c602061276a565b60405160200161225e929190613755565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a0919061382c565b60405180910390fd5b5050565b6122b78282610e23565b1561238a57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061232f611408565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080836001016000848152602001908152602001600020549050600081146124965760006001826123c09190613d03565b90506000600186600001805490506123d89190613d03565b90508181146124475760008660000182815481106123f9576123f8613fba565b5b906000526020600020015490508087600001848154811061241d5761241c613fba565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061245b5761245a613f8b565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061249c565b60009150505b92915050565b60008260000182815481106124ba576124b9613fba565b5b9060005260206000200154905092915050565b60006124ee8473ffffffffffffffffffffffffffffffffffffffff166129a6565b15612657578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612517611408565b8786866040518563ffffffff1660e01b815260040161253994939291906137aa565b602060405180830381600087803b15801561255357600080fd5b505af192505050801561258457506040513d601f19601f820116820180604052508101906125819190613247565b60015b612607573d80600081146125b4576040519150601f19603f3d011682016040523d82523d6000602084013e6125b9565b606091505b506000815114156125ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125f6906138ce565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061265c565b600190505b949350505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061270b575061270a826129b9565b5b9050919050565b61271d838383612a33565b612725610b69565b15612765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161275c9061386e565b60405180910390fd5b505050565b60606000600283600261277d9190613ca9565b6127879190613c22565b67ffffffffffffffff8111156127a05761279f613fe9565b5b6040519080825280601f01601f1916602001820160405280156127d25781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061280a57612809613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061286e5761286d613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026128ae9190613ca9565b6128b89190613c22565b90505b6001811115612958577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106128fa576128f9613fba565b5b1a60f81b82828151811061291157612910613fba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061295190613df7565b90506128bb565b506000841461299c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129939061384e565b60405180910390fd5b8091505092915050565b600080823b905060008111915050919050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612a2c5750612a2b82612b47565b5b9050919050565b612a3e838383612bb1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612a8157612a7c81612bb6565b612ac0565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612abf57612abe8382612bff565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612b0357612afe81612d6c565b612b42565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612b4157612b408282612e3d565b5b5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612c0c84610cc2565b612c169190613d03565b9050600060096000848152602001908152602001600020549050818114612cfb576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816009600083815260200190815260200160002081905550505b6009600084815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600a80549050612d809190613d03565b90506000600b60008481526020019081526020016000205490506000600a8381548110612db057612daf613fba565b5b9060005260206000200154905080600a8381548110612dd257612dd1613fba565b5b906000526020600020018190555081600b600083815260200190815260200160002081905550600b600085815260200190815260200160002060009055600a805480612e2157612e20613f8b565b5b6001900381819060005260206000200160009055905550505050565b6000612e4883610cc2565b905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806009600084815260200190815260200160002081905550505050565b6000612ecf612eca84613bae565b613b89565b905082815260208101848484011115612eeb57612eea61401d565b5b612ef6848285613db5565b509392505050565b600081359050612f0d81614762565b92915050565b600081359050612f2281614779565b92915050565b600081359050612f3781614790565b92915050565b600081359050612f4c816147a7565b92915050565b600081519050612f61816147a7565b92915050565b600082601f830112612f7c57612f7b614018565b5b8135612f8c848260208601612ebc565b91505092915050565b600081359050612fa4816147be565b92915050565b600060208284031215612fc057612fbf614027565b5b6000612fce84828501612efe565b91505092915050565b60008060408385031215612fee57612fed614027565b5b6000612ffc85828601612efe565b925050602061300d85828601612efe565b9150509250929050565b6000806000606084860312156130305761302f614027565b5b600061303e86828701612efe565b935050602061304f86828701612efe565b925050604061306086828701612f95565b9150509250925092565b6000806000806080858703121561308457613083614027565b5b600061309287828801612efe565b94505060206130a387828801612efe565b93505060406130b487828801612f95565b925050606085013567ffffffffffffffff8111156130d5576130d4614022565b5b6130e187828801612f67565b91505092959194509250565b6000806040838503121561310457613103614027565b5b600061311285828601612efe565b925050602061312385828601612f13565b9150509250929050565b6000806040838503121561314457613143614027565b5b600061315285828601612efe565b925050602061316385828601612f95565b9150509250929050565b60006020828403121561318357613182614027565b5b600061319184828501612f28565b91505092915050565b600080604083850312156131b1576131b0614027565b5b60006131bf85828601612f28565b92505060206131d085828601612efe565b9150509250929050565b600080604083850312156131f1576131f0614027565b5b60006131ff85828601612f28565b925050602061321085828601612f95565b9150509250929050565b6000602082840312156132305761322f614027565b5b600061323e84828501612f3d565b91505092915050565b60006020828403121561325d5761325c614027565b5b600061326b84828501612f52565b91505092915050565b60006020828403121561328a57613289614027565b5b600061329884828501612f95565b91505092915050565b6132aa81613d37565b82525050565b6132b981613d49565b82525050565b6132c881613d55565b82525050565b60006132d982613bdf565b6132e38185613bf5565b93506132f3818560208601613dc4565b6132fc8161402c565b840191505092915050565b600061331282613bea565b61331c8185613c06565b935061332c818560208601613dc4565b6133358161402c565b840191505092915050565b600061334b82613bea565b6133558185613c17565b9350613365818560208601613dc4565b80840191505092915050565b600061337e602083613c06565b91506133898261403d565b602082019050919050565b60006133a1602b83613c06565b91506133ac82614066565b604082019050919050565b60006133c4601483613c06565b91506133cf826140b5565b602082019050919050565b60006133e7602b83613c06565b91506133f2826140de565b604082019050919050565b600061340a603283613c06565b91506134158261412d565b604082019050919050565b600061342d601c83613c06565b91506134388261417c565b602082019050919050565b6000613450603e83613c06565b915061345b826141a5565b604082019050919050565b6000613473602483613c06565b915061347e826141f4565b604082019050919050565b6000613496601983613c06565b91506134a182614243565b602082019050919050565b60006134b9602c83613c06565b91506134c48261426c565b604082019050919050565b60006134dc601083613c06565b91506134e7826142bb565b602082019050919050565b60006134ff603883613c06565b915061350a826142e4565b604082019050919050565b6000613522602a83613c06565b915061352d82614333565b604082019050919050565b6000613545602983613c06565b915061355082614382565b604082019050919050565b6000613568602083613c06565b9150613573826143d1565b602082019050919050565b600061358b602c83613c06565b9150613596826143fa565b604082019050919050565b60006135ae602983613c06565b91506135b982614449565b604082019050919050565b60006135d1602f83613c06565b91506135dc82614498565b604082019050919050565b60006135f4602183613c06565b91506135ff826144e7565b604082019050919050565b6000613617603183613c06565b915061362282614536565b604082019050919050565b600061363a602c83613c06565b915061364582614585565b604082019050919050565b600061365d601783613c17565b9150613668826145d4565b601782019050919050565b6000613680603d83613c06565b915061368b826145fd565b604082019050919050565b60006136a3603083613c06565b91506136ae8261464c565b604082019050919050565b60006136c6604083613c06565b91506136d18261469b565b604082019050919050565b60006136e9601183613c17565b91506136f4826146ea565b601182019050919050565b600061370c602f83613c06565b915061371782614713565b604082019050919050565b61372b81613dab565b82525050565b600061373d8285613340565b91506137498284613340565b91508190509392505050565b600061376082613650565b915061376c8285613340565b9150613777826136dc565b91506137838284613340565b91508190509392505050565b60006020820190506137a460008301846132a1565b92915050565b60006080820190506137bf60008301876132a1565b6137cc60208301866132a1565b6137d96040830185613722565b81810360608301526137eb81846132ce565b905095945050505050565b600060208201905061380b60008301846132b0565b92915050565b600060208201905061382660008301846132bf565b92915050565b600060208201905081810360008301526138468184613307565b905092915050565b6000602082019050818103600083015261386781613371565b9050919050565b6000602082019050818103600083015261388781613394565b9050919050565b600060208201905081810360008301526138a7816133b7565b9050919050565b600060208201905081810360008301526138c7816133da565b9050919050565b600060208201905081810360008301526138e7816133fd565b9050919050565b6000602082019050818103600083015261390781613420565b9050919050565b6000602082019050818103600083015261392781613443565b9050919050565b6000602082019050818103600083015261394781613466565b9050919050565b6000602082019050818103600083015261396781613489565b9050919050565b60006020820190508181036000830152613987816134ac565b9050919050565b600060208201905081810360008301526139a7816134cf565b9050919050565b600060208201905081810360008301526139c7816134f2565b9050919050565b600060208201905081810360008301526139e781613515565b9050919050565b60006020820190508181036000830152613a0781613538565b9050919050565b60006020820190508181036000830152613a278161355b565b9050919050565b60006020820190508181036000830152613a478161357e565b9050919050565b60006020820190508181036000830152613a67816135a1565b9050919050565b60006020820190508181036000830152613a87816135c4565b9050919050565b60006020820190508181036000830152613aa7816135e7565b9050919050565b60006020820190508181036000830152613ac78161360a565b9050919050565b60006020820190508181036000830152613ae78161362d565b9050919050565b60006020820190508181036000830152613b0781613673565b9050919050565b60006020820190508181036000830152613b2781613696565b9050919050565b60006020820190508181036000830152613b47816136b9565b9050919050565b60006020820190508181036000830152613b67816136ff565b9050919050565b6000602082019050613b836000830184613722565b92915050565b6000613b93613ba4565b9050613b9f8282613e53565b919050565b6000604051905090565b600067ffffffffffffffff821115613bc957613bc8613fe9565b5b613bd28261402c565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613c2d82613dab565b9150613c3883613dab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c6d57613c6c613efe565b5b828201905092915050565b6000613c8382613dab565b9150613c8e83613dab565b925082613c9e57613c9d613f2d565b5b828204905092915050565b6000613cb482613dab565b9150613cbf83613dab565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613cf857613cf7613efe565b5b828202905092915050565b6000613d0e82613dab565b9150613d1983613dab565b925082821015613d2c57613d2b613efe565b5b828203905092915050565b6000613d4282613d8b565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613de2578082015181840152602081019050613dc7565b83811115613df1576000848401525b50505050565b6000613e0282613dab565b91506000821415613e1657613e15613efe565b5b600182039050919050565b60006002820490506001821680613e3957607f821691505b60208210811415613e4d57613e4c613f5c565b5b50919050565b613e5c8261402c565b810181811067ffffffffffffffff82111715613e7b57613e7a613fe9565b5b80604052505050565b6000613e8f82613dab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613ec257613ec1613efe565b5b600182019050919050565b6000613ed882613dab565b9150613ee383613dab565b925082613ef357613ef2613f2d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f4552433732315061757361626c653a20746f6b656e207472616e73666572207760008201527f68696c6520706175736564000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d75737420686176652070617573657220726f6c6520746f2070617573650000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d7573742068617665206d696e74657220726f6c6520746f206d696e74000000602082015250565b7f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656400000000000000000000000000000000602082015250565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d75737420686176652070617573657220726f6c6520746f20756e7061757365602082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b61476b81613d37565b811461477657600080fd5b50565b61478281613d49565b811461478d57600080fd5b50565b61479981613d55565b81146147a457600080fd5b50565b6147b081613d5f565b81146147bb57600080fd5b50565b6147c781613dab565b81146147d257600080fd5b5056fea26469706673582212207e3e1d1156791888b457392dde8daec277103602ac18689daae187d6e3af592e64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "949:3213:153:-:0;;;1617:328;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1736:4;1742:6;1390:5:144;1382;:13;;;;;;;;;;;;:::i;:::-;;1415:7;1405;:17;;;;;;;;;;;;:::i;:::-;;1316:113;;934:5:114;924:7;;:15;;;;;;;;;;;;;;;;;;1776:12:153::1;1760:13;:28;;;;;;;;;;;;:::i;:::-;;1799:44;2441:4:1;1810:18:153::0;::::1;1830:12;:10;;;:12;;:::i;:::-;1799:10;;;:44;;:::i;:::-;1854:37;1181:24;1878:12;:10;;;:12;;:::i;:::-;1854:10;;;:37;;:::i;:::-;1901;1249:24;1925:12;:10;;;:12;;:::i;:::-;1901:10;;;:37;;:::i;:::-;1617:328:::0;;;949:3213;;587:96:162;640:7;666:10;659:17;;587:96;:::o;2910:166:2:-;2997:31;3014:4;3020:7;2997:16;;;;;:31;;:::i;:::-;3038;3061:7;3038:12;:18;3051:4;3038:18;;;;;;;;;;;:22;;;;;;:31;;;;:::i;:::-;;2910:166;;:::o;7614:110:1:-;7692:25;7703:4;7709:7;7692:10;;;:25;;:::i;:::-;7614:110;;:::o;7545:150:189:-;7615:4;7638:50;7643:3;:10;;7679:5;7663:23;;7655:32;;7638:4;;;:50;;:::i;:::-;7631:57;;7545:150;;;;:::o;8102:224:1:-;8176:22;8184:4;8190:7;8176;;;:22;;:::i;:::-;8171:149;;8246:4;8214:6;:12;8221:4;8214:12;;;;;;;;;;;:20;;:29;8235:7;8214:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8296:12;:10;;;:12;;:::i;:::-;8269:40;;8287:7;8269:40;;8281:4;8269:40;;;;;;;;;;8171:149;8102:224;;:::o;1630:404:189:-;1693:4;1714:21;1724:3;1729:5;1714:9;;;:21;;:::i;:::-;1709:319;;1751:3;:11;;1768:5;1751:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:3;:11;;:18;;;;1909:3;:12;;:19;1922:5;1909:19;;;;;;;;;;;:40;;;;1970:4;1963:11;;;;1709:319;2012:5;2005:12;;1630:404;;;;;:::o;4364:137:1:-;4442:4;4465:6;:12;4472:4;4465:12;;;;;;;;;;;:20;;:29;4486:7;4465:29;;;;;;;;;;;;;;;;;;;;;;;;;4458:36;;4364:137;;;;:::o;3671:127:189:-;3744:4;3790:1;3767:3;:12;;:19;3780:5;3767:19;;;;;;;;;;;;:24;;3760:31;;3671:127;;;;:::o;949:3213:153:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:191:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:1182::-;927:6;935;943;992:2;980:9;971:7;967:23;963:32;960:119;;;998:79;;:::i;:::-;960:119;1139:1;1128:9;1124:17;1118:24;1169:18;1161:6;1158:30;1155:117;;;1191:79;;:::i;:::-;1155:117;1296:74;1362:7;1353:6;1342:9;1338:22;1296:74;:::i;:::-;1286:84;;1089:291;1440:2;1429:9;1425:18;1419:25;1471:18;1463:6;1460:30;1457:117;;;1493:79;;:::i;:::-;1457:117;1598:74;1664:7;1655:6;1644:9;1640:22;1598:74;:::i;:::-;1588:84;;1390:292;1742:2;1731:9;1727:18;1721:25;1773:18;1765:6;1762:30;1759:117;;;1795:79;;:::i;:::-;1759:117;1900:74;1966:7;1957:6;1946:9;1942:22;1900:74;:::i;:::-;1890:84;;1692:292;809:1182;;;;;:::o;1997:129::-;2031:6;2058:20;;:::i;:::-;2048:30;;2087:33;2115:4;2107:6;2087:33;:::i;:::-;1997:129;;;:::o;2132:75::-;2165:6;2198:2;2192:9;2182:19;;2132:75;:::o;2213:308::-;2275:4;2365:18;2357:6;2354:30;2351:56;;;2387:18;;:::i;:::-;2351:56;2425:29;2447:6;2425:29;:::i;:::-;2417:37;;2509:4;2503;2499:15;2491:23;;2213:308;;;:::o;2527:307::-;2595:1;2605:113;2619:6;2616:1;2613:13;2605:113;;;2704:1;2699:3;2695:11;2689:18;2685:1;2680:3;2676:11;2669:39;2641:2;2638:1;2634:10;2629:15;;2605:113;;;2736:6;2733:1;2730:13;2727:101;;;2816:1;2807:6;2802:3;2798:16;2791:27;2727:101;2576:258;2527:307;;;:::o;2840:320::-;2884:6;2921:1;2915:4;2911:12;2901:22;;2968:1;2962:4;2958:12;2989:18;2979:81;;3045:4;3037:6;3033:17;3023:27;;2979:81;3107:2;3099:6;3096:14;3076:18;3073:38;3070:84;;;3126:18;;:::i;:::-;3070:84;2891:269;2840:320;;;:::o;3166:281::-;3249:27;3271:4;3249:27;:::i;:::-;3241:6;3237:40;3379:6;3367:10;3364:22;3343:18;3331:10;3328:34;3325:62;3322:88;;;3390:18;;:::i;:::-;3322:88;3430:10;3426:2;3419:22;3209:238;3166:281;;:::o;3453:180::-;3501:77;3498:1;3491:88;3598:4;3595:1;3588:15;3622:4;3619:1;3612:15;3639:180;3687:77;3684:1;3677:88;3784:4;3781:1;3774:15;3808:4;3805:1;3798:15;3825:117;3934:1;3931;3924:12;3948:117;4057:1;4054;4047:12;4071:117;4180:1;4177;4170:12;4194:117;4303:1;4300;4293:12;4317:102;4358:6;4409:2;4405:7;4400:2;4393:5;4389:14;4385:28;4375:38;;4317:102;;;:::o;949:3213:153:-;;;;;;;",
  "deployedSourceMap": "949:3213:153:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3914:246;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:98:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1535:111:148;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4789:330:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5447:121:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2144:162:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1211:253:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2651:171:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3426:182:153;;;:::i;:::-;;5185:179:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;451:241:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1718:230:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1041:84:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2117:235:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2438:400:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1855:205:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3042:176:153;;;:::i;:::-;;1614:143:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4364:137:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2576:102:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2396:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4209:290:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5430:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2744:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1925:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1143:62:153;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2394:167:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1211:62:153;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4565:162:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3914:246:153;4090:4;4117:36;4141:11;4117:23;:36::i;:::-;4110:43;;3914:246;;;:::o;2414:98:144:-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4111:15;:24;4127:7;4111:24;;;;;;;;;;;;;;;;;;;;;4104:31;;3925:217;;;:::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;3600:11;;:2;:11;;;;3592:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3697:5;3681:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3706:37;3723:5;3730:12;:10;:12::i;:::-;3706:16;:37::i;:::-;3681:62;3660:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;1535:111:148:-;1596:7;1622:10;:17;;;;1615:24;;1535:111;:::o;4789:330:144:-;4978:41;4997:12;:10;:12::i;:::-;5011:7;4978:18;:41::i;:::-;4970:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;:::-;4789:330;;;:::o;5447:121:1:-;5513:7;5539:6;:12;5546:4;5539:12;;;;;;;;;;;:22;;;5532:29;;5447:121;;;:::o;2144:162:2:-;2228:30;2244:4;2250:7;2228:15;:30::i;:::-;2268:31;2291:7;2268:12;:18;2281:4;2268:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;2144:162;;:::o;1211:253:148:-;1308:7;1343:23;1360:5;1343:16;:23::i;:::-;1335:5;:31;1327:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1431:12;:19;1444:5;1431:19;;;;;;;;;;;;;;;:26;1451:5;1431:26;;;;;;;;;;;;1424:33;;1211:253;;;;:::o;2651:171:2:-;2738:33;2757:4;2763:7;2738:18;:33::i;:::-;2781:34;2807:7;2781:12;:18;2794:4;2781:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2651:171;;:::o;3426:182:153:-;3478:34;1249:24;3499:12;:10;:12::i;:::-;3478:7;:34::i;:::-;3470:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3591:10;:8;:10::i;:::-;3426:182::o;5185:179:144:-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;:::-;5185:179;;;:::o;451:241:147:-;567:41;586:12;:10;:12::i;:::-;600:7;567:18;:41::i;:::-;559:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;671:14;677:7;671:5;:14::i;:::-;451:241;:::o;1718:230:148:-;1793:7;1828:30;:28;:30::i;:::-;1820:5;:38;1812:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1924:10;1935:5;1924:17;;;;;;;;:::i;:::-;;;;;;;;;;1917:24;;1718:230;;;:::o;1041:84:114:-;1088:4;1111:7;;;;;;;;;;;1104:14;;1041:84;:::o;2117:235:144:-;2189:7;2208:13;2224:7;:16;2232:7;2224:16;;;;;;;;;;;;;;;;;;;;;2208:32;;2275:1;2258:19;;:5;:19;;;;2250:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2340:5;2333:12;;;2117:235;;;:::o;2438:400:153:-;2497:34;1181:24;2518:12;:10;:12::i;:::-;2497:7;:34::i;:::-;2489:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;2758:36;2764:2;2768:25;:15;:23;:25::i;:::-;2758:5;:36::i;:::-;2804:27;:15;:25;:27::i;:::-;2438:400;:::o;1855:205:144:-;1927:7;1971:1;1954:19;;:5;:19;;;;1946:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2037:9;:16;2047:5;2037:16;;;;;;;;;;;;;;;;2030:23;;1855:205;;;:::o;3042:176:153:-;3092:34;1249:24;3113:12;:10;:12::i;:::-;3092:7;:34::i;:::-;3084:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3203:8;:6;:8::i;:::-;3042:176::o;1614:143:2:-;1696:7;1722:28;1744:5;1722:12;:18;1735:4;1722:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1715:35;;1614:143;;;;:::o;4364:137:1:-;4442:4;4465:6;:12;4472:4;4465:12;;;;;;;;;;;:20;;:29;4486:7;4465:29;;;;;;;;;;;;;;;;;;;;;;;;;4458:36;;4364:137;;;;:::o;2576:102:144:-;2632:13;2664:7;2657:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2576:102;:::o;2396:49:1:-;2441:4;2396:49;;;:::o;4209:290:144:-;4323:12;:10;:12::i;:::-;4311:24;;:8;:24;;;;4303:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4421:8;4376:18;:32;4395:12;:10;:12::i;:::-;4376:32;;;;;;;;;;;;;;;:42;4409:8;4376:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4473:8;4444:48;;4459:12;:10;:12::i;:::-;4444:48;;;4483:8;4444:48;;;;;;:::i;:::-;;;;;;;;4209:290;;:::o;5430:320::-;5599:41;5618:12;:10;:12::i;:::-;5632:7;5599:18;:41::i;:::-;5591:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;2744:329::-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2929:21;2953:10;:8;:10::i;:::-;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;;;2744:329;;;:::o;1925:132:2:-;1997:7;2023:27;:12;:18;2036:4;2023:18;;;;;;;;;;;:25;:27::i;:::-;2016:34;;1925:132;;;:::o;1143:62:153:-;1181:24;1143:62;:::o;2394:167:2:-;2479:31;2496:4;2502:7;2479:16;:31::i;:::-;2520:34;2546:7;2520:12;:18;2533:4;2520:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2394:167;;:::o;1211:62:153:-;1249:24;1211:62;:::o;4565:162:144:-;4662:4;4685:18;:25;4704:5;4685:25;;;;;;;;;;;;;;;:35;4711:8;4685:35;;;;;;;;;;;;;;;;;;;;;;;;;4678:42;;4565:162;;;;:::o;7614:110:1:-;7692:25;7703:4;7709:7;7692:10;:25::i;:::-;7614:110;;:::o;7545:150:189:-;7615:4;7638:50;7643:3;:10;;7679:5;7663:23;;7655:32;;7638:4;:50::i;:::-;7631:57;;7545:150;;;;:::o;910:222:148:-;1012:4;1050:35;1035:50;;;:11;:50;;;;:90;;;;1089:36;1113:11;1089:23;:36::i;:::-;1035:90;1028:97;;910:222;;;:::o;7222:125:144:-;7287:4;7338:1;7310:30;;:7;:16;7318:7;7310:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7303:37;;7222:125;;;:::o;587:96:162:-;640:7;666:10;659:17;;587:96;:::o;11073:171:144:-;11174:2;11147:15;:24;11163:7;11147:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11229:7;11225:2;11191:46;;11200:23;11215:7;11200:14;:23::i;:::-;11191:46;;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;7754:16;;:7;:16;;;:51;;;;7798:7;7774:31;;:20;7786:7;7774:11;:20::i;:::-;:31;;;7754:51;:87;;;;7809:32;7826:5;7833:7;7809:16;:32::i;:::-;7754:87;7746:96;;;7505:344;;;;:::o;10402:560::-;10556:4;10529:31;;:23;10544:7;10529:14;:23::i;:::-;:31;;;10521:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10638:1;10624:16;;:2;:16;;;;10616:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10692:39;10713:4;10719:2;10723:7;10692:20;:39::i;:::-;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;10852:1;10833:9;:15;10843:4;10833:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10880:1;10863:9;:13;10873:2;10863:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10910:2;10891:7;:16;10899:7;10891:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10947:7;10943:2;10928:27;;10937:4;10928:27;;;;;;;;;;;;10402:560;;;:::o;5818:145:1:-;5901:18;5914:4;5901:12;:18::i;:::-;3960:30;3971:4;3977:12;:10;:12::i;:::-;3960:10;:30::i;:::-;5931:25:::1;5942:4;5948:7;5931:10;:25::i;:::-;5818:145:::0;;;:::o;6835:214::-;6941:12;:10;:12::i;:::-;6930:23;;:7;:23;;;6922:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;7016:26;7028:4;7034:7;7016:11;:26::i;:::-;6835:214;;:::o;7863:156:189:-;7936:4;7959:53;7967:3;:10;;8003:5;7987:23;;7979:32;;7959:7;:53::i;:::-;7952:60;;7863:156;;;;:::o;2053:117:114:-;1620:8;:6;:8::i;:::-;1612:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2121:5:::1;2111:7;;:15;;;;;;;;;;;;;;;;;;2141:22;2150:12;:10;:12::i;:::-;2141:22;;;;;;:::i;:::-;;;;;;;;2053:117::o:0;9730:348:144:-;9789:13;9805:23;9820:7;9805:14;:23::i;:::-;9789:39;;9839:48;9860:5;9875:1;9879:7;9839:20;:48::i;:::-;9925:29;9942:1;9946:7;9925:8;:29::i;:::-;9985:1;9965:9;:16;9975:5;9965:16;;;;;;;;;;;;;;;;:21;;;;;;;:::i;:::-;;;;;;;;10003:7;:16;10011:7;10003:16;;;;;;;;;;;;9996:23;;;;;;;;;;;10063:7;10059:1;10035:36;;10044:5;10035:36;;;;;;;;;;;;9779:299;9730:348;:::o;773:112:163:-;838:7;864;:14;;;857:21;;773:112;;;:::o;9141:372:144:-;9234:1;9220:16;;:2;:16;;;;9212:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9352:45;9381:1;9385:2;9389:7;9352:20;:45::i;:::-;9425:1;9408:9;:13;9418:2;9408:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9455:2;9436:7;:16;9444:7;9436:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9498:7;9494:2;9473:33;;9490:1;9473:33;;;;;;;;;;;;9141:372;;:::o;891:123:163:-;996:1;978:7;:14;;;:19;;;;;;;;;;;891:123;:::o;1806:115:114:-;1355:8;:6;:8::i;:::-;1354:9;1346:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1875:4:::1;1865:7;;:14;;;;;;;;;;;;;;;;;;1894:20;1901:12;:10;:12::i;:::-;1894:20;;;;;;:::i;:::-;;;;;;;;1806:115::o:0;8803:156:189:-;8877:7;8927:22;8931:3;:10;;8943:5;8927:3;:22::i;:::-;8919:31;;8896:56;;8803:156;;;;:::o;6612:307:144:-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6612:307;;;;:::o;1951:112:153:-;2011:13;2043;2036:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:112;:::o;275:703:167:-;331:13;557:1;548:5;:10;544:51;;;574:10;;;;;;;;;;;;;;;;;;;;;544:51;604:12;619:5;604:20;;634:14;658:75;673:1;665:4;:9;658:75;;690:8;;;;;:::i;:::-;;;;720:2;712:10;;;;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:39;;791:150;807:1;798:5;:10;791:150;;834:1;824:11;;;;;:::i;:::-;;;900:2;892:5;:10;;;;:::i;:::-;879:2;:24;;;;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;928:2;919:11;;;;;:::i;:::-;;;791:150;;;964:6;950:21;;;;;275:703;;;;:::o;8346:115:189:-;8409:7;8435:19;8443:3;:10;;8435:7;:19::i;:::-;8428:26;;8346:115;;;:::o;6197:147:1:-;6281:18;6294:4;6281:12;:18::i;:::-;3960:30;3971:4;3977:12;:10;:12::i;:::-;3960:10;:30::i;:::-;6311:26:::1;6323:4;6329:7;6311:11;:26::i;:::-;6197:147:::0;;;:::o;8102:224::-;8176:22;8184:4;8190:7;8176;:22::i;:::-;8171:149;;8246:4;8214:6;:12;8221:4;8214:12;;;;;;;;;;;:20;;:29;8235:7;8214:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8296:12;:10;:12::i;:::-;8269:40;;8287:7;8269:40;;8281:4;8269:40;;;;;;;;;;8171:149;8102:224;;:::o;1630:404:189:-;1693:4;1714:21;1724:3;1729:5;1714:9;:21::i;:::-;1709:319;;1751:3;:11;;1768:5;1751:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:3;:11;;:18;;;;1909:3;:12;;:19;1922:5;1909:19;;;;;;;;;;;:40;;;;1970:4;1963:11;;;;1709:319;2012:5;2005:12;;1630:404;;;;;:::o;1496:300:144:-;1598:4;1648:25;1633:40;;;:11;:40;;;;:104;;;;1704:33;1689:48;;;:11;:48;;;;1633:104;:156;;;;1753:36;1777:11;1753:23;:36::i;:::-;1633:156;1614:175;;1496:300;;;:::o;3614:233:153:-;3795:45;3822:4;3828:2;3832:7;3795:26;:45::i;:::-;3614:233;;;:::o;4782:484:1:-;4862:22;4870:4;4876:7;4862;:22::i;:::-;4857:403;;5045:41;5073:7;5045:41;;5083:2;5045:19;:41::i;:::-;5157:38;5185:4;5177:13;;5192:2;5157:19;:38::i;:::-;4952:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4900:349;;;;;;;;;;;:::i;:::-;;;;;;;;4857:403;4782:484;;:::o;8332:225::-;8406:22;8414:4;8420:7;8406;:22::i;:::-;8402:149;;;8476:5;8444:6;:12;8451:4;8444:12;;;;;;;;;;;:20;;:29;8465:7;8444:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8527:12;:10;:12::i;:::-;8500:40;;8518:7;8500:40;;8512:4;8500:40;;;;;;;;;;8402:149;8332:225;;:::o;2202:1388:189:-;2268:4;2384:18;2405:3;:12;;:19;2418:5;2405:19;;;;;;;;;;;;2384:40;;2453:1;2439:10;:15;2435:1149;;2808:21;2845:1;2832:10;:14;;;;:::i;:::-;2808:38;;2860:17;2901:1;2880:3;:11;;:18;;;;:22;;;;:::i;:::-;2860:42;;2934:13;2921:9;:26;2917:398;;2967:17;2987:3;:11;;2999:9;2987:22;;;;;;;;:::i;:::-;;;;;;;;;;2967:42;;3138:9;3109:3;:11;;3121:13;3109:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3247:10;3221:3;:12;;:23;3234:9;3221:23;;;;;;;;;;;:36;;;;2949:366;2917:398;3393:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3485:3;:12;;:19;3498:5;3485:19;;;;;;;;;;;3478:26;;;3526:4;3519:11;;;;;;;2435:1149;3568:5;3561:12;;;2202:1388;;;;;:::o;4328:118::-;4395:7;4421:3;:11;;4433:5;4421:18;;;;;;;;:::i;:::-;;;;;;;;;;4414:25;;4328:118;;;;:::o;11797:778:144:-;11947:4;11967:15;:2;:13;;;:15::i;:::-;11963:606;;;12018:2;12002:36;;;12039:12;:10;:12::i;:::-;12053:4;12059:7;12068:5;12002:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12258:1;12241:6;:13;:18;12237:266;;;12283:60;;;;;;;;;;:::i;:::-;;;;;;;;12237:266;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;12134:41;;;12124:51;;;:6;:51;;;;12117:58;;;;;11963:606;12554:4;12547:11;;11797:778;;;;;;;:::o;3879:107:189:-;3935:7;3961:3;:11;;:18;;;;3954:25;;3879:107;;;:::o;3671:127::-;3744:4;3790:1;3767:3;:12;;:19;3780:5;3767:19;;;;;;;;;;;;:24;;3760:31;;3671:127;;;;:::o;817:212:2:-;902:4;940:42;925:57;;;:11;:57;;;;:97;;;;986:36;1010:11;986:23;:36::i;:::-;925:97;918:104;;817:212;;;:::o;594:267:149:-;733:45;760:4;766:2;770:7;733:26;:45::i;:::-;798:8;:6;:8::i;:::-;797:9;789:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;594:267;;;:::o;1535:441:167:-;1610:13;1635:19;1680:1;1671:6;1667:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1657:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:47;;1692:15;:6;1699:1;1692:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1717;:6;1724:1;1717:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1747:9;1772:1;1763:6;1759:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;1813:12;1834:3;1826:5;:11;1813:25;;;;;;;:::i;:::-;;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1862:1;1852:11;;;;;1782:3;;;;:::i;:::-;;;1742:132;;;;1900:1;1891:5;:10;1883:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1962:6;1948:21;;;1535:441;;;;:::o;718:377:160:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;4075:202:1:-;4160:4;4198:32;4183:47;;;:11;:47;;;;:87;;;;4234:36;4258:11;4234:23;:36::i;:::-;4183:87;4176:94;;4075:202;;;:::o;2544:572:148:-;2683:45;2710:4;2716:2;2720:7;2683:26;:45::i;:::-;2759:1;2743:18;;:4;:18;;;2739:183;;;2777:40;2809:7;2777:31;:40::i;:::-;2739:183;;;2846:2;2838:10;;:4;:10;;;2834:88;;2864:47;2897:4;2903:7;2864:32;:47::i;:::-;2834:88;2739:183;2949:1;2935:16;;:2;:16;;;2931:179;;;2967:45;3004:7;2967:36;:45::i;:::-;2931:179;;;3039:4;3033:10;;:2;:10;;;3029:81;;3059:40;3087:2;3091:7;3059:27;:40::i;:::-;3029:81;2931:179;2544:572;;;:::o;763:155:176:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;13131:122:144:-;;;;:::o;3822:161:148:-;3925:10;:17;;;;3898:15;:24;3914:7;3898:24;;;;;;;;;;;:44;;;;3952:10;3968:7;3952:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3822:161;:::o;4600:970::-;4862:22;4912:1;4887:22;4904:4;4887:16;:22::i;:::-;:26;;;;:::i;:::-;4862:51;;4923:18;4944:17;:26;4962:7;4944:26;;;;;;;;;;;;4923:47;;5088:14;5074:10;:28;5070:323;;5118:19;5140:12;:18;5153:4;5140:18;;;;;;;;;;;;;;;:34;5159:14;5140:34;;;;;;;;;;;;5118:56;;5222:11;5189:12;:18;5202:4;5189:18;;;;;;;;;;;;;;;:30;5208:10;5189:30;;;;;;;;;;;:44;;;;5338:10;5305:17;:30;5323:11;5305:30;;;;;;;;;;;:43;;;;5104:289;5070:323;5486:17;:26;5504:7;5486:26;;;;;;;;;;;5479:33;;;5529:12;:18;5542:4;5529:18;;;;;;;;;;;;;;;:34;5548:14;5529:34;;;;;;;;;;;5522:41;;;4681:889;;4600:970;;:::o;5858:1061::-;6107:22;6152:1;6132:10;:17;;;;:21;;;;:::i;:::-;6107:46;;6163:18;6184:15;:24;6200:7;6184:24;;;;;;;;;;;;6163:45;;6530:19;6552:10;6563:14;6552:26;;;;;;;;:::i;:::-;;;;;;;;;;6530:48;;6614:11;6589:10;6600;6589:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6724:10;6693:15;:28;6709:11;6693:28;;;;;;;;;;;:41;;;;6862:15;:24;6878:7;6862:24;;;;;;;;;;;6855:31;;;6896:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5929:990;;;5858:1061;:::o;3410:217::-;3494:14;3511:20;3528:2;3511:16;:20::i;:::-;3494:37;;3568:7;3541:12;:16;3554:2;3541:16;;;;;;;;;;;;;;;:24;3558:6;3541:24;;;;;;;;;;;:34;;;;3614:6;3585:17;:26;3603:7;3585:26;;;;;;;;;;;:35;;;;3484:143;3410:217;;:::o;7:410:191:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:139::-;753:5;791:6;778:20;769:29;;807:33;834:5;807:33;:::i;:::-;707:139;;;;:::o;852:137::-;897:5;935:6;922:20;913:29;;951:32;977:5;951:32;:::i;:::-;852:137;;;;:::o;995:141::-;1051:5;1082:6;1076:13;1067:22;;1098:32;1124:5;1098:32;:::i;:::-;995:141;;;;:::o;1155:338::-;1210:5;1259:3;1252:4;1244:6;1240:17;1236:27;1226:122;;1267:79;;:::i;:::-;1226:122;1384:6;1371:20;1409:78;1483:3;1475:6;1468:4;1460:6;1456:17;1409:78;:::i;:::-;1400:87;;1216:277;1155:338;;;;:::o;1499:139::-;1545:5;1583:6;1570:20;1561:29;;1599:33;1626:5;1599:33;:::i;:::-;1499:139;;;;:::o;1644:329::-;1703:6;1752:2;1740:9;1731:7;1727:23;1723:32;1720:119;;;1758:79;;:::i;:::-;1720:119;1878:1;1903:53;1948:7;1939:6;1928:9;1924:22;1903:53;:::i;:::-;1893:63;;1849:117;1644:329;;;;:::o;1979:474::-;2047:6;2055;2104:2;2092:9;2083:7;2079:23;2075:32;2072:119;;;2110:79;;:::i;:::-;2072:119;2230:1;2255:53;2300:7;2291:6;2280:9;2276:22;2255:53;:::i;:::-;2245:63;;2201:117;2357:2;2383:53;2428:7;2419:6;2408:9;2404:22;2383:53;:::i;:::-;2373:63;;2328:118;1979:474;;;;;:::o;2459:619::-;2536:6;2544;2552;2601:2;2589:9;2580:7;2576:23;2572:32;2569:119;;;2607:79;;:::i;:::-;2569:119;2727:1;2752:53;2797:7;2788:6;2777:9;2773:22;2752:53;:::i;:::-;2742:63;;2698:117;2854:2;2880:53;2925:7;2916:6;2905:9;2901:22;2880:53;:::i;:::-;2870:63;;2825:118;2982:2;3008:53;3053:7;3044:6;3033:9;3029:22;3008:53;:::i;:::-;2998:63;;2953:118;2459:619;;;;;:::o;3084:943::-;3179:6;3187;3195;3203;3252:3;3240:9;3231:7;3227:23;3223:33;3220:120;;;3259:79;;:::i;:::-;3220:120;3379:1;3404:53;3449:7;3440:6;3429:9;3425:22;3404:53;:::i;:::-;3394:63;;3350:117;3506:2;3532:53;3577:7;3568:6;3557:9;3553:22;3532:53;:::i;:::-;3522:63;;3477:118;3634:2;3660:53;3705:7;3696:6;3685:9;3681:22;3660:53;:::i;:::-;3650:63;;3605:118;3790:2;3779:9;3775:18;3762:32;3821:18;3813:6;3810:30;3807:117;;;3843:79;;:::i;:::-;3807:117;3948:62;4002:7;3993:6;3982:9;3978:22;3948:62;:::i;:::-;3938:72;;3733:287;3084:943;;;;;;;:::o;4033:468::-;4098:6;4106;4155:2;4143:9;4134:7;4130:23;4126:32;4123:119;;;4161:79;;:::i;:::-;4123:119;4281:1;4306:53;4351:7;4342:6;4331:9;4327:22;4306:53;:::i;:::-;4296:63;;4252:117;4408:2;4434:50;4476:7;4467:6;4456:9;4452:22;4434:50;:::i;:::-;4424:60;;4379:115;4033:468;;;;;:::o;4507:474::-;4575:6;4583;4632:2;4620:9;4611:7;4607:23;4603:32;4600:119;;;4638:79;;:::i;:::-;4600:119;4758:1;4783:53;4828:7;4819:6;4808:9;4804:22;4783:53;:::i;:::-;4773:63;;4729:117;4885:2;4911:53;4956:7;4947:6;4936:9;4932:22;4911:53;:::i;:::-;4901:63;;4856:118;4507:474;;;;;:::o;4987:329::-;5046:6;5095:2;5083:9;5074:7;5070:23;5066:32;5063:119;;;5101:79;;:::i;:::-;5063:119;5221:1;5246:53;5291:7;5282:6;5271:9;5267:22;5246:53;:::i;:::-;5236:63;;5192:117;4987:329;;;;:::o;5322:474::-;5390:6;5398;5447:2;5435:9;5426:7;5422:23;5418:32;5415:119;;;5453:79;;:::i;:::-;5415:119;5573:1;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;:::i;:::-;5588:63;;5544:117;5700:2;5726:53;5771:7;5762:6;5751:9;5747:22;5726:53;:::i;:::-;5716:63;;5671:118;5322:474;;;;;:::o;5802:::-;5870:6;5878;5927:2;5915:9;5906:7;5902:23;5898:32;5895:119;;;5933:79;;:::i;:::-;5895:119;6053:1;6078:53;6123:7;6114:6;6103:9;6099:22;6078:53;:::i;:::-;6068:63;;6024:117;6180:2;6206:53;6251:7;6242:6;6231:9;6227:22;6206:53;:::i;:::-;6196:63;;6151:118;5802:474;;;;;:::o;6282:327::-;6340:6;6389:2;6377:9;6368:7;6364:23;6360:32;6357:119;;;6395:79;;:::i;:::-;6357:119;6515:1;6540:52;6584:7;6575:6;6564:9;6560:22;6540:52;:::i;:::-;6530:62;;6486:116;6282:327;;;;:::o;6615:349::-;6684:6;6733:2;6721:9;6712:7;6708:23;6704:32;6701:119;;;6739:79;;:::i;:::-;6701:119;6859:1;6884:63;6939:7;6930:6;6919:9;6915:22;6884:63;:::i;:::-;6874:73;;6830:127;6615:349;;;;:::o;6970:329::-;7029:6;7078:2;7066:9;7057:7;7053:23;7049:32;7046:119;;;7084:79;;:::i;:::-;7046:119;7204:1;7229:53;7274:7;7265:6;7254:9;7250:22;7229:53;:::i;:::-;7219:63;;7175:117;6970:329;;;;:::o;7305:118::-;7392:24;7410:5;7392:24;:::i;:::-;7387:3;7380:37;7305:118;;:::o;7429:109::-;7510:21;7525:5;7510:21;:::i;:::-;7505:3;7498:34;7429:109;;:::o;7544:118::-;7631:24;7649:5;7631:24;:::i;:::-;7626:3;7619:37;7544:118;;:::o;7668:360::-;7754:3;7782:38;7814:5;7782:38;:::i;:::-;7836:70;7899:6;7894:3;7836:70;:::i;:::-;7829:77;;7915:52;7960:6;7955:3;7948:4;7941:5;7937:16;7915:52;:::i;:::-;7992:29;8014:6;7992:29;:::i;:::-;7987:3;7983:39;7976:46;;7758:270;7668:360;;;;:::o;8034:364::-;8122:3;8150:39;8183:5;8150:39;:::i;:::-;8205:71;8269:6;8264:3;8205:71;:::i;:::-;8198:78;;8285:52;8330:6;8325:3;8318:4;8311:5;8307:16;8285:52;:::i;:::-;8362:29;8384:6;8362:29;:::i;:::-;8357:3;8353:39;8346:46;;8126:272;8034:364;;;;:::o;8404:377::-;8510:3;8538:39;8571:5;8538:39;:::i;:::-;8593:89;8675:6;8670:3;8593:89;:::i;:::-;8586:96;;8691:52;8736:6;8731:3;8724:4;8717:5;8713:16;8691:52;:::i;:::-;8768:6;8763:3;8759:16;8752:23;;8514:267;8404:377;;;;:::o;8787:366::-;8929:3;8950:67;9014:2;9009:3;8950:67;:::i;:::-;8943:74;;9026:93;9115:3;9026:93;:::i;:::-;9144:2;9139:3;9135:12;9128:19;;8787:366;;;:::o;9159:::-;9301:3;9322:67;9386:2;9381:3;9322:67;:::i;:::-;9315:74;;9398:93;9487:3;9398:93;:::i;:::-;9516:2;9511:3;9507:12;9500:19;;9159:366;;;:::o;9531:::-;9673:3;9694:67;9758:2;9753:3;9694:67;:::i;:::-;9687:74;;9770:93;9859:3;9770:93;:::i;:::-;9888:2;9883:3;9879:12;9872:19;;9531:366;;;:::o;9903:::-;10045:3;10066:67;10130:2;10125:3;10066:67;:::i;:::-;10059:74;;10142:93;10231:3;10142:93;:::i;:::-;10260:2;10255:3;10251:12;10244:19;;9903:366;;;:::o;10275:::-;10417:3;10438:67;10502:2;10497:3;10438:67;:::i;:::-;10431:74;;10514:93;10603:3;10514:93;:::i;:::-;10632:2;10627:3;10623:12;10616:19;;10275:366;;;:::o;10647:::-;10789:3;10810:67;10874:2;10869:3;10810:67;:::i;:::-;10803:74;;10886:93;10975:3;10886:93;:::i;:::-;11004:2;10999:3;10995:12;10988:19;;10647:366;;;:::o;11019:::-;11161:3;11182:67;11246:2;11241:3;11182:67;:::i;:::-;11175:74;;11258:93;11347:3;11258:93;:::i;:::-;11376:2;11371:3;11367:12;11360:19;;11019:366;;;:::o;11391:::-;11533:3;11554:67;11618:2;11613:3;11554:67;:::i;:::-;11547:74;;11630:93;11719:3;11630:93;:::i;:::-;11748:2;11743:3;11739:12;11732:19;;11391:366;;;:::o;11763:::-;11905:3;11926:67;11990:2;11985:3;11926:67;:::i;:::-;11919:74;;12002:93;12091:3;12002:93;:::i;:::-;12120:2;12115:3;12111:12;12104:19;;11763:366;;;:::o;12135:::-;12277:3;12298:67;12362:2;12357:3;12298:67;:::i;:::-;12291:74;;12374:93;12463:3;12374:93;:::i;:::-;12492:2;12487:3;12483:12;12476:19;;12135:366;;;:::o;12507:::-;12649:3;12670:67;12734:2;12729:3;12670:67;:::i;:::-;12663:74;;12746:93;12835:3;12746:93;:::i;:::-;12864:2;12859:3;12855:12;12848:19;;12507:366;;;:::o;12879:::-;13021:3;13042:67;13106:2;13101:3;13042:67;:::i;:::-;13035:74;;13118:93;13207:3;13118:93;:::i;:::-;13236:2;13231:3;13227:12;13220:19;;12879:366;;;:::o;13251:::-;13393:3;13414:67;13478:2;13473:3;13414:67;:::i;:::-;13407:74;;13490:93;13579:3;13490:93;:::i;:::-;13608:2;13603:3;13599:12;13592:19;;13251:366;;;:::o;13623:::-;13765:3;13786:67;13850:2;13845:3;13786:67;:::i;:::-;13779:74;;13862:93;13951:3;13862:93;:::i;:::-;13980:2;13975:3;13971:12;13964:19;;13623:366;;;:::o;13995:::-;14137:3;14158:67;14222:2;14217:3;14158:67;:::i;:::-;14151:74;;14234:93;14323:3;14234:93;:::i;:::-;14352:2;14347:3;14343:12;14336:19;;13995:366;;;:::o;14367:::-;14509:3;14530:67;14594:2;14589:3;14530:67;:::i;:::-;14523:74;;14606:93;14695:3;14606:93;:::i;:::-;14724:2;14719:3;14715:12;14708:19;;14367:366;;;:::o;14739:::-;14881:3;14902:67;14966:2;14961:3;14902:67;:::i;:::-;14895:74;;14978:93;15067:3;14978:93;:::i;:::-;15096:2;15091:3;15087:12;15080:19;;14739:366;;;:::o;15111:::-;15253:3;15274:67;15338:2;15333:3;15274:67;:::i;:::-;15267:74;;15350:93;15439:3;15350:93;:::i;:::-;15468:2;15463:3;15459:12;15452:19;;15111:366;;;:::o;15483:::-;15625:3;15646:67;15710:2;15705:3;15646:67;:::i;:::-;15639:74;;15722:93;15811:3;15722:93;:::i;:::-;15840:2;15835:3;15831:12;15824:19;;15483:366;;;:::o;15855:::-;15997:3;16018:67;16082:2;16077:3;16018:67;:::i;:::-;16011:74;;16094:93;16183:3;16094:93;:::i;:::-;16212:2;16207:3;16203:12;16196:19;;15855:366;;;:::o;16227:::-;16369:3;16390:67;16454:2;16449:3;16390:67;:::i;:::-;16383:74;;16466:93;16555:3;16466:93;:::i;:::-;16584:2;16579:3;16575:12;16568:19;;16227:366;;;:::o;16599:402::-;16759:3;16780:85;16862:2;16857:3;16780:85;:::i;:::-;16773:92;;16874:93;16963:3;16874:93;:::i;:::-;16992:2;16987:3;16983:12;16976:19;;16599:402;;;:::o;17007:366::-;17149:3;17170:67;17234:2;17229:3;17170:67;:::i;:::-;17163:74;;17246:93;17335:3;17246:93;:::i;:::-;17364:2;17359:3;17355:12;17348:19;;17007:366;;;:::o;17379:::-;17521:3;17542:67;17606:2;17601:3;17542:67;:::i;:::-;17535:74;;17618:93;17707:3;17618:93;:::i;:::-;17736:2;17731:3;17727:12;17720:19;;17379:366;;;:::o;17751:::-;17893:3;17914:67;17978:2;17973:3;17914:67;:::i;:::-;17907:74;;17990:93;18079:3;17990:93;:::i;:::-;18108:2;18103:3;18099:12;18092:19;;17751:366;;;:::o;18123:402::-;18283:3;18304:85;18386:2;18381:3;18304:85;:::i;:::-;18297:92;;18398:93;18487:3;18398:93;:::i;:::-;18516:2;18511:3;18507:12;18500:19;;18123:402;;;:::o;18531:366::-;18673:3;18694:67;18758:2;18753:3;18694:67;:::i;:::-;18687:74;;18770:93;18859:3;18770:93;:::i;:::-;18888:2;18883:3;18879:12;18872:19;;18531:366;;;:::o;18903:118::-;18990:24;19008:5;18990:24;:::i;:::-;18985:3;18978:37;18903:118;;:::o;19027:435::-;19207:3;19229:95;19320:3;19311:6;19229:95;:::i;:::-;19222:102;;19341:95;19432:3;19423:6;19341:95;:::i;:::-;19334:102;;19453:3;19446:10;;19027:435;;;;;:::o;19468:967::-;19850:3;19872:148;20016:3;19872:148;:::i;:::-;19865:155;;20037:95;20128:3;20119:6;20037:95;:::i;:::-;20030:102;;20149:148;20293:3;20149:148;:::i;:::-;20142:155;;20314:95;20405:3;20396:6;20314:95;:::i;:::-;20307:102;;20426:3;20419:10;;19468:967;;;;;:::o;20441:222::-;20534:4;20572:2;20561:9;20557:18;20549:26;;20585:71;20653:1;20642:9;20638:17;20629:6;20585:71;:::i;:::-;20441:222;;;;:::o;20669:640::-;20864:4;20902:3;20891:9;20887:19;20879:27;;20916:71;20984:1;20973:9;20969:17;20960:6;20916:71;:::i;:::-;20997:72;21065:2;21054:9;21050:18;21041:6;20997:72;:::i;:::-;21079;21147:2;21136:9;21132:18;21123:6;21079:72;:::i;:::-;21198:9;21192:4;21188:20;21183:2;21172:9;21168:18;21161:48;21226:76;21297:4;21288:6;21226:76;:::i;:::-;21218:84;;20669:640;;;;;;;:::o;21315:210::-;21402:4;21440:2;21429:9;21425:18;21417:26;;21453:65;21515:1;21504:9;21500:17;21491:6;21453:65;:::i;:::-;21315:210;;;;:::o;21531:222::-;21624:4;21662:2;21651:9;21647:18;21639:26;;21675:71;21743:1;21732:9;21728:17;21719:6;21675:71;:::i;:::-;21531:222;;;;:::o;21759:313::-;21872:4;21910:2;21899:9;21895:18;21887:26;;21959:9;21953:4;21949:20;21945:1;21934:9;21930:17;21923:47;21987:78;22060:4;22051:6;21987:78;:::i;:::-;21979:86;;21759:313;;;;:::o;22078:419::-;22244:4;22282:2;22271:9;22267:18;22259:26;;22331:9;22325:4;22321:20;22317:1;22306:9;22302:17;22295:47;22359:131;22485:4;22359:131;:::i;:::-;22351:139;;22078:419;;;:::o;22503:::-;22669:4;22707:2;22696:9;22692:18;22684:26;;22756:9;22750:4;22746:20;22742:1;22731:9;22727:17;22720:47;22784:131;22910:4;22784:131;:::i;:::-;22776:139;;22503:419;;;:::o;22928:::-;23094:4;23132:2;23121:9;23117:18;23109:26;;23181:9;23175:4;23171:20;23167:1;23156:9;23152:17;23145:47;23209:131;23335:4;23209:131;:::i;:::-;23201:139;;22928:419;;;:::o;23353:::-;23519:4;23557:2;23546:9;23542:18;23534:26;;23606:9;23600:4;23596:20;23592:1;23581:9;23577:17;23570:47;23634:131;23760:4;23634:131;:::i;:::-;23626:139;;23353:419;;;:::o;23778:::-;23944:4;23982:2;23971:9;23967:18;23959:26;;24031:9;24025:4;24021:20;24017:1;24006:9;24002:17;23995:47;24059:131;24185:4;24059:131;:::i;:::-;24051:139;;23778:419;;;:::o;24203:::-;24369:4;24407:2;24396:9;24392:18;24384:26;;24456:9;24450:4;24446:20;24442:1;24431:9;24427:17;24420:47;24484:131;24610:4;24484:131;:::i;:::-;24476:139;;24203:419;;;:::o;24628:::-;24794:4;24832:2;24821:9;24817:18;24809:26;;24881:9;24875:4;24871:20;24867:1;24856:9;24852:17;24845:47;24909:131;25035:4;24909:131;:::i;:::-;24901:139;;24628:419;;;:::o;25053:::-;25219:4;25257:2;25246:9;25242:18;25234:26;;25306:9;25300:4;25296:20;25292:1;25281:9;25277:17;25270:47;25334:131;25460:4;25334:131;:::i;:::-;25326:139;;25053:419;;;:::o;25478:::-;25644:4;25682:2;25671:9;25667:18;25659:26;;25731:9;25725:4;25721:20;25717:1;25706:9;25702:17;25695:47;25759:131;25885:4;25759:131;:::i;:::-;25751:139;;25478:419;;;:::o;25903:::-;26069:4;26107:2;26096:9;26092:18;26084:26;;26156:9;26150:4;26146:20;26142:1;26131:9;26127:17;26120:47;26184:131;26310:4;26184:131;:::i;:::-;26176:139;;25903:419;;;:::o;26328:::-;26494:4;26532:2;26521:9;26517:18;26509:26;;26581:9;26575:4;26571:20;26567:1;26556:9;26552:17;26545:47;26609:131;26735:4;26609:131;:::i;:::-;26601:139;;26328:419;;;:::o;26753:::-;26919:4;26957:2;26946:9;26942:18;26934:26;;27006:9;27000:4;26996:20;26992:1;26981:9;26977:17;26970:47;27034:131;27160:4;27034:131;:::i;:::-;27026:139;;26753:419;;;:::o;27178:::-;27344:4;27382:2;27371:9;27367:18;27359:26;;27431:9;27425:4;27421:20;27417:1;27406:9;27402:17;27395:47;27459:131;27585:4;27459:131;:::i;:::-;27451:139;;27178:419;;;:::o;27603:::-;27769:4;27807:2;27796:9;27792:18;27784:26;;27856:9;27850:4;27846:20;27842:1;27831:9;27827:17;27820:47;27884:131;28010:4;27884:131;:::i;:::-;27876:139;;27603:419;;;:::o;28028:::-;28194:4;28232:2;28221:9;28217:18;28209:26;;28281:9;28275:4;28271:20;28267:1;28256:9;28252:17;28245:47;28309:131;28435:4;28309:131;:::i;:::-;28301:139;;28028:419;;;:::o;28453:::-;28619:4;28657:2;28646:9;28642:18;28634:26;;28706:9;28700:4;28696:20;28692:1;28681:9;28677:17;28670:47;28734:131;28860:4;28734:131;:::i;:::-;28726:139;;28453:419;;;:::o;28878:::-;29044:4;29082:2;29071:9;29067:18;29059:26;;29131:9;29125:4;29121:20;29117:1;29106:9;29102:17;29095:47;29159:131;29285:4;29159:131;:::i;:::-;29151:139;;28878:419;;;:::o;29303:::-;29469:4;29507:2;29496:9;29492:18;29484:26;;29556:9;29550:4;29546:20;29542:1;29531:9;29527:17;29520:47;29584:131;29710:4;29584:131;:::i;:::-;29576:139;;29303:419;;;:::o;29728:::-;29894:4;29932:2;29921:9;29917:18;29909:26;;29981:9;29975:4;29971:20;29967:1;29956:9;29952:17;29945:47;30009:131;30135:4;30009:131;:::i;:::-;30001:139;;29728:419;;;:::o;30153:::-;30319:4;30357:2;30346:9;30342:18;30334:26;;30406:9;30400:4;30396:20;30392:1;30381:9;30377:17;30370:47;30434:131;30560:4;30434:131;:::i;:::-;30426:139;;30153:419;;;:::o;30578:::-;30744:4;30782:2;30771:9;30767:18;30759:26;;30831:9;30825:4;30821:20;30817:1;30806:9;30802:17;30795:47;30859:131;30985:4;30859:131;:::i;:::-;30851:139;;30578:419;;;:::o;31003:::-;31169:4;31207:2;31196:9;31192:18;31184:26;;31256:9;31250:4;31246:20;31242:1;31231:9;31227:17;31220:47;31284:131;31410:4;31284:131;:::i;:::-;31276:139;;31003:419;;;:::o;31428:::-;31594:4;31632:2;31621:9;31617:18;31609:26;;31681:9;31675:4;31671:20;31667:1;31656:9;31652:17;31645:47;31709:131;31835:4;31709:131;:::i;:::-;31701:139;;31428:419;;;:::o;31853:::-;32019:4;32057:2;32046:9;32042:18;32034:26;;32106:9;32100:4;32096:20;32092:1;32081:9;32077:17;32070:47;32134:131;32260:4;32134:131;:::i;:::-;32126:139;;31853:419;;;:::o;32278:::-;32444:4;32482:2;32471:9;32467:18;32459:26;;32531:9;32525:4;32521:20;32517:1;32506:9;32502:17;32495:47;32559:131;32685:4;32559:131;:::i;:::-;32551:139;;32278:419;;;:::o;32703:222::-;32796:4;32834:2;32823:9;32819:18;32811:26;;32847:71;32915:1;32904:9;32900:17;32891:6;32847:71;:::i;:::-;32703:222;;;;:::o;32931:129::-;32965:6;32992:20;;:::i;:::-;32982:30;;33021:33;33049:4;33041:6;33021:33;:::i;:::-;32931:129;;;:::o;33066:75::-;33099:6;33132:2;33126:9;33116:19;;33066:75;:::o;33147:307::-;33208:4;33298:18;33290:6;33287:30;33284:56;;;33320:18;;:::i;:::-;33284:56;33358:29;33380:6;33358:29;:::i;:::-;33350:37;;33442:4;33436;33432:15;33424:23;;33147:307;;;:::o;33460:98::-;33511:6;33545:5;33539:12;33529:22;;33460:98;;;:::o;33564:99::-;33616:6;33650:5;33644:12;33634:22;;33564:99;;;:::o;33669:168::-;33752:11;33786:6;33781:3;33774:19;33826:4;33821:3;33817:14;33802:29;;33669:168;;;;:::o;33843:169::-;33927:11;33961:6;33956:3;33949:19;34001:4;33996:3;33992:14;33977:29;;33843:169;;;;:::o;34018:148::-;34120:11;34157:3;34142:18;;34018:148;;;;:::o;34172:305::-;34212:3;34231:20;34249:1;34231:20;:::i;:::-;34226:25;;34265:20;34283:1;34265:20;:::i;:::-;34260:25;;34419:1;34351:66;34347:74;34344:1;34341:81;34338:107;;;34425:18;;:::i;:::-;34338:107;34469:1;34466;34462:9;34455:16;;34172:305;;;;:::o;34483:185::-;34523:1;34540:20;34558:1;34540:20;:::i;:::-;34535:25;;34574:20;34592:1;34574:20;:::i;:::-;34569:25;;34613:1;34603:35;;34618:18;;:::i;:::-;34603:35;34660:1;34657;34653:9;34648:14;;34483:185;;;;:::o;34674:348::-;34714:7;34737:20;34755:1;34737:20;:::i;:::-;34732:25;;34771:20;34789:1;34771:20;:::i;:::-;34766:25;;34959:1;34891:66;34887:74;34884:1;34881:81;34876:1;34869:9;34862:17;34858:105;34855:131;;;34966:18;;:::i;:::-;34855:131;35014:1;35011;35007:9;34996:20;;34674:348;;;;:::o;35028:191::-;35068:4;35088:20;35106:1;35088:20;:::i;:::-;35083:25;;35122:20;35140:1;35122:20;:::i;:::-;35117:25;;35161:1;35158;35155:8;35152:34;;;35166:18;;:::i;:::-;35152:34;35211:1;35208;35204:9;35196:17;;35028:191;;;;:::o;35225:96::-;35262:7;35291:24;35309:5;35291:24;:::i;:::-;35280:35;;35225:96;;;:::o;35327:90::-;35361:7;35404:5;35397:13;35390:21;35379:32;;35327:90;;;:::o;35423:77::-;35460:7;35489:5;35478:16;;35423:77;;;:::o;35506:149::-;35542:7;35582:66;35575:5;35571:78;35560:89;;35506:149;;;:::o;35661:126::-;35698:7;35738:42;35731:5;35727:54;35716:65;;35661:126;;;:::o;35793:77::-;35830:7;35859:5;35848:16;;35793:77;;;:::o;35876:154::-;35960:6;35955:3;35950;35937:30;36022:1;36013:6;36008:3;36004:16;35997:27;35876:154;;;:::o;36036:307::-;36104:1;36114:113;36128:6;36125:1;36122:13;36114:113;;;36213:1;36208:3;36204:11;36198:18;36194:1;36189:3;36185:11;36178:39;36150:2;36147:1;36143:10;36138:15;;36114:113;;;36245:6;36242:1;36239:13;36236:101;;;36325:1;36316:6;36311:3;36307:16;36300:27;36236:101;36085:258;36036:307;;;:::o;36349:171::-;36388:3;36411:24;36429:5;36411:24;:::i;:::-;36402:33;;36457:4;36450:5;36447:15;36444:41;;;36465:18;;:::i;:::-;36444:41;36512:1;36505:5;36501:13;36494:20;;36349:171;;;:::o;36526:320::-;36570:6;36607:1;36601:4;36597:12;36587:22;;36654:1;36648:4;36644:12;36675:18;36665:81;;36731:4;36723:6;36719:17;36709:27;;36665:81;36793:2;36785:6;36782:14;36762:18;36759:38;36756:84;;;36812:18;;:::i;:::-;36756:84;36577:269;36526:320;;;:::o;36852:281::-;36935:27;36957:4;36935:27;:::i;:::-;36927:6;36923:40;37065:6;37053:10;37050:22;37029:18;37017:10;37014:34;37011:62;37008:88;;;37076:18;;:::i;:::-;37008:88;37116:10;37112:2;37105:22;36895:238;36852:281;;:::o;37139:233::-;37178:3;37201:24;37219:5;37201:24;:::i;:::-;37192:33;;37247:66;37240:5;37237:77;37234:103;;;37317:18;;:::i;:::-;37234:103;37364:1;37357:5;37353:13;37346:20;;37139:233;;;:::o;37378:176::-;37410:1;37427:20;37445:1;37427:20;:::i;:::-;37422:25;;37461:20;37479:1;37461:20;:::i;:::-;37456:25;;37500:1;37490:35;;37505:18;;:::i;:::-;37490:35;37546:1;37543;37539:9;37534:14;;37378:176;;;;:::o;37560:180::-;37608:77;37605:1;37598:88;37705:4;37702:1;37695:15;37729:4;37726:1;37719:15;37746:180;37794:77;37791:1;37784:88;37891:4;37888:1;37881:15;37915:4;37912:1;37905:15;37932:180;37980:77;37977:1;37970:88;38077:4;38074:1;38067:15;38101:4;38098:1;38091:15;38118:180;38166:77;38163:1;38156:88;38263:4;38260:1;38253:15;38287:4;38284:1;38277:15;38304:180;38352:77;38349:1;38342:88;38449:4;38446:1;38439:15;38473:4;38470:1;38463:15;38490:180;38538:77;38535:1;38528:88;38635:4;38632:1;38625:15;38659:4;38656:1;38649:15;38676:117;38785:1;38782;38775:12;38799:117;38908:1;38905;38898:12;38922:117;39031:1;39028;39021:12;39045:117;39154:1;39151;39144:12;39168:102;39209:6;39260:2;39256:7;39251:2;39244:5;39240:14;39236:28;39226:38;;39168:102;;;:::o;39276:182::-;39416:34;39412:1;39404:6;39400:14;39393:58;39276:182;:::o;39464:230::-;39604:34;39600:1;39592:6;39588:14;39581:58;39673:13;39668:2;39660:6;39656:15;39649:38;39464:230;:::o;39700:170::-;39840:22;39836:1;39828:6;39824:14;39817:46;39700:170;:::o;39876:230::-;40016:34;40012:1;40004:6;40000:14;39993:58;40085:13;40080:2;40072:6;40068:15;40061:38;39876:230;:::o;40112:237::-;40252:34;40248:1;40240:6;40236:14;40229:58;40321:20;40316:2;40308:6;40304:15;40297:45;40112:237;:::o;40355:178::-;40495:30;40491:1;40483:6;40479:14;40472:54;40355:178;:::o;40539:249::-;40679:34;40675:1;40667:6;40663:14;40656:58;40748:32;40743:2;40735:6;40731:15;40724:57;40539:249;:::o;40794:223::-;40934:34;40930:1;40922:6;40918:14;40911:58;41003:6;40998:2;40990:6;40986:15;40979:31;40794:223;:::o;41023:175::-;41163:27;41159:1;41151:6;41147:14;41140:51;41023:175;:::o;41204:231::-;41344:34;41340:1;41332:6;41328:14;41321:58;41413:14;41408:2;41400:6;41396:15;41389:39;41204:231;:::o;41441:166::-;41581:18;41577:1;41569:6;41565:14;41558:42;41441:166;:::o;41613:243::-;41753:34;41749:1;41741:6;41737:14;41730:58;41822:26;41817:2;41809:6;41805:15;41798:51;41613:243;:::o;41862:229::-;42002:34;41998:1;41990:6;41986:14;41979:58;42071:12;42066:2;42058:6;42054:15;42047:37;41862:229;:::o;42097:228::-;42237:34;42233:1;42225:6;42221:14;42214:58;42306:11;42301:2;42293:6;42289:15;42282:36;42097:228;:::o;42331:182::-;42471:34;42467:1;42459:6;42455:14;42448:58;42331:182;:::o;42519:231::-;42659:34;42655:1;42647:6;42643:14;42636:58;42728:14;42723:2;42715:6;42711:15;42704:39;42519:231;:::o;42756:228::-;42896:34;42892:1;42884:6;42880:14;42873:58;42965:11;42960:2;42952:6;42948:15;42941:36;42756:228;:::o;42990:234::-;43130:34;43126:1;43118:6;43114:14;43107:58;43199:17;43194:2;43186:6;43182:15;43175:42;42990:234;:::o;43230:220::-;43370:34;43366:1;43358:6;43354:14;43347:58;43439:3;43434:2;43426:6;43422:15;43415:28;43230:220;:::o;43456:236::-;43596:34;43592:1;43584:6;43580:14;43573:58;43665:19;43660:2;43652:6;43648:15;43641:44;43456:236;:::o;43698:231::-;43838:34;43834:1;43826:6;43822:14;43815:58;43907:14;43902:2;43894:6;43890:15;43883:39;43698:231;:::o;43935:173::-;44075:25;44071:1;44063:6;44059:14;44052:49;43935:173;:::o;44114:248::-;44254:34;44250:1;44242:6;44238:14;44231:58;44323:31;44318:2;44310:6;44306:15;44299:56;44114:248;:::o;44368:235::-;44508:34;44504:1;44496:6;44492:14;44485:58;44577:18;44572:2;44564:6;44560:15;44553:43;44368:235;:::o;44609:251::-;44749:34;44745:1;44737:6;44733:14;44726:58;44818:34;44813:2;44805:6;44801:15;44794:59;44609:251;:::o;44866:167::-;45006:19;45002:1;44994:6;44990:14;44983:43;44866:167;:::o;45039:234::-;45179:34;45175:1;45167:6;45163:14;45156:58;45248:17;45243:2;45235:6;45231:15;45224:42;45039:234;:::o;45279:122::-;45352:24;45370:5;45352:24;:::i;:::-;45345:5;45342:35;45332:63;;45391:1;45388;45381:12;45332:63;45279:122;:::o;45407:116::-;45477:21;45492:5;45477:21;:::i;:::-;45470:5;45467:32;45457:60;;45513:1;45510;45503:12;45457:60;45407:116;:::o;45529:122::-;45602:24;45620:5;45602:24;:::i;:::-;45595:5;45592:35;45582:63;;45641:1;45638;45631:12;45582:63;45529:122;:::o;45657:120::-;45729:23;45746:5;45729:23;:::i;:::-;45722:5;45719:34;45709:62;;45767:1;45764;45757:12;45709:62;45657:120;:::o;45783:122::-;45856:24;45874:5;45856:24;:::i;:::-;45849:5;45846:35;45836:63;;45895:1;45892;45885:12;45836:63;45783:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../extensions/ERC721Enumerable.sol\";\nimport \"../extensions/ERC721Burnable.sol\";\nimport \"../extensions/ERC721Pausable.sol\";\nimport \"../../../access/AccessControlEnumerable.sol\";\nimport \"../../../utils/Context.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev {ERC721} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *  - token ID and URI autogeneration\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC721PresetMinterPauserAutoId is\n    Context,\n    AccessControlEnumerable,\n    ERC721Enumerable,\n    ERC721Burnable,\n    ERC721Pausable\n{\n    using Counters for Counters.Counter;\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    Counters.Counter private _tokenIdTracker;\n\n    string private _baseTokenURI;\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\n     * See {ERC721-tokenURI}.\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        string memory baseTokenURI\n    ) ERC721(name, symbol) {\n        _baseTokenURI = baseTokenURI;\n\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    /**\n     * @dev Creates a new token for `to`. Its token ID will be automatically\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\n     * URI autogenerated based on the base URI passed at construction.\n     *\n     * See {ERC721-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\n\n        // We cannot just use balanceOf to create the new tokenId because tokens\n        // can be burned (destroyed), so we need a separate counter.\n        _mint(to, _tokenIdTracker.current());\n        _tokenIdTracker.increment();\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override(ERC721, ERC721Enumerable, ERC721Pausable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(AccessControlEnumerable, ERC721, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n",
  "sourcePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
  "ast": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
    "exportedSymbols": {
      "AccessControl": [
        1032
      ],
      "AccessControlEnumerable": [
        1222
      ],
      "Address": [
        23192
      ],
      "Context": [
        23299
      ],
      "Counters": [
        23373
      ],
      "ERC165": [
        24799
      ],
      "ERC721": [
        20584
      ],
      "ERC721Burnable": [
        20748
      ],
      "ERC721Enumerable": [
        21086
      ],
      "ERC721Pausable": [
        21123
      ],
      "ERC721PresetMinterPauserAutoId": [
        21497
      ],
      "EnumerableSet": [
        27301
      ],
      "IAccessControl": [
        704
      ],
      "IAccessControlEnumerable": [
        1054
      ],
      "IERC165": [
        25123
      ],
      "IERC721": [
        20700
      ],
      "IERC721Enumerable": [
        21282
      ],
      "IERC721Metadata": [
        21309
      ],
      "IERC721Receiver": [
        20718
      ],
      "Pausable": [
        14991
      ],
      "Strings": [
        23802
      ]
    },
    "id": 21498,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21311,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:153"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "../ERC721.sol",
        "id": 21312,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 20585,
        "src": "58:23:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "../extensions/ERC721Enumerable.sol",
        "id": 21313,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 21087,
        "src": "82:44:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "../extensions/ERC721Burnable.sol",
        "id": 21314,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 20749,
        "src": "127:42:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol",
        "file": "../extensions/ERC721Pausable.sol",
        "id": 21315,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 21124,
        "src": "170:42:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 21316,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 1223,
        "src": "213:53:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 21317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 23300,
        "src": "267:36:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "../../../utils/Counters.sol",
        "id": 21318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 23374,
        "src": "304:37:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21320,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23299,
              "src": "996:7:153"
            },
            "id": 21321,
            "nodeType": "InheritanceSpecifier",
            "src": "996:7:153"
          },
          {
            "baseName": {
              "id": 21322,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1222,
              "src": "1009:23:153"
            },
            "id": 21323,
            "nodeType": "InheritanceSpecifier",
            "src": "1009:23:153"
          },
          {
            "baseName": {
              "id": 21324,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21086,
              "src": "1038:16:153"
            },
            "id": 21325,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:16:153"
          },
          {
            "baseName": {
              "id": 21326,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20748,
              "src": "1060:14:153"
            },
            "id": 21327,
            "nodeType": "InheritanceSpecifier",
            "src": "1060:14:153"
          },
          {
            "baseName": {
              "id": 21328,
              "name": "ERC721Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21123,
              "src": "1080:14:153"
            },
            "id": 21329,
            "nodeType": "InheritanceSpecifier",
            "src": "1080:14:153"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21319,
          "nodeType": "StructuredDocumentation",
          "src": "343:605:153",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 21497,
        "linearizedBaseContracts": [
          21497,
          21123,
          14991,
          20748,
          21086,
          21282,
          20584,
          21309,
          20700,
          1222,
          1032,
          24799,
          25123,
          704,
          23299,
          1054
        ],
        "name": "ERC721PresetMinterPauserAutoId",
        "nameLocation": "958:30:153",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21333,
            "libraryName": {
              "id": 21330,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23373,
              "src": "1107:8:153"
            },
            "nodeType": "UsingForDirective",
            "src": "1101:36:153",
            "typeName": {
              "id": 21332,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21331,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23305,
                "src": "1120:16:153"
              },
              "referencedDeclaration": 23305,
              "src": "1120:16:153",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$23305_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 21338,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "1167:11:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1143:62:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21334,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1143:7:153",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 21336,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1191:13:153",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 21335,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1181:9:153",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 21337,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1181:24:153",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 21343,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nameLocation": "1235:11:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1211:62:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21339,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1211:7:153",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 21341,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1259:13:153",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 21340,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1249:9:153",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 21342,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1249:24:153",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21346,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nameLocation": "1305:15:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1280:40:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$23305_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 21345,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21344,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23305,
                "src": "1280:16:153"
              },
              "referencedDeclaration": 23305,
              "src": "1280:16:153",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$23305_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21348,
            "mutability": "mutable",
            "name": "_baseTokenURI",
            "nameLocation": "1342:13:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1327:28:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21347,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1327:6:153",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 21384,
              "nodeType": "Block",
              "src": "1750:195:153",
              "statements": [
                {
                  "expression": {
                    "id": 21364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21362,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21348,
                      "src": "1760:13:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21363,
                      "name": "baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21355,
                      "src": "1776:12:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1760:28:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21365,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:28:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21367,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "1810:18:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21368,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23289,
                          "src": "1830:10:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 21369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:12:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21366,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1221
                      ],
                      "referencedDeclaration": 1221,
                      "src": "1799:10:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1799:44:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21371,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:44:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21373,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21338,
                        "src": "1865:11:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21374,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23289,
                          "src": "1878:10:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 21375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1878:12:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21372,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1221
                      ],
                      "referencedDeclaration": 1221,
                      "src": "1854:10:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:37:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21377,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:37:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21379,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21343,
                        "src": "1912:11:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21380,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23289,
                          "src": "1925:10:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 21381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1925:12:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21378,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1221
                      ],
                      "referencedDeclaration": 1221,
                      "src": "1901:10:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:37:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21383,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:37:153"
                }
              ]
            },
            "documentation": {
              "id": 21349,
              "nodeType": "StructuredDocumentation",
              "src": "1362:250:153",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 21385,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 21358,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21351,
                    "src": "1736:4:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 21359,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21353,
                    "src": "1742:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 21360,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 21357,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20584,
                  "src": "1729:6:153"
                },
                "nodeType": "ModifierInvocation",
                "src": "1729:20:153"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21351,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1652:4:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21385,
                  "src": "1638:18:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21350,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21353,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1680:6:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21385,
                  "src": "1666:20:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21355,
                  "mutability": "mutable",
                  "name": "baseTokenURI",
                  "nameLocation": "1710:12:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21385,
                  "src": "1696:26:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21354,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:100:153"
            },
            "returnParameters": {
              "id": 21361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1750:0:153"
            },
            "scope": 21497,
            "src": "1617:328:153",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19985
            ],
            "body": {
              "id": 21393,
              "nodeType": "Block",
              "src": "2026:37:153",
              "statements": [
                {
                  "expression": {
                    "id": 21391,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21348,
                    "src": "2043:13:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 21390,
                  "id": 21392,
                  "nodeType": "Return",
                  "src": "2036:20:153"
                }
              ]
            },
            "id": 21394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1960:8:153",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21387,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1993:8:153"
            },
            "parameters": {
              "id": 21386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:2:153"
            },
            "returnParameters": {
              "id": 21390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21394,
                  "src": "2011:13:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21388,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:15:153"
            },
            "scope": 21497,
            "src": "1951:112:153",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21421,
              "nodeType": "Block",
              "src": "2479:359:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21402,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21338,
                            "src": "2505:11:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21403,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23289,
                              "src": "2518:10:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2518:12:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21401,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "2497:7:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 21405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2497:34:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 21406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2533:63:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 21400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2489:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:108:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21408,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:108:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21410,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21397,
                        "src": "2764:2:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21411,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21346,
                            "src": "2768:15:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$23305_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 21412,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23317,
                          "src": "2768:23:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$23305_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$23305_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 21413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2768:25:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21409,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20366,
                      "src": "2758:5:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2758:36:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21415,
                  "nodeType": "ExpressionStatement",
                  "src": "2758:36:153"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21416,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21346,
                        "src": "2804:15:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$23305_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 21418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23331,
                      "src": "2804:25:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$23305_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$23305_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 21419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:27:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21420,
                  "nodeType": "ExpressionStatement",
                  "src": "2804:27:153"
                }
              ]
            },
            "documentation": {
              "id": 21395,
              "nodeType": "StructuredDocumentation",
              "src": "2069:364:153",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 21422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2447:4:153",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21397,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2460:2:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21422,
                  "src": "2452:10:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2451:12:153"
            },
            "returnParameters": {
              "id": 21399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2479:0:153"
            },
            "scope": 21497,
            "src": "2438:400:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21438,
              "nodeType": "Block",
              "src": "3074:144:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21428,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21343,
                            "src": "3100:11:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21429,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23289,
                              "src": "3113:10:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3113:12:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21427,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "3092:7:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 21431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3092:34:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 21432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3128:64:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 21426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3084:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:109:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21434,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:109:153"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21435,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14974,
                      "src": "3203:6:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:8:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21437,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:8:153"
                }
              ]
            },
            "documentation": {
              "id": 21423,
              "nodeType": "StructuredDocumentation",
              "src": "2844:193:153",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 21439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "3051:5:153",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:2:153"
            },
            "returnParameters": {
              "id": 21425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3074:0:153"
            },
            "scope": 21497,
            "src": "3042:176:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21455,
              "nodeType": "Block",
              "src": "3460:148:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21445,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21343,
                            "src": "3486:11:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21446,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23289,
                              "src": "3499:10:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3499:12:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21444,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "3478:7:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 21448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3478:34:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 21449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:66:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 21443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3470:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:111:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21451,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:111:153"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21452,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14990,
                      "src": "3591:8:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3591:10:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21454,
                  "nodeType": "ExpressionStatement",
                  "src": "3591:10:153"
                }
              ]
            },
            "documentation": {
              "id": 21440,
              "nodeType": "StructuredDocumentation",
              "src": "3224:197:153",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 21456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "3435:7:153",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3442:2:153"
            },
            "returnParameters": {
              "id": 21442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3460:0:153"
            },
            "scope": 21497,
            "src": "3426:182:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20583,
              20924,
              21122
            ],
            "body": {
              "id": 21477,
              "nodeType": "Block",
              "src": "3785:62:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21472,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21458,
                        "src": "3822:4:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21473,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21460,
                        "src": "3828:2:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21474,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21462,
                        "src": "3832:7:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21469,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3795:5:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721PresetMinterPauserAutoId_$21497_$",
                          "typeString": "type(contract super ERC721PresetMinterPauserAutoId)"
                        }
                      },
                      "id": 21471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21122,
                      "src": "3795:26:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:45:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21476,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:45:153"
                }
              ]
            },
            "id": 21478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3623:20:153",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21467,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 21464,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20584,
                  "src": "3743:6:153"
                },
                {
                  "id": 21465,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21086,
                  "src": "3751:16:153"
                },
                {
                  "id": 21466,
                  "name": "ERC721Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21123,
                  "src": "3769:14:153"
                }
              ],
              "src": "3734:50:153"
            },
            "parameters": {
              "id": 21463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21458,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3661:4:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21478,
                  "src": "3653:12:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21460,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3683:2:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21478,
                  "src": "3675:10:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3675:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21462,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3703:7:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21478,
                  "src": "3695:15:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3695:7:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3643:73:153"
            },
            "returnParameters": {
              "id": 21468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3785:0:153"
            },
            "scope": 21497,
            "src": "3614:233:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1090,
              19862,
              20798
            ],
            "body": {
              "id": 21495,
              "nodeType": "Block",
              "src": "4100:60:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21492,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21481,
                        "src": "4141:11:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 21490,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4117:5:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721PresetMinterPauserAutoId_$21497_$",
                          "typeString": "type(contract super ERC721PresetMinterPauserAutoId)"
                        }
                      },
                      "id": 21491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20798,
                      "src": "4117:23:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 21493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4117:36:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21489,
                  "id": 21494,
                  "nodeType": "Return",
                  "src": "4110:43:153"
                }
              ]
            },
            "documentation": {
              "id": 21479,
              "nodeType": "StructuredDocumentation",
              "src": "3853:56:153",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 21496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3923:17:153",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21486,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 21483,
                  "name": "AccessControlEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1222,
                  "src": "4022:23:153"
                },
                {
                  "id": 21484,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20584,
                  "src": "4047:6:153"
                },
                {
                  "id": 21485,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21086,
                  "src": "4055:16:153"
                }
              ],
              "src": "4013:59:153"
            },
            "parameters": {
              "id": 21482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21481,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3948:11:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21496,
                  "src": "3941:18:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 21480,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3941:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3940:20:153"
            },
            "returnParameters": {
              "id": 21489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21496,
                  "src": "4090:4:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4090:4:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4089:6:153"
            },
            "scope": 21497,
            "src": "3914:246:153",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 21498,
        "src": "949:3213:153",
        "usedErrors": []
      }
    ],
    "src": "33:4130:153"
  },
  "legacyAST": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
    "exportedSymbols": {
      "AccessControl": [
        1032
      ],
      "AccessControlEnumerable": [
        1222
      ],
      "Address": [
        23192
      ],
      "Context": [
        23299
      ],
      "Counters": [
        23373
      ],
      "ERC165": [
        24799
      ],
      "ERC721": [
        20584
      ],
      "ERC721Burnable": [
        20748
      ],
      "ERC721Enumerable": [
        21086
      ],
      "ERC721Pausable": [
        21123
      ],
      "ERC721PresetMinterPauserAutoId": [
        21497
      ],
      "EnumerableSet": [
        27301
      ],
      "IAccessControl": [
        704
      ],
      "IAccessControlEnumerable": [
        1054
      ],
      "IERC165": [
        25123
      ],
      "IERC721": [
        20700
      ],
      "IERC721Enumerable": [
        21282
      ],
      "IERC721Metadata": [
        21309
      ],
      "IERC721Receiver": [
        20718
      ],
      "Pausable": [
        14991
      ],
      "Strings": [
        23802
      ]
    },
    "id": 21498,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21311,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:153"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "../ERC721.sol",
        "id": 21312,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 20585,
        "src": "58:23:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "../extensions/ERC721Enumerable.sol",
        "id": 21313,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 21087,
        "src": "82:44:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "../extensions/ERC721Burnable.sol",
        "id": 21314,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 20749,
        "src": "127:42:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol",
        "file": "../extensions/ERC721Pausable.sol",
        "id": 21315,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 21124,
        "src": "170:42:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 21316,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 1223,
        "src": "213:53:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 21317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 23300,
        "src": "267:36:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "../../../utils/Counters.sol",
        "id": 21318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21498,
        "sourceUnit": 23374,
        "src": "304:37:153",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21320,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23299,
              "src": "996:7:153"
            },
            "id": 21321,
            "nodeType": "InheritanceSpecifier",
            "src": "996:7:153"
          },
          {
            "baseName": {
              "id": 21322,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1222,
              "src": "1009:23:153"
            },
            "id": 21323,
            "nodeType": "InheritanceSpecifier",
            "src": "1009:23:153"
          },
          {
            "baseName": {
              "id": 21324,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21086,
              "src": "1038:16:153"
            },
            "id": 21325,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:16:153"
          },
          {
            "baseName": {
              "id": 21326,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20748,
              "src": "1060:14:153"
            },
            "id": 21327,
            "nodeType": "InheritanceSpecifier",
            "src": "1060:14:153"
          },
          {
            "baseName": {
              "id": 21328,
              "name": "ERC721Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21123,
              "src": "1080:14:153"
            },
            "id": 21329,
            "nodeType": "InheritanceSpecifier",
            "src": "1080:14:153"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21319,
          "nodeType": "StructuredDocumentation",
          "src": "343:605:153",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 21497,
        "linearizedBaseContracts": [
          21497,
          21123,
          14991,
          20748,
          21086,
          21282,
          20584,
          21309,
          20700,
          1222,
          1032,
          24799,
          25123,
          704,
          23299,
          1054
        ],
        "name": "ERC721PresetMinterPauserAutoId",
        "nameLocation": "958:30:153",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21333,
            "libraryName": {
              "id": 21330,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23373,
              "src": "1107:8:153"
            },
            "nodeType": "UsingForDirective",
            "src": "1101:36:153",
            "typeName": {
              "id": 21332,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21331,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23305,
                "src": "1120:16:153"
              },
              "referencedDeclaration": 23305,
              "src": "1120:16:153",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$23305_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 21338,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "1167:11:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1143:62:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21334,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1143:7:153",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 21336,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1191:13:153",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 21335,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1181:9:153",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 21337,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1181:24:153",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 21343,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nameLocation": "1235:11:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1211:62:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21339,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1211:7:153",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 21341,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1259:13:153",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 21340,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1249:9:153",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 21342,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1249:24:153",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21346,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nameLocation": "1305:15:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1280:40:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$23305_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 21345,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21344,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23305,
                "src": "1280:16:153"
              },
              "referencedDeclaration": 23305,
              "src": "1280:16:153",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$23305_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21348,
            "mutability": "mutable",
            "name": "_baseTokenURI",
            "nameLocation": "1342:13:153",
            "nodeType": "VariableDeclaration",
            "scope": 21497,
            "src": "1327:28:153",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21347,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1327:6:153",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 21384,
              "nodeType": "Block",
              "src": "1750:195:153",
              "statements": [
                {
                  "expression": {
                    "id": 21364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21362,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21348,
                      "src": "1760:13:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21363,
                      "name": "baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21355,
                      "src": "1776:12:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1760:28:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21365,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:28:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21367,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "1810:18:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21368,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23289,
                          "src": "1830:10:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 21369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:12:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21366,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1221
                      ],
                      "referencedDeclaration": 1221,
                      "src": "1799:10:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1799:44:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21371,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:44:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21373,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21338,
                        "src": "1865:11:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21374,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23289,
                          "src": "1878:10:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 21375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1878:12:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21372,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1221
                      ],
                      "referencedDeclaration": 1221,
                      "src": "1854:10:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:37:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21377,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:37:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21379,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21343,
                        "src": "1912:11:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21380,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23289,
                          "src": "1925:10:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 21381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1925:12:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21378,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1221
                      ],
                      "referencedDeclaration": 1221,
                      "src": "1901:10:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:37:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21383,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:37:153"
                }
              ]
            },
            "documentation": {
              "id": 21349,
              "nodeType": "StructuredDocumentation",
              "src": "1362:250:153",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 21385,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 21358,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21351,
                    "src": "1736:4:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 21359,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21353,
                    "src": "1742:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 21360,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 21357,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20584,
                  "src": "1729:6:153"
                },
                "nodeType": "ModifierInvocation",
                "src": "1729:20:153"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21351,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1652:4:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21385,
                  "src": "1638:18:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21350,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21353,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1680:6:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21385,
                  "src": "1666:20:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21355,
                  "mutability": "mutable",
                  "name": "baseTokenURI",
                  "nameLocation": "1710:12:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21385,
                  "src": "1696:26:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21354,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:100:153"
            },
            "returnParameters": {
              "id": 21361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1750:0:153"
            },
            "scope": 21497,
            "src": "1617:328:153",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19985
            ],
            "body": {
              "id": 21393,
              "nodeType": "Block",
              "src": "2026:37:153",
              "statements": [
                {
                  "expression": {
                    "id": 21391,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21348,
                    "src": "2043:13:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 21390,
                  "id": 21392,
                  "nodeType": "Return",
                  "src": "2036:20:153"
                }
              ]
            },
            "id": 21394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1960:8:153",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21387,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1993:8:153"
            },
            "parameters": {
              "id": 21386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:2:153"
            },
            "returnParameters": {
              "id": 21390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21394,
                  "src": "2011:13:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21388,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:15:153"
            },
            "scope": 21497,
            "src": "1951:112:153",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21421,
              "nodeType": "Block",
              "src": "2479:359:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21402,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21338,
                            "src": "2505:11:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21403,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23289,
                              "src": "2518:10:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2518:12:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21401,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "2497:7:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 21405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2497:34:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 21406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2533:63:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 21400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2489:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:108:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21408,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:108:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21410,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21397,
                        "src": "2764:2:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21411,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21346,
                            "src": "2768:15:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$23305_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 21412,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23317,
                          "src": "2768:23:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$23305_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$23305_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 21413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2768:25:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21409,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20366,
                      "src": "2758:5:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2758:36:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21415,
                  "nodeType": "ExpressionStatement",
                  "src": "2758:36:153"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21416,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21346,
                        "src": "2804:15:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$23305_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 21418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23331,
                      "src": "2804:25:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$23305_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$23305_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 21419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:27:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21420,
                  "nodeType": "ExpressionStatement",
                  "src": "2804:27:153"
                }
              ]
            },
            "documentation": {
              "id": 21395,
              "nodeType": "StructuredDocumentation",
              "src": "2069:364:153",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 21422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2447:4:153",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21397,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2460:2:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21422,
                  "src": "2452:10:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2451:12:153"
            },
            "returnParameters": {
              "id": 21399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2479:0:153"
            },
            "scope": 21497,
            "src": "2438:400:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21438,
              "nodeType": "Block",
              "src": "3074:144:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21428,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21343,
                            "src": "3100:11:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21429,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23289,
                              "src": "3113:10:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3113:12:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21427,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "3092:7:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 21431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3092:34:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 21432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3128:64:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 21426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3084:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:109:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21434,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:109:153"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21435,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14974,
                      "src": "3203:6:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:8:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21437,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:8:153"
                }
              ]
            },
            "documentation": {
              "id": 21423,
              "nodeType": "StructuredDocumentation",
              "src": "2844:193:153",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 21439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "3051:5:153",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:2:153"
            },
            "returnParameters": {
              "id": 21425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3074:0:153"
            },
            "scope": 21497,
            "src": "3042:176:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21455,
              "nodeType": "Block",
              "src": "3460:148:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21445,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21343,
                            "src": "3486:11:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21446,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23289,
                              "src": "3499:10:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3499:12:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21444,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "3478:7:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 21448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3478:34:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 21449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:66:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 21443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3470:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3470:111:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21451,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:111:153"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21452,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14990,
                      "src": "3591:8:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3591:10:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21454,
                  "nodeType": "ExpressionStatement",
                  "src": "3591:10:153"
                }
              ]
            },
            "documentation": {
              "id": 21440,
              "nodeType": "StructuredDocumentation",
              "src": "3224:197:153",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 21456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "3435:7:153",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3442:2:153"
            },
            "returnParameters": {
              "id": 21442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3460:0:153"
            },
            "scope": 21497,
            "src": "3426:182:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20583,
              20924,
              21122
            ],
            "body": {
              "id": 21477,
              "nodeType": "Block",
              "src": "3785:62:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21472,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21458,
                        "src": "3822:4:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21473,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21460,
                        "src": "3828:2:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21474,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21462,
                        "src": "3832:7:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21469,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3795:5:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721PresetMinterPauserAutoId_$21497_$",
                          "typeString": "type(contract super ERC721PresetMinterPauserAutoId)"
                        }
                      },
                      "id": 21471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21122,
                      "src": "3795:26:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:45:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21476,
                  "nodeType": "ExpressionStatement",
                  "src": "3795:45:153"
                }
              ]
            },
            "id": 21478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3623:20:153",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21467,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 21464,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20584,
                  "src": "3743:6:153"
                },
                {
                  "id": 21465,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21086,
                  "src": "3751:16:153"
                },
                {
                  "id": 21466,
                  "name": "ERC721Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21123,
                  "src": "3769:14:153"
                }
              ],
              "src": "3734:50:153"
            },
            "parameters": {
              "id": 21463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21458,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3661:4:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21478,
                  "src": "3653:12:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21460,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3683:2:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21478,
                  "src": "3675:10:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3675:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21462,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3703:7:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21478,
                  "src": "3695:15:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3695:7:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3643:73:153"
            },
            "returnParameters": {
              "id": 21468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3785:0:153"
            },
            "scope": 21497,
            "src": "3614:233:153",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1090,
              19862,
              20798
            ],
            "body": {
              "id": 21495,
              "nodeType": "Block",
              "src": "4100:60:153",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21492,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21481,
                        "src": "4141:11:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 21490,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4117:5:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721PresetMinterPauserAutoId_$21497_$",
                          "typeString": "type(contract super ERC721PresetMinterPauserAutoId)"
                        }
                      },
                      "id": 21491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20798,
                      "src": "4117:23:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 21493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4117:36:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21489,
                  "id": 21494,
                  "nodeType": "Return",
                  "src": "4110:43:153"
                }
              ]
            },
            "documentation": {
              "id": 21479,
              "nodeType": "StructuredDocumentation",
              "src": "3853:56:153",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 21496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3923:17:153",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21486,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 21483,
                  "name": "AccessControlEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1222,
                  "src": "4022:23:153"
                },
                {
                  "id": 21484,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20584,
                  "src": "4047:6:153"
                },
                {
                  "id": 21485,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21086,
                  "src": "4055:16:153"
                }
              ],
              "src": "4013:59:153"
            },
            "parameters": {
              "id": 21482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21481,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3948:11:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 21496,
                  "src": "3941:18:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 21480,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3941:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3940:20:153"
            },
            "returnParameters": {
              "id": 21489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21496,
                  "src": "4090:4:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4090:4:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4089:6:153"
            },
            "scope": 21497,
            "src": "3914:246:153",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 21498,
        "src": "949:3213:153",
        "usedErrors": []
      }
    ],
    "src": "33:4130:153"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-12T03:39:31.620Z",
  "devdoc": {
    "details": "{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Overload {grantRole} to track enumerable memberships"
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(address)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Overload {renounceRole} to track enumerable memberships"
      },
      "revokeRole(bytes32,address)": {
        "details": "Overload {revokeRole} to track enumerable memberships"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}