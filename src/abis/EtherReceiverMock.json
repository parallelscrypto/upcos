{
  "contractName": "EtherReceiverMock",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "acceptEther",
          "type": "bool"
        }
      ],
      "name": "setAcceptEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"acceptEther\",\"type\":\"bool\"}],\"name\":\"setAcceptEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol\":\"EtherReceiverMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol\":{\"keccak256\":\"0x2b2eac73b765fa6205a9b1febca804b28c0eba82a2fd7f020058cbe08e93b550\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a00aadb085d43625d9dd5c001fc59693fab691c971d71f0a113f45f01427f447\",\"dweb:/ipfs/QmVkZxkBEZAiK3aYcLRjEmF2VFapJhZLKgWvMwF6AXb583\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610116806100206000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160cc565b92915050565b60006020828403121560a65760a560c7565b5b600060b2848285016080565b91505092915050565b60008115159050919050565b600080fd5b60d38160bb565b811460dd57600080fd5b5056fea2646970667358221220dfdf97206387b10f1719da8459c2a94826210331b495f68e4596ff2320faa99a64736f6c63430008070033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160cc565b92915050565b60006020828403121560a65760a560c7565b5b600060b2848285016080565b91505092915050565b60008115159050919050565b600080fd5b60d38160bb565b811460dd57600080fd5b5056fea2646970667358221220dfdf97206387b10f1719da8459c2a94826210331b495f68e4596ff2320faa99a64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "58:260:73:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "58:260:73:-:0;;;;;;;;;;;;;;;;;;;;;;;263:12;;;;;;;;;;258:52;;291:8;;;258:52;58:260;;;;;123:92;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;197:11;182:12;;:26;;;;;;;;;;;;;;;;;;123:92;:::o;7:133:191:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;556:90::-;590:7;633:5;626:13;619:21;608:32;;556:90;;;:::o;775:117::-;884:1;881;874:12;898:116;968:21;983:5;968:21;:::i;:::-;961:5;958:32;948:60;;1004:1;1001;994:12;948:60;898:116;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract EtherReceiverMock {\n    bool private _acceptEther;\n\n    function setAcceptEther(bool acceptEther) public {\n        _acceptEther = acceptEther;\n    }\n\n    receive() external payable {\n        if (!_acceptEther) {\n            revert();\n        }\n    }\n}\n",
  "sourcePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol",
  "ast": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        9996
      ]
    },
    "id": 9997,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9972,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:73"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9996,
        "linearizedBaseContracts": [
          9996
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "67:17:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9974,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "104:12:73",
            "nodeType": "VariableDeclaration",
            "scope": 9996,
            "src": "91:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9973,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:73",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9983,
              "nodeType": "Block",
              "src": "172:43:73",
              "statements": [
                {
                  "expression": {
                    "id": 9981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9979,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9974,
                      "src": "182:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9980,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9976,
                      "src": "197:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9982,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:73"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 9984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "132:14:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9976,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "152:11:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 9984,
                  "src": "147:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9975,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:73"
            },
            "returnParameters": {
              "id": 9978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:73"
            },
            "scope": 9996,
            "src": "123:92:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9994,
              "nodeType": "Block",
              "src": "248:68:73",
              "statements": [
                {
                  "condition": {
                    "id": 9988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "262:13:73",
                    "subExpression": {
                      "id": 9987,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9974,
                      "src": "263:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9993,
                  "nodeType": "IfStatement",
                  "src": "258:52:73",
                  "trueBody": {
                    "id": 9992,
                    "nodeType": "Block",
                    "src": "277:33:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9989,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "291:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "291:8:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9991,
                        "nodeType": "ExpressionStatement",
                        "src": "291:8:73"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 9995,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:2:73"
            },
            "returnParameters": {
              "id": 9986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:0:73"
            },
            "scope": 9996,
            "src": "221:95:73",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9997,
        "src": "58:260:73",
        "usedErrors": []
      }
    ],
    "src": "33:286:73"
  },
  "legacyAST": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        9996
      ]
    },
    "id": 9997,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9972,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:73"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9996,
        "linearizedBaseContracts": [
          9996
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "67:17:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9974,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "104:12:73",
            "nodeType": "VariableDeclaration",
            "scope": 9996,
            "src": "91:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9973,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:73",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9983,
              "nodeType": "Block",
              "src": "172:43:73",
              "statements": [
                {
                  "expression": {
                    "id": 9981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9979,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9974,
                      "src": "182:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9980,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9976,
                      "src": "197:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9982,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:73"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 9984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "132:14:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9976,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "152:11:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 9984,
                  "src": "147:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9975,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:73"
            },
            "returnParameters": {
              "id": 9978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:73"
            },
            "scope": 9996,
            "src": "123:92:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9994,
              "nodeType": "Block",
              "src": "248:68:73",
              "statements": [
                {
                  "condition": {
                    "id": 9988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "262:13:73",
                    "subExpression": {
                      "id": 9987,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9974,
                      "src": "263:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9993,
                  "nodeType": "IfStatement",
                  "src": "258:52:73",
                  "trueBody": {
                    "id": 9992,
                    "nodeType": "Block",
                    "src": "277:33:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9989,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "291:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "291:8:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9991,
                        "nodeType": "ExpressionStatement",
                        "src": "291:8:73"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 9995,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:2:73"
            },
            "returnParameters": {
              "id": 9986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:0:73"
            },
            "scope": 9996,
            "src": "221:95:73",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9997,
        "src": "58:260:73",
        "usedErrors": []
      }
    ],
    "src": "33:286:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-12T03:39:31.317Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}