{
  "contractName": "ERC1820Implementer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.\",\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"details\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol\":\"ERC1820Implementer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0x3e1a3bb5490e316d5ece33fec5ee844dc6194472ad4491e82475b83ee336660d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b56f566ec3cd2ca4c7788045a444f686d1b319a581db8b77ee9202dcf117b0ad\",\"dweb:/ipfs/QmQqg96azFhL4tkJaadKy78KGJqGTUSCXs9ZWwvPpMT6ps\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xd658a25ce73a588bba55fa518ea79b3a581f14c411fb44a38e78f87e3a09ffcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791297362508954c107c100110591cdd6b973a7257262aaf2630917552672a29\",\"dweb:/ipfs/QmWqXwQa6S9xQXx5oy5TB3N7TmyedVy3sJnfTLWP4jCsbp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061022f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063249cb3fa14610030575b600080fd5b61004a60048036038101906100459190610120565b610060565b604051610057919061016f565b60405180910390f35b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100cc576000801b6100ee565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b600081359050610105816101cb565b92915050565b60008135905061011a816101e2565b92915050565b60008060408385031215610137576101366101c6565b5b60006101458582860161010b565b9250506020610156858286016100f6565b9150509250929050565b6101698161019c565b82525050565b60006020820190506101846000830184610160565b92915050565b6000610195826101a6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101d48161018a565b81146101df57600080fd5b50565b6101eb8161019c565b81146101f657600080fd5b5056fea26469706673582212204f5162e0800bb10e7589b93d1a0d4c35f0491e926d3792a316535f12ad5207ef64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063249cb3fa14610030575b600080fd5b61004a60048036038101906100459190610120565b610060565b604051610057919061016f565b60405180910390f35b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100cc576000801b6100ee565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b600081359050610105816101cb565b92915050565b60008135905061011a816101e2565b92915050565b60008060408385031215610137576101366101c6565b5b60006101458582860161010b565b9250506020610156858286016100f6565b9150509250929050565b6101698161019c565b82525050565b60006020820190506101846000830184610160565b92915050565b6000610195826101a6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101d48161018a565b81146101df57600080fd5b50565b6101eb8161019c565b81146101f657600080fd5b5056fea26469706673582212204f5162e0800bb10e7589b93d1a0d4c35f0491e926d3792a316535f12ad5207ef64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "404:993:179:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "404:993:179:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;876:7;906:20;:35;927:13;906:35;;;;;;;;;;;:44;942:7;906:44;;;;;;;;;;;;;;;;;;;;;;;;;:84;;985:4;977:13;;906:84;;;510:33;906:84;899:91;;717:280;;;;:::o;7:139:191:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:119;;;428:79;;:::i;:::-;390:119;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;297:474;;;;;:::o;777:118::-;864:24;882:5;864:24;:::i;:::-;859:3;852:37;777:118;;:::o;901:222::-;994:4;1032:2;1021:9;1017:18;1009:26;;1045:71;1113:1;1102:9;1098:17;1089:6;1045:71;:::i;:::-;901:222;;;;:::o;1210:96::-;1247:7;1276:24;1294:5;1276:24;:::i;:::-;1265:35;;1210:96;;;:::o;1312:77::-;1349:7;1378:5;1367:16;;1312:77;;;:::o;1395:126::-;1432:7;1472:42;1465:5;1461:54;1450:65;;1395:126;;;:::o;1650:117::-;1759:1;1756;1749:12;1773:122;1846:24;1864:5;1846:24;:::i;:::-;1839:5;1836:35;1826:63;;1885:1;1882;1875:12;1826:63;1773:122;:::o;1901:::-;1974:24;1992:5;1974:24;:::i;:::-;1967:5;1964:35;1954:63;;2013:1;2010;2003:12;1954:63;1901:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1820Implementer.sol\";\n\n/**\n * @dev Implementation of the {IERC1820Implementer} interface.\n *\n * Contracts may inherit from this and call {_registerInterfaceForAddress} to\n * declare their willingness to be implementers.\n * {IERC1820Registry-setInterfaceImplementer} should then be called for the\n * registration to be complete.\n */\ncontract ERC1820Implementer is IERC1820Implementer {\n    bytes32 private constant _ERC1820_ACCEPT_MAGIC = keccak256(\"ERC1820_ACCEPT_MAGIC\");\n\n    mapping(bytes32 => mapping(address => bool)) private _supportedInterfaces;\n\n    /**\n     * @dev See {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account)\n        public\n        view\n        virtual\n        override\n        returns (bytes32)\n    {\n        return _supportedInterfaces[interfaceHash][account] ? _ERC1820_ACCEPT_MAGIC : bytes32(0x00);\n    }\n\n    /**\n     * @dev Declares the contract as willing to be an implementer of\n     * `interfaceHash` for `account`.\n     *\n     * See {IERC1820Registry-setInterfaceImplementer} and\n     * {IERC1820Registry-interfaceHash}.\n     */\n    function _registerInterfaceForAddress(bytes32 interfaceHash, address account) internal virtual {\n        _supportedInterfaces[interfaceHash][account] = true;\n    }\n}\n",
  "sourcePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
  "ast": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        25111
      ],
      "IERC1820Implementer": [
        25137
      ]
    },
    "id": 25112,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25054,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:179"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 25055,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25112,
        "sourceUnit": 25138,
        "src": "58:35:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25057,
              "name": "IERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25137,
              "src": "435:19:179"
            },
            "id": 25058,
            "nodeType": "InheritanceSpecifier",
            "src": "435:19:179"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25056,
          "nodeType": "StructuredDocumentation",
          "src": "95:308:179",
          "text": " @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."
        },
        "fullyImplemented": true,
        "id": 25111,
        "linearizedBaseContracts": [
          25111,
          25137
        ],
        "name": "ERC1820Implementer",
        "nameLocation": "413:18:179",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 25063,
            "mutability": "constant",
            "name": "_ERC1820_ACCEPT_MAGIC",
            "nameLocation": "486:21:179",
            "nodeType": "VariableDeclaration",
            "scope": 25111,
            "src": "461:82:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 25059,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "461:7:179",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243313832305f4143434550545f4d41474943",
                  "id": 25061,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "520:22:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  },
                  "value": "ERC1820_ACCEPT_MAGIC"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  }
                ],
                "id": 25060,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "510:9:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 25062,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "510:33:179",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25069,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "603:20:179",
            "nodeType": "VariableDeclaration",
            "scope": 25111,
            "src": "550:73:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 25068,
              "keyType": {
                "id": 25064,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "550:44:179",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 25067,
                "keyType": {
                  "id": 25065,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:7:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "569:24:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 25066,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:4:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              25136
            ],
            "body": {
              "id": 25092,
              "nodeType": "Block",
              "src": "889:108:179",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25080,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25069,
                          "src": "906:20:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 25082,
                        "indexExpression": {
                          "id": 25081,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25072,
                          "src": "927:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "906:35:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25084,
                      "indexExpression": {
                        "id": 25083,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25074,
                        "src": "942:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "906:44:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 25088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "985:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 25087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 25086,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:179",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:13:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 25090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "906:84:179",
                    "trueExpression": {
                      "id": 25085,
                      "name": "_ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25063,
                      "src": "953:21:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 25079,
                  "id": 25091,
                  "nodeType": "Return",
                  "src": "899:91:179"
                }
              ]
            },
            "documentation": {
              "id": 25070,
              "nodeType": "StructuredDocumentation",
              "src": "630:82:179",
              "text": " @dev See {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "249cb3fa",
            "id": 25093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nameLocation": "726:31:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "850:8:179"
            },
            "parameters": {
              "id": 25075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25072,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "766:13:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25093,
                  "src": "758:21:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25071,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25074,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "789:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25093,
                  "src": "781:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:40:179"
            },
            "returnParameters": {
              "id": 25079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25093,
                  "src": "876:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25077,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:9:179"
            },
            "scope": 25111,
            "src": "717:280:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25109,
              "nodeType": "Block",
              "src": "1327:68:179",
              "statements": [
                {
                  "expression": {
                    "id": 25107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25101,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25069,
                          "src": "1337:20:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 25104,
                        "indexExpression": {
                          "id": 25102,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25096,
                          "src": "1358:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:35:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25105,
                      "indexExpression": {
                        "id": 25103,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25098,
                        "src": "1373:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1337:44:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:4:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1337:51:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25108,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:51:179"
                }
              ]
            },
            "documentation": {
              "id": 25094,
              "nodeType": "StructuredDocumentation",
              "src": "1003:224:179",
              "text": " @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."
            },
            "id": 25110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nameLocation": "1241:28:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25096,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "1278:13:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25110,
                  "src": "1270:21:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25095,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25098,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1301:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25110,
                  "src": "1293:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:40:179"
            },
            "returnParameters": {
              "id": 25100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:179"
            },
            "scope": 25111,
            "src": "1232:163:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 25112,
        "src": "404:993:179",
        "usedErrors": []
      }
    ],
    "src": "33:1365:179"
  },
  "legacyAST": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        25111
      ],
      "IERC1820Implementer": [
        25137
      ]
    },
    "id": 25112,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25054,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:179"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 25055,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25112,
        "sourceUnit": 25138,
        "src": "58:35:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25057,
              "name": "IERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25137,
              "src": "435:19:179"
            },
            "id": 25058,
            "nodeType": "InheritanceSpecifier",
            "src": "435:19:179"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25056,
          "nodeType": "StructuredDocumentation",
          "src": "95:308:179",
          "text": " @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."
        },
        "fullyImplemented": true,
        "id": 25111,
        "linearizedBaseContracts": [
          25111,
          25137
        ],
        "name": "ERC1820Implementer",
        "nameLocation": "413:18:179",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 25063,
            "mutability": "constant",
            "name": "_ERC1820_ACCEPT_MAGIC",
            "nameLocation": "486:21:179",
            "nodeType": "VariableDeclaration",
            "scope": 25111,
            "src": "461:82:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 25059,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "461:7:179",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243313832305f4143434550545f4d41474943",
                  "id": 25061,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "520:22:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  },
                  "value": "ERC1820_ACCEPT_MAGIC"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  }
                ],
                "id": 25060,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "510:9:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 25062,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "510:33:179",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25069,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "603:20:179",
            "nodeType": "VariableDeclaration",
            "scope": 25111,
            "src": "550:73:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 25068,
              "keyType": {
                "id": 25064,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "550:44:179",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 25067,
                "keyType": {
                  "id": 25065,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:7:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "569:24:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 25066,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:4:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              25136
            ],
            "body": {
              "id": 25092,
              "nodeType": "Block",
              "src": "889:108:179",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25080,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25069,
                          "src": "906:20:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 25082,
                        "indexExpression": {
                          "id": 25081,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25072,
                          "src": "927:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "906:35:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25084,
                      "indexExpression": {
                        "id": 25083,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25074,
                        "src": "942:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "906:44:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 25088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "985:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 25087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 25086,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:179",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:13:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 25090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "906:84:179",
                    "trueExpression": {
                      "id": 25085,
                      "name": "_ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25063,
                      "src": "953:21:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 25079,
                  "id": 25091,
                  "nodeType": "Return",
                  "src": "899:91:179"
                }
              ]
            },
            "documentation": {
              "id": 25070,
              "nodeType": "StructuredDocumentation",
              "src": "630:82:179",
              "text": " @dev See {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "249cb3fa",
            "id": 25093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nameLocation": "726:31:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "850:8:179"
            },
            "parameters": {
              "id": 25075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25072,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "766:13:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25093,
                  "src": "758:21:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25071,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25074,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "789:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25093,
                  "src": "781:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:40:179"
            },
            "returnParameters": {
              "id": 25079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25093,
                  "src": "876:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25077,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:9:179"
            },
            "scope": 25111,
            "src": "717:280:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25109,
              "nodeType": "Block",
              "src": "1327:68:179",
              "statements": [
                {
                  "expression": {
                    "id": 25107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25101,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25069,
                          "src": "1337:20:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 25104,
                        "indexExpression": {
                          "id": 25102,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25096,
                          "src": "1358:13:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:35:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25105,
                      "indexExpression": {
                        "id": 25103,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25098,
                        "src": "1373:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1337:44:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 25106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:4:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1337:51:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25108,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:51:179"
                }
              ]
            },
            "documentation": {
              "id": 25094,
              "nodeType": "StructuredDocumentation",
              "src": "1003:224:179",
              "text": " @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."
            },
            "id": 25110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nameLocation": "1241:28:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25096,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "1278:13:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25110,
                  "src": "1270:21:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25095,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25098,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1301:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 25110,
                  "src": "1293:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:40:179"
            },
            "returnParameters": {
              "id": 25100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:179"
            },
            "scope": 25111,
            "src": "1232:163:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 25112,
        "src": "404:993:179",
        "usedErrors": []
      }
    ],
    "src": "33:1365:179"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-12T03:39:31.695Z",
  "devdoc": {
    "details": "Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.",
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "details": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}