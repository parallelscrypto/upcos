{
  "contractName": "TokenTimelock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \\\"advisors get all of their tokens after 1 year\\\".\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"returns\":{\"_0\":\"the beneficiary of the tokens.\"}},\"releaseTime()\":{\"returns\":{\"_0\":\"the time when the tokens are released.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being held.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"release()\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol\":\"TokenTimelock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol\":{\"keccak256\":\"0x4eca1099503463dec6a0e6268e0006fe6c74a4a84d81c802e5ff60d697c30b62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6731ae24bde55538ada1ae676442d592243372db3ba57eb33fb59ab6a1f2a645\",\"dweb:/ipfs/QmW6nf9Wxmu11GqnC4dMih6bYEurFDMnKeKsJjqMoe3Loj\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162000e7b38038062000e7b833981810160405281019062000037919062000140565b4281116200007c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007390620001c3565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060c08181525050505050620002ea565b6000815190506200010c816200029c565b92915050565b6000815190506200012381620002b6565b92915050565b6000815190506200013a81620002d0565b92915050565b6000806000606084860312156200015c576200015b62000248565b5b60006200016c8682870162000112565b93505060206200017f86828701620000fb565b9250506040620001928682870162000129565b9150509250925092565b6000620001ab603283620001e5565b9150620001b8826200024d565b604082019050919050565b60006020820190508181036000830152620001de816200019c565b9050919050565b600082825260208201905092915050565b600062000203826200021e565b9050919050565b60006200021782620001f6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260008201527f65666f72652063757272656e742074696d650000000000000000000000000000602082015250565b620002a781620001f6565b8114620002b357600080fd5b50565b620002c1816200020a565b8114620002cd57600080fd5b50565b620002db816200023e565b8114620002e757600080fd5b50565b60805160601c60a05160601c60c051610b5c6200031f600039600061023e0152600060b9015260006102660152610b5c6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f1461006f578063b91d400114610079578063fc0c546a14610097575b600080fd5b6100596100b5565b604051610066919061075e565b60405180910390f35b6100776100dd565b005b61008161023a565b60405161008e919061087f565b60405180910390f35b61009f610262565b6040516100ac91906107a2565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6100e561023a565b421015610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906107df565b60405180910390fd5b6000610131610262565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610169919061075e565b60206040518083038186803b15801561018157600080fd5b505afa158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b991906105d4565b9050600081116101fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f59061085f565b60405180910390fd5b6102376102096100b5565b82610212610262565b73ffffffffffffffffffffffffffffffffffffffff1661028a9092919063ffffffff16565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b61030b8363a9059cbb60e01b84846040516024016102a9929190610779565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610310565b505050565b6000610372826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166103d79092919063ffffffff16565b90506000815111156103d2578080602001905181019061039291906105a7565b6103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c89061083f565b60405180910390fd5b5b505050565b60606103e684846000856103ef565b90509392505050565b606082471015610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b906107ff565b60405180910390fd5b61043d85610503565b61047c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104739061081f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516104a59190610747565b60006040518083038185875af1925050503d80600081146104e2576040519150601f19603f3d011682016040523d82523d6000602084013e6104e7565b606091505b50915091506104f7828286610516565b92505050949350505050565b600080823b905060008111915050919050565b6060831561052657829050610576565b6000835111156105395782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d91906107bd565b60405180910390fd5b9392505050565b60008151905061058c81610af8565b92915050565b6000815190506105a181610b0f565b92915050565b6000602082840312156105bd576105bc61097d565b5b60006105cb8482850161057d565b91505092915050565b6000602082840312156105ea576105e961097d565b5b60006105f884828501610592565b91505092915050565b61060a816108cc565b82525050565b600061061b8261089a565b61062581856108b0565b935061063581856020860161094a565b80840191505092915050565b61064a81610914565b82525050565b600061065b826108a5565b61066581856108bb565b935061067581856020860161094a565b61067e81610982565b840191505092915050565b60006106966032836108bb565b91506106a182610993565b604082019050919050565b60006106b96026836108bb565b91506106c4826109e2565b604082019050919050565b60006106dc601d836108bb565b91506106e782610a31565b602082019050919050565b60006106ff602a836108bb565b915061070a82610a5a565b604082019050919050565b60006107226023836108bb565b915061072d82610aa9565b604082019050919050565b6107418161090a565b82525050565b60006107538284610610565b915081905092915050565b60006020820190506107736000830184610601565b92915050565b600060408201905061078e6000830185610601565b61079b6020830184610738565b9392505050565b60006020820190506107b76000830184610641565b92915050565b600060208201905081810360008301526107d78184610650565b905092915050565b600060208201905081810360008301526107f881610689565b9050919050565b60006020820190508181036000830152610818816106ac565b9050919050565b60006020820190508181036000830152610838816106cf565b9050919050565b60006020820190508181036000830152610858816106f2565b9050919050565b6000602082019050818103600083015261087881610715565b9050919050565b60006020820190506108946000830184610738565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006108d7826108ea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061091f82610926565b9050919050565b600061093182610938565b9050919050565b6000610943826108ea565b9050919050565b60005b8381101561096857808201518184015260208101905061094d565b83811115610977576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260008201527f65666f72652072656c656173652074696d650000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560008201527f6173650000000000000000000000000000000000000000000000000000000000602082015250565b610b01816108de565b8114610b0c57600080fd5b50565b610b188161090a565b8114610b2357600080fd5b5056fea26469706673582212202eb7b4b691558627e5d1621d97b2fb5dd19f2b8d91f20283f6e3b4531ce5d24b64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f1461006f578063b91d400114610079578063fc0c546a14610097575b600080fd5b6100596100b5565b604051610066919061075e565b60405180910390f35b6100776100dd565b005b61008161023a565b60405161008e919061087f565b60405180910390f35b61009f610262565b6040516100ac91906107a2565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6100e561023a565b421015610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906107df565b60405180910390fd5b6000610131610262565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610169919061075e565b60206040518083038186803b15801561018157600080fd5b505afa158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b991906105d4565b9050600081116101fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f59061085f565b60405180910390fd5b6102376102096100b5565b82610212610262565b73ffffffffffffffffffffffffffffffffffffffff1661028a9092919063ffffffff16565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b61030b8363a9059cbb60e01b84846040516024016102a9929190610779565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610310565b505050565b6000610372826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166103d79092919063ffffffff16565b90506000815111156103d2578080602001905181019061039291906105a7565b6103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c89061083f565b60405180910390fd5b5b505050565b60606103e684846000856103ef565b90509392505050565b606082471015610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b906107ff565b60405180910390fd5b61043d85610503565b61047c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104739061081f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516104a59190610747565b60006040518083038185875af1925050503d80600081146104e2576040519150601f19603f3d011682016040523d82523d6000602084013e6104e7565b606091505b50915091506104f7828286610516565b92505050949350505050565b600080823b905060008111915050919050565b6060831561052657829050610576565b6000835111156105395782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d91906107bd565b60405180910390fd5b9392505050565b60008151905061058c81610af8565b92915050565b6000815190506105a181610b0f565b92915050565b6000602082840312156105bd576105bc61097d565b5b60006105cb8482850161057d565b91505092915050565b6000602082840312156105ea576105e961097d565b5b60006105f884828501610592565b91505092915050565b61060a816108cc565b82525050565b600061061b8261089a565b61062581856108b0565b935061063581856020860161094a565b80840191505092915050565b61064a81610914565b82525050565b600061065b826108a5565b61066581856108bb565b935061067581856020860161094a565b61067e81610982565b840191505092915050565b60006106966032836108bb565b91506106a182610993565b604082019050919050565b60006106b96026836108bb565b91506106c4826109e2565b604082019050919050565b60006106dc601d836108bb565b91506106e782610a31565b602082019050919050565b60006106ff602a836108bb565b915061070a82610a5a565b604082019050919050565b60006107226023836108bb565b915061072d82610aa9565b604082019050919050565b6107418161090a565b82525050565b60006107538284610610565b915081905092915050565b60006020820190506107736000830184610601565b92915050565b600060408201905061078e6000830185610601565b61079b6020830184610738565b9392505050565b60006020820190506107b76000830184610641565b92915050565b600060208201905081810360008301526107d78184610650565b905092915050565b600060208201905081810360008301526107f881610689565b9050919050565b60006020820190508181036000830152610818816106ac565b9050919050565b60006020820190508181036000830152610838816106cf565b9050919050565b60006020820190508181036000830152610858816106f2565b9050919050565b6000602082019050818103600083015261087881610715565b9050919050565b60006020820190506108946000830184610738565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006108d7826108ea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061091f82610926565b9050919050565b600061093182610938565b9050919050565b6000610943826108ea565b9050919050565b60005b8381101561096857808201518184015260208101905061094d565b83811115610977576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260008201527f65666f72652072656c656173652074696d650000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560008201527f6173650000000000000000000000000000000000000000000000000000000000602082015250565b610b01816108de565b8114610b0c57600080fd5b50565b610b188161090a565b8114610b2357600080fd5b5056fea26469706673582212202eb7b4b691558627e5d1621d97b2fb5dd19f2b8d91f20283f6e3b4531ce5d24b64736f6c63430008070033",
  "immutableReferences": {
    "19664": [
      {
        "length": 32,
        "start": 614
      }
    ],
    "19666": [
      {
        "length": 32,
        "start": 185
      }
    ],
    "19668": [
      {
        "length": 32,
        "start": 574
      }
    ]
  },
  "sourceMap": "307:1543:143:-:0;;;642:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;776:15;761:12;:30;753:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;865:6;856:15;;;;;;;;;;;;896:12;881:27;;;;;;;;;;;;933:12;918:27;;;;;;642:310;;;307:1543;;7:143:191;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:175::-;229:5;260:6;254:13;245:22;;276:49;319:5;276:49;:::i;:::-;156:175;;;;:::o;337:143::-;394:5;425:6;419:13;410:22;;441:33;468:5;441:33;:::i;:::-;337:143;;;;:::o;486:695::-;590:6;598;606;655:2;643:9;634:7;630:23;626:32;623:119;;;661:79;;:::i;:::-;623:119;781:1;806:80;878:7;869:6;858:9;854:22;806:80;:::i;:::-;796:90;;752:144;935:2;961:64;1017:7;1008:6;997:9;993:22;961:64;:::i;:::-;951:74;;906:129;1074:2;1100:64;1156:7;1147:6;1136:9;1132:22;1100:64;:::i;:::-;1090:74;;1045:129;486:695;;;;;:::o;1187:366::-;1329:3;1350:67;1414:2;1409:3;1350:67;:::i;:::-;1343:74;;1426:93;1515:3;1426:93;:::i;:::-;1544:2;1539:3;1535:12;1528:19;;1187:366;;;:::o;1559:419::-;1725:4;1763:2;1752:9;1748:18;1740:26;;1812:9;1806:4;1802:20;1798:1;1787:9;1783:17;1776:47;1840:131;1966:4;1840:131;:::i;:::-;1832:139;;1559:419;;;:::o;2065:169::-;2149:11;2183:6;2178:3;2171:19;2223:4;2218:3;2214:14;2199:29;;2065:169;;;;:::o;2240:96::-;2277:7;2306:24;2324:5;2306:24;:::i;:::-;2295:35;;2240:96;;;:::o;2342:112::-;2395:7;2424:24;2442:5;2424:24;:::i;:::-;2413:35;;2342:112;;;:::o;2460:126::-;2497:7;2537:42;2530:5;2526:54;2515:65;;2460:126;;;:::o;2592:77::-;2629:7;2658:5;2647:16;;2592:77;;;:::o;2798:117::-;2907:1;2904;2897:12;2921:237;3061:34;3057:1;3049:6;3045:14;3038:58;3130:20;3125:2;3117:6;3113:15;3106:45;2921:237;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:154::-;3381:40;3415:5;3381:40;:::i;:::-;3374:5;3371:51;3361:79;;3436:1;3433;3426:12;3361:79;3292:154;:::o;3452:122::-;3525:24;3543:5;3525:24;:::i;:::-;3518:5;3515:35;3505:63;;3564:1;3561;3554:12;3505:63;3452:122;:::o;307:1543:143:-;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "307:1543:143:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1520:328;;;:::i;:::-;;1336:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1011:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1163:97;1215:7;1241:12;1234:19;;1163:97;:::o;1520:328::-;1591:13;:11;:13::i;:::-;1572:15;:32;;1564:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1670:14;1687:7;:5;:7::i;:::-;:17;;;1713:4;1687:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1670:49;;1746:1;1737:6;:10;1729:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1798:43;1819:13;:11;:13::i;:::-;1834:6;1798:7;:5;:7::i;:::-;:20;;;;:43;;;;;:::i;:::-;1554:294;1520:328::o;1336:97::-;1388:7;1414:12;1407:19;;1336:97;:::o;1011:84::-;1057:6;1082;1075:13;;1011:84;:::o;634:205:142:-;746:86;766:5;796:23;;;821:2;825:5;773:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:19;:86::i;:::-;634:205;;;:::o;3140:706::-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;3585:27;;;;:69;;;;;:::i;:::-;3559:95;;3688:1;3668:10;:17;:21;3664:176;;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3664:176;3210:636;3140:706;;:::o;3461:223:160:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4836:18;4847:6;4836:10;:18::i;:::-;4828:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4900:12;4914:23;4941:6;:11;;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;;;;4548:499;;;;;;:::o;718:377::-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;7161:692::-;7307:12;7335:7;7331:516;;;7365:10;7358:17;;;;7331:516;7496:1;7476:10;:17;:21;7472:365;;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;;;;;;;;;;:::i;:::-;;;;;;;;7161:692;;;;;;:::o;7:137:191:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:143::-;207:5;238:6;232:13;223:22;;254:33;281:5;254:33;:::i;:::-;150:143;;;;:::o;299:345::-;366:6;415:2;403:9;394:7;390:23;386:32;383:119;;;421:79;;:::i;:::-;383:119;541:1;566:61;619:7;610:6;599:9;595:22;566:61;:::i;:::-;556:71;;512:125;299:345;;;;:::o;650:351::-;720:6;769:2;757:9;748:7;744:23;740:32;737:119;;;775:79;;:::i;:::-;737:119;895:1;920:64;976:7;967:6;956:9;952:22;920:64;:::i;:::-;910:74;;866:128;650:351;;;;:::o;1007:118::-;1094:24;1112:5;1094:24;:::i;:::-;1089:3;1082:37;1007:118;;:::o;1131:373::-;1235:3;1263:38;1295:5;1263:38;:::i;:::-;1317:88;1398:6;1393:3;1317:88;:::i;:::-;1310:95;;1414:52;1459:6;1454:3;1447:4;1440:5;1436:16;1414:52;:::i;:::-;1491:6;1486:3;1482:16;1475:23;;1239:265;1131:373;;;;:::o;1510:163::-;1613:53;1660:5;1613:53;:::i;:::-;1608:3;1601:66;1510:163;;:::o;1679:364::-;1767:3;1795:39;1828:5;1795:39;:::i;:::-;1850:71;1914:6;1909:3;1850:71;:::i;:::-;1843:78;;1930:52;1975:6;1970:3;1963:4;1956:5;1952:16;1930:52;:::i;:::-;2007:29;2029:6;2007:29;:::i;:::-;2002:3;1998:39;1991:46;;1771:272;1679:364;;;;:::o;2049:366::-;2191:3;2212:67;2276:2;2271:3;2212:67;:::i;:::-;2205:74;;2288:93;2377:3;2288:93;:::i;:::-;2406:2;2401:3;2397:12;2390:19;;2049:366;;;:::o;2421:::-;2563:3;2584:67;2648:2;2643:3;2584:67;:::i;:::-;2577:74;;2660:93;2749:3;2660:93;:::i;:::-;2778:2;2773:3;2769:12;2762:19;;2421:366;;;:::o;2793:::-;2935:3;2956:67;3020:2;3015:3;2956:67;:::i;:::-;2949:74;;3032:93;3121:3;3032:93;:::i;:::-;3150:2;3145:3;3141:12;3134:19;;2793:366;;;:::o;3165:::-;3307:3;3328:67;3392:2;3387:3;3328:67;:::i;:::-;3321:74;;3404:93;3493:3;3404:93;:::i;:::-;3522:2;3517:3;3513:12;3506:19;;3165:366;;;:::o;3537:::-;3679:3;3700:67;3764:2;3759:3;3700:67;:::i;:::-;3693:74;;3776:93;3865:3;3776:93;:::i;:::-;3894:2;3889:3;3885:12;3878:19;;3537:366;;;:::o;3909:118::-;3996:24;4014:5;3996:24;:::i;:::-;3991:3;3984:37;3909:118;;:::o;4033:271::-;4163:3;4185:93;4274:3;4265:6;4185:93;:::i;:::-;4178:100;;4295:3;4288:10;;4033:271;;;;:::o;4310:222::-;4403:4;4441:2;4430:9;4426:18;4418:26;;4454:71;4522:1;4511:9;4507:17;4498:6;4454:71;:::i;:::-;4310:222;;;;:::o;4538:332::-;4659:4;4697:2;4686:9;4682:18;4674:26;;4710:71;4778:1;4767:9;4763:17;4754:6;4710:71;:::i;:::-;4791:72;4859:2;4848:9;4844:18;4835:6;4791:72;:::i;:::-;4538:332;;;;;:::o;4876:254::-;4985:4;5023:2;5012:9;5008:18;5000:26;;5036:87;5120:1;5109:9;5105:17;5096:6;5036:87;:::i;:::-;4876:254;;;;:::o;5136:313::-;5249:4;5287:2;5276:9;5272:18;5264:26;;5336:9;5330:4;5326:20;5322:1;5311:9;5307:17;5300:47;5364:78;5437:4;5428:6;5364:78;:::i;:::-;5356:86;;5136:313;;;;:::o;5455:419::-;5621:4;5659:2;5648:9;5644:18;5636:26;;5708:9;5702:4;5698:20;5694:1;5683:9;5679:17;5672:47;5736:131;5862:4;5736:131;:::i;:::-;5728:139;;5455:419;;;:::o;5880:::-;6046:4;6084:2;6073:9;6069:18;6061:26;;6133:9;6127:4;6123:20;6119:1;6108:9;6104:17;6097:47;6161:131;6287:4;6161:131;:::i;:::-;6153:139;;5880:419;;;:::o;6305:::-;6471:4;6509:2;6498:9;6494:18;6486:26;;6558:9;6552:4;6548:20;6544:1;6533:9;6529:17;6522:47;6586:131;6712:4;6586:131;:::i;:::-;6578:139;;6305:419;;;:::o;6730:::-;6896:4;6934:2;6923:9;6919:18;6911:26;;6983:9;6977:4;6973:20;6969:1;6958:9;6954:17;6947:47;7011:131;7137:4;7011:131;:::i;:::-;7003:139;;6730:419;;;:::o;7155:::-;7321:4;7359:2;7348:9;7344:18;7336:26;;7408:9;7402:4;7398:20;7394:1;7383:9;7379:17;7372:47;7436:131;7562:4;7436:131;:::i;:::-;7428:139;;7155:419;;;:::o;7580:222::-;7673:4;7711:2;7700:9;7696:18;7688:26;;7724:71;7792:1;7781:9;7777:17;7768:6;7724:71;:::i;:::-;7580:222;;;;:::o;7889:98::-;7940:6;7974:5;7968:12;7958:22;;7889:98;;;:::o;7993:99::-;8045:6;8079:5;8073:12;8063:22;;7993:99;;;:::o;8098:147::-;8199:11;8236:3;8221:18;;8098:147;;;;:::o;8251:169::-;8335:11;8369:6;8364:3;8357:19;8409:4;8404:3;8400:14;8385:29;;8251:169;;;;:::o;8426:96::-;8463:7;8492:24;8510:5;8492:24;:::i;:::-;8481:35;;8426:96;;;:::o;8528:90::-;8562:7;8605:5;8598:13;8591:21;8580:32;;8528:90;;;:::o;8624:126::-;8661:7;8701:42;8694:5;8690:54;8679:65;;8624:126;;;:::o;8756:77::-;8793:7;8822:5;8811:16;;8756:77;;;:::o;8839:142::-;8905:9;8938:37;8969:5;8938:37;:::i;:::-;8925:50;;8839:142;;;:::o;8987:126::-;9037:9;9070:37;9101:5;9070:37;:::i;:::-;9057:50;;8987:126;;;:::o;9119:113::-;9169:9;9202:24;9220:5;9202:24;:::i;:::-;9189:37;;9119:113;;;:::o;9238:307::-;9306:1;9316:113;9330:6;9327:1;9324:13;9316:113;;;9415:1;9410:3;9406:11;9400:18;9396:1;9391:3;9387:11;9380:39;9352:2;9349:1;9345:10;9340:15;;9316:113;;;9447:6;9444:1;9441:13;9438:101;;;9527:1;9518:6;9513:3;9509:16;9502:27;9438:101;9287:258;9238:307;;;:::o;9674:117::-;9783:1;9780;9773:12;9797:102;9838:6;9889:2;9885:7;9880:2;9873:5;9869:14;9865:28;9855:38;;9797:102;;;:::o;9905:237::-;10045:34;10041:1;10033:6;10029:14;10022:58;10114:20;10109:2;10101:6;10097:15;10090:45;9905:237;:::o;10148:225::-;10288:34;10284:1;10276:6;10272:14;10265:58;10357:8;10352:2;10344:6;10340:15;10333:33;10148:225;:::o;10379:179::-;10519:31;10515:1;10507:6;10503:14;10496:55;10379:179;:::o;10564:229::-;10704:34;10700:1;10692:6;10688:14;10681:58;10773:12;10768:2;10760:6;10756:15;10749:37;10564:229;:::o;10799:222::-;10939:34;10935:1;10927:6;10923:14;10916:58;11008:5;11003:2;10995:6;10991:15;10984:30;10799:222;:::o;11027:116::-;11097:21;11112:5;11097:21;:::i;:::-;11090:5;11087:32;11077:60;;11133:1;11130;11123:12;11077:60;11027:116;:::o;11149:122::-;11222:24;11240:5;11222:24;:::i;:::-;11215:5;11212:35;11202:63;;11261:1;11258;11251:12;11202:63;11149:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 private immutable _token;\n\n    // beneficiary of tokens after they are released\n    address private immutable _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 private immutable _releaseTime;\n\n    constructor(\n        IERC20 token_,\n        address beneficiary_,\n        uint256 releaseTime_\n    ) {\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourcePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol",
  "ast": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        23192
      ],
      "IERC20": [
        17565
      ],
      "SafeERC20": [
        19653
      ],
      "TokenTimelock": [
        19768
      ]
    },
    "id": 19769,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19655,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:143"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 19656,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19769,
        "sourceUnit": 19654,
        "src": "58:25:143",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19657,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:143",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 19768,
        "linearizedBaseContracts": [
          19768
        ],
        "name": "TokenTimelock",
        "nameLocation": "316:13:143",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19661,
            "libraryName": {
              "id": 19658,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19653,
              "src": "342:9:143"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:143",
            "typeName": {
              "id": 19660,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19659,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17565,
                "src": "356:6:143"
              },
              "referencedDeclaration": 17565,
              "src": "356:6:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$17565",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 19664,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "439:6:143",
            "nodeType": "VariableDeclaration",
            "scope": 19768,
            "src": "414:31:143",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$17565",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 19663,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19662,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17565,
                "src": "414:6:143"
              },
              "referencedDeclaration": 17565,
              "src": "414:6:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$17565",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19666,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nameLocation": "531:12:143",
            "nodeType": "VariableDeclaration",
            "scope": 19768,
            "src": "505:38:143",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19665,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:143",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19668,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nameLocation": "623:12:143",
            "nodeType": "VariableDeclaration",
            "scope": 19768,
            "src": "597:38:143",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19667,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:143",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 19698,
              "nodeType": "Block",
              "src": "743:209:143",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19679,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19675,
                          "src": "761:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 19680,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "776:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 19681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "776:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "761:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 19683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:52:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 19678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "753:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:93:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19685,
                  "nodeType": "ExpressionStatement",
                  "src": "753:93:143"
                },
                {
                  "expression": {
                    "id": 19688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19686,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19664,
                      "src": "856:6:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17565",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19687,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19671,
                      "src": "865:6:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17565",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "856:15:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 19689,
                  "nodeType": "ExpressionStatement",
                  "src": "856:15:143"
                },
                {
                  "expression": {
                    "id": 19692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19690,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19666,
                      "src": "881:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19691,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19673,
                      "src": "896:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "881:27:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19693,
                  "nodeType": "ExpressionStatement",
                  "src": "881:27:143"
                },
                {
                  "expression": {
                    "id": 19696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19694,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19668,
                      "src": "918:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19695,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19675,
                      "src": "933:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "918:27:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 19697,
                  "nodeType": "ExpressionStatement",
                  "src": "918:27:143"
                }
              ]
            },
            "id": 19699,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19671,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "670:6:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 19699,
                  "src": "663:13:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$17565",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 19670,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19669,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17565,
                      "src": "663:6:143"
                    },
                    "referencedDeclaration": 17565,
                    "src": "663:6:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19673,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nameLocation": "694:12:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 19699,
                  "src": "686:20:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:143",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19675,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "724:12:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 19699,
                  "src": "716:20:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:89:143"
            },
            "returnParameters": {
              "id": 19677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:143"
            },
            "scope": 19768,
            "src": "642:310:143",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19708,
              "nodeType": "Block",
              "src": "1065:30:143",
              "statements": [
                {
                  "expression": {
                    "id": 19706,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19664,
                    "src": "1082:6:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 19705,
                  "id": 19707,
                  "nodeType": "Return",
                  "src": "1075:13:143"
                }
              ]
            },
            "documentation": {
              "id": 19700,
              "nodeType": "StructuredDocumentation",
              "src": "958:48:143",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 19709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1020:5:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:2:143"
            },
            "returnParameters": {
              "id": 19705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19709,
                  "src": "1057:6:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$17565",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 19703,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19702,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17565,
                      "src": "1057:6:143"
                    },
                    "referencedDeclaration": 17565,
                    "src": "1057:6:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:8:143"
            },
            "scope": 19768,
            "src": "1011:84:143",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19717,
              "nodeType": "Block",
              "src": "1224:36:143",
              "statements": [
                {
                  "expression": {
                    "id": 19715,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19666,
                    "src": "1241:12:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 19714,
                  "id": 19716,
                  "nodeType": "Return",
                  "src": "1234:19:143"
                }
              ]
            },
            "documentation": {
              "id": 19710,
              "nodeType": "StructuredDocumentation",
              "src": "1101:57:143",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 19718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nameLocation": "1172:11:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1183:2:143"
            },
            "returnParameters": {
              "id": 19714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19718,
                  "src": "1215:7:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:143",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:9:143"
            },
            "scope": 19768,
            "src": "1163:97:143",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19726,
              "nodeType": "Block",
              "src": "1397:36:143",
              "statements": [
                {
                  "expression": {
                    "id": 19724,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19668,
                    "src": "1414:12:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 19723,
                  "id": 19725,
                  "nodeType": "Return",
                  "src": "1407:19:143"
                }
              ]
            },
            "documentation": {
              "id": 19719,
              "nodeType": "StructuredDocumentation",
              "src": "1266:65:143",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 19727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nameLocation": "1345:11:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:143"
            },
            "returnParameters": {
              "id": 19723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19727,
                  "src": "1388:7:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:9:143"
            },
            "scope": 19768,
            "src": "1336:97:143",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19766,
              "nodeType": "Block",
              "src": "1554:294:143",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 19732,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1572:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 19733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1572:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19734,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19727,
                            "src": "1591:11:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 19735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:13:143",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1572:32:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 19737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1606:52:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 19731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1564:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:95:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19739,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:95:143"
                },
                {
                  "assignments": [
                    19741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19741,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1678:6:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 19766,
                      "src": "1670:14:143",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1670:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19750,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1713:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$19768",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$19768",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 19746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1705:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1705:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1705:13:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19742,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19709,
                          "src": "1687:5:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$17565_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 19743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1687:7:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17565",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 19744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17504,
                      "src": "1687:17:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 19749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:32:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1670:49:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19752,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19741,
                          "src": "1737:6:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 19753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1737:10:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 19755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1749:37:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 19751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1729:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:58:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19757,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:58:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19761,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19718,
                          "src": "1819:11:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 19762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:13:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19763,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "1834:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19758,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19709,
                          "src": "1798:5:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$17565_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 19759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1798:7:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17565",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 19760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19460,
                      "src": "1798:20:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$17565_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$17565_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 19764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:43:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19765,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:43:143"
                }
              ]
            },
            "documentation": {
              "id": 19728,
              "nodeType": "StructuredDocumentation",
              "src": "1439:76:143",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 19767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "1529:7:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:2:143"
            },
            "returnParameters": {
              "id": 19730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:0:143"
            },
            "scope": 19768,
            "src": "1520:328:143",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 19769,
        "src": "307:1543:143",
        "usedErrors": []
      }
    ],
    "src": "33:1818:143"
  },
  "legacyAST": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        23192
      ],
      "IERC20": [
        17565
      ],
      "SafeERC20": [
        19653
      ],
      "TokenTimelock": [
        19768
      ]
    },
    "id": 19769,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19655,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:143"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 19656,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19769,
        "sourceUnit": 19654,
        "src": "58:25:143",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19657,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:143",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 19768,
        "linearizedBaseContracts": [
          19768
        ],
        "name": "TokenTimelock",
        "nameLocation": "316:13:143",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19661,
            "libraryName": {
              "id": 19658,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19653,
              "src": "342:9:143"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:143",
            "typeName": {
              "id": 19660,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19659,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17565,
                "src": "356:6:143"
              },
              "referencedDeclaration": 17565,
              "src": "356:6:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$17565",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 19664,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "439:6:143",
            "nodeType": "VariableDeclaration",
            "scope": 19768,
            "src": "414:31:143",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$17565",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 19663,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19662,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17565,
                "src": "414:6:143"
              },
              "referencedDeclaration": 17565,
              "src": "414:6:143",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$17565",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19666,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nameLocation": "531:12:143",
            "nodeType": "VariableDeclaration",
            "scope": 19768,
            "src": "505:38:143",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19665,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:143",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19668,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nameLocation": "623:12:143",
            "nodeType": "VariableDeclaration",
            "scope": 19768,
            "src": "597:38:143",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19667,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:143",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 19698,
              "nodeType": "Block",
              "src": "743:209:143",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19679,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19675,
                          "src": "761:12:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 19680,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "776:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 19681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "776:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "761:30:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 19683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:52:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 19678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "753:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:93:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19685,
                  "nodeType": "ExpressionStatement",
                  "src": "753:93:143"
                },
                {
                  "expression": {
                    "id": 19688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19686,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19664,
                      "src": "856:6:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17565",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19687,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19671,
                      "src": "865:6:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$17565",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "856:15:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 19689,
                  "nodeType": "ExpressionStatement",
                  "src": "856:15:143"
                },
                {
                  "expression": {
                    "id": 19692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19690,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19666,
                      "src": "881:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19691,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19673,
                      "src": "896:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "881:27:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19693,
                  "nodeType": "ExpressionStatement",
                  "src": "881:27:143"
                },
                {
                  "expression": {
                    "id": 19696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19694,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19668,
                      "src": "918:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19695,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19675,
                      "src": "933:12:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "918:27:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 19697,
                  "nodeType": "ExpressionStatement",
                  "src": "918:27:143"
                }
              ]
            },
            "id": 19699,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19671,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "670:6:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 19699,
                  "src": "663:13:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$17565",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 19670,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19669,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17565,
                      "src": "663:6:143"
                    },
                    "referencedDeclaration": 17565,
                    "src": "663:6:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19673,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nameLocation": "694:12:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 19699,
                  "src": "686:20:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:143",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19675,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "724:12:143",
                  "nodeType": "VariableDeclaration",
                  "scope": 19699,
                  "src": "716:20:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:89:143"
            },
            "returnParameters": {
              "id": 19677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:143"
            },
            "scope": 19768,
            "src": "642:310:143",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19708,
              "nodeType": "Block",
              "src": "1065:30:143",
              "statements": [
                {
                  "expression": {
                    "id": 19706,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19664,
                    "src": "1082:6:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 19705,
                  "id": 19707,
                  "nodeType": "Return",
                  "src": "1075:13:143"
                }
              ]
            },
            "documentation": {
              "id": 19700,
              "nodeType": "StructuredDocumentation",
              "src": "958:48:143",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 19709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1020:5:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:2:143"
            },
            "returnParameters": {
              "id": 19705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19709,
                  "src": "1057:6:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$17565",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 19703,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19702,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17565,
                      "src": "1057:6:143"
                    },
                    "referencedDeclaration": 17565,
                    "src": "1057:6:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$17565",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:8:143"
            },
            "scope": 19768,
            "src": "1011:84:143",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19717,
              "nodeType": "Block",
              "src": "1224:36:143",
              "statements": [
                {
                  "expression": {
                    "id": 19715,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19666,
                    "src": "1241:12:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 19714,
                  "id": 19716,
                  "nodeType": "Return",
                  "src": "1234:19:143"
                }
              ]
            },
            "documentation": {
              "id": 19710,
              "nodeType": "StructuredDocumentation",
              "src": "1101:57:143",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 19718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nameLocation": "1172:11:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1183:2:143"
            },
            "returnParameters": {
              "id": 19714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19718,
                  "src": "1215:7:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:143",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:9:143"
            },
            "scope": 19768,
            "src": "1163:97:143",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19726,
              "nodeType": "Block",
              "src": "1397:36:143",
              "statements": [
                {
                  "expression": {
                    "id": 19724,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19668,
                    "src": "1414:12:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 19723,
                  "id": 19725,
                  "nodeType": "Return",
                  "src": "1407:19:143"
                }
              ]
            },
            "documentation": {
              "id": 19719,
              "nodeType": "StructuredDocumentation",
              "src": "1266:65:143",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 19727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nameLocation": "1345:11:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:143"
            },
            "returnParameters": {
              "id": 19723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19727,
                  "src": "1388:7:143",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:143",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:9:143"
            },
            "scope": 19768,
            "src": "1336:97:143",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19766,
              "nodeType": "Block",
              "src": "1554:294:143",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 19732,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1572:5:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 19733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1572:15:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19734,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19727,
                            "src": "1591:11:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 19735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:13:143",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1572:32:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 19737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1606:52:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 19731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1564:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:95:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19739,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:95:143"
                },
                {
                  "assignments": [
                    19741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19741,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1678:6:143",
                      "nodeType": "VariableDeclaration",
                      "scope": 19766,
                      "src": "1670:14:143",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1670:7:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19750,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1713:4:143",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$19768",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$19768",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 19746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1705:7:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1705:7:143",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1705:13:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19742,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19709,
                          "src": "1687:5:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$17565_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 19743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1687:7:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17565",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 19744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17504,
                      "src": "1687:17:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 19749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:32:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1670:49:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 19754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 19752,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19741,
                          "src": "1737:6:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 19753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:1:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1737:10:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 19755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1749:37:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 19751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1729:7:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:58:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19757,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:58:143"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19761,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19718,
                          "src": "1819:11:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 19762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:13:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19763,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "1834:6:143",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 19758,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19709,
                          "src": "1798:5:143",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$17565_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 19759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1798:7:143",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17565",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 19760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19460,
                      "src": "1798:20:143",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$17565_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$17565_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 19764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:43:143",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19765,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:43:143"
                }
              ]
            },
            "documentation": {
              "id": 19728,
              "nodeType": "StructuredDocumentation",
              "src": "1439:76:143",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 19767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "1529:7:143",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:2:143"
            },
            "returnParameters": {
              "id": 19730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:0:143"
            },
            "scope": 19768,
            "src": "1520:328:143",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 19769,
        "src": "307:1543:143",
        "usedErrors": []
      }
    ],
    "src": "33:1818:143"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-12T03:39:31.589Z",
  "devdoc": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      }
    },
    "version": 1
  }
}