{
  "contractName": "MerkleProofWrapper",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "leaf",
          "type": "bytes32"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/MerkleProofWrapper.sol\":\"MerkleProofWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/MerkleProofWrapper.sol\":{\"keccak256\":\"0x7d4321c52d7fb732945b141aee110a41eabbba1c8fdd062576ce1f57e9ba0e40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05bef11e2619aae84cc0d1621410a1674b80b29640ac342756a170172c00be6f\",\"dweb:/ipfs/QmNeVtzoUDcD5ihMkWAU3rFt5rx8SaCiTMuEReTFeUQ3V8\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x86c1bbdc6813c021e138da527c44d2615931b0e5c7fa2f58369846ed288324a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeb8fb8169a5862d4d870c655a5f84b0839f19ff8704d84cd1bea37640e721ac\",\"dweb:/ipfs/QmcBTMVMAigtB3X2mru7wctzYv8aLatFXEUdFLDZDfQtcB\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506104af806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635a9a49c714610030575b600080fd5b61004a600480360381019061004591906101df565b610060565b60405161005791906102a0565b60405180910390f35b600061006d848484610076565b90509392505050565b60008082905060005b855181101561011e57600086828151811061009d5761009c6103df565b5b602002602001015190508083116100de5782816040516020016100c1929190610274565b60405160208183030381529060405280519060200120925061010a565b80836040516020016100f1929190610274565b6040516020818303038152906040528051906020012092505b5080806101169061035d565b91505061007f565b508381149150509392505050565b600061013f61013a846102e0565b6102bb565b9050808382526020820190508285602086028201111561016257610161610442565b5b60005b85811015610192578161017888826101ca565b845260208401935060208301925050600181019050610165565b5050509392505050565b600082601f8301126101b1576101b061043d565b5b81356101c184826020860161012c565b91505092915050565b6000813590506101d981610462565b92915050565b6000806000606084860312156101f8576101f761044c565b5b600084013567ffffffffffffffff81111561021657610215610447565b5b6102228682870161019c565b9350506020610233868287016101ca565b9250506040610244868287016101ca565b9150509250925092565b6102578161030c565b82525050565b61026e61026982610318565b6103a6565b82525050565b6000610280828561025d565b602082019150610290828461025d565b6020820191508190509392505050565b60006020820190506102b5600083018461024e565b92915050565b60006102c56102d6565b90506102d1828261032c565b919050565b6000604051905090565b600067ffffffffffffffff8211156102fb576102fa61040e565b5b602082029050602081019050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b61033582610451565b810181811067ffffffffffffffff821117156103545761035361040e565b5b80604052505050565b600061036882610322565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561039b5761039a6103b0565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61046b81610318565b811461047657600080fd5b5056fea264697066735822122091071e1699427849232f413381a7553bf7cbca86c825945182dcdd208f645f0964736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80635a9a49c714610030575b600080fd5b61004a600480360381019061004591906101df565b610060565b60405161005791906102a0565b60405180910390f35b600061006d848484610076565b90509392505050565b60008082905060005b855181101561011e57600086828151811061009d5761009c6103df565b5b602002602001015190508083116100de5782816040516020016100c1929190610274565b60405160208183030381529060405280519060200120925061010a565b80836040516020016100f1929190610274565b6040516020818303038152906040528051906020012092505b5080806101169061035d565b91505061007f565b508381149150509392505050565b600061013f61013a846102e0565b6102bb565b9050808382526020820190508285602086028201111561016257610161610442565b5b60005b85811015610192578161017888826101ca565b845260208401935060208301925050600181019050610165565b5050509392505050565b600082601f8301126101b1576101b061043d565b5b81356101c184826020860161012c565b91505092915050565b6000813590506101d981610462565b92915050565b6000806000606084860312156101f8576101f761044c565b5b600084013567ffffffffffffffff81111561021657610215610447565b5b6102228682870161019c565b9350506020610233868287016101ca565b9250506040610244868287016101ca565b9150509250925092565b6102578161030c565b82525050565b61026e61026982610318565b6103a6565b82525050565b6000610280828561025d565b602082019150610290828461025d565b6020820191508190509392505050565b60006020820190506102b5600083018461024e565b92915050565b60006102c56102d6565b90506102d1828261032c565b919050565b6000604051905090565b600067ffffffffffffffff8211156102fb576102fa61040e565b5b602082029050602081019050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b61033582610451565b810181811067ffffffffffffffff821117156103545761035361040e565b5b80604052505050565b600061036882610322565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561039b5761039a6103b0565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61046b81610318565b811461047657600080fd5b5056fea264697066735822122091071e1699427849232f413381a7553bf7cbca86c825945182dcdd208f645f0964736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "107:222:81:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "107:222:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;141:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;260:4;283:37;302:5;309:4;315;283:18;:37::i;:::-;276:44;;141:186;;;;;:::o;777:809:170:-;898:4;914:20;937:4;914:27;;957:9;952:515;976:5;:12;972:1;:16;952:515;;;1009:20;1032:5;1038:1;1032:8;;;;;;;;:::i;:::-;;;;;;;;1009:31;;1075:12;1059;:28;1055:402;;1227:12;1241;1210:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1200:55;;;;;;1185:70;;1055:402;;;1414:12;1428;1397:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1387:55;;;;;;1372:70;;1055:402;995:472;990:3;;;;;:::i;:::-;;;;952:515;;;;1575:4;1559:12;:20;1552:27;;;777:809;;;;;:::o;24:722:191:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:370::-;840:5;889:3;882:4;874:6;870:17;866:27;856:122;;897:79;;:::i;:::-;856:122;1014:6;1001:20;1039:94;1129:3;1121:6;1114:4;1106:6;1102:17;1039:94;:::i;:::-;1030:103;;846:293;769:370;;;;:::o;1145:139::-;1191:5;1229:6;1216:20;1207:29;;1245:33;1272:5;1245:33;:::i;:::-;1145:139;;;;:::o;1290:829::-;1392:6;1400;1408;1457:2;1445:9;1436:7;1432:23;1428:32;1425:119;;;1463:79;;:::i;:::-;1425:119;1611:1;1600:9;1596:17;1583:31;1641:18;1633:6;1630:30;1627:117;;;1663:79;;:::i;:::-;1627:117;1768:78;1838:7;1829:6;1818:9;1814:22;1768:78;:::i;:::-;1758:88;;1554:302;1895:2;1921:53;1966:7;1957:6;1946:9;1942:22;1921:53;:::i;:::-;1911:63;;1866:118;2023:2;2049:53;2094:7;2085:6;2074:9;2070:22;2049:53;:::i;:::-;2039:63;;1994:118;1290:829;;;;;:::o;2125:109::-;2206:21;2221:5;2206:21;:::i;:::-;2201:3;2194:34;2125:109;;:::o;2240:157::-;2345:45;2365:24;2383:5;2365:24;:::i;:::-;2345:45;:::i;:::-;2340:3;2333:58;2240:157;;:::o;2403:397::-;2543:3;2558:75;2629:3;2620:6;2558:75;:::i;:::-;2658:2;2653:3;2649:12;2642:19;;2671:75;2742:3;2733:6;2671:75;:::i;:::-;2771:2;2766:3;2762:12;2755:19;;2791:3;2784:10;;2403:397;;;;;:::o;2806:210::-;2893:4;2931:2;2920:9;2916:18;2908:26;;2944:65;3006:1;2995:9;2991:17;2982:6;2944:65;:::i;:::-;2806:210;;;;:::o;3022:129::-;3056:6;3083:20;;:::i;:::-;3073:30;;3112:33;3140:4;3132:6;3112:33;:::i;:::-;3022:129;;;:::o;3157:75::-;3190:6;3223:2;3217:9;3207:19;;3157:75;:::o;3238:311::-;3315:4;3405:18;3397:6;3394:30;3391:56;;;3427:18;;:::i;:::-;3391:56;3477:4;3469:6;3465:17;3457:25;;3537:4;3531;3527:15;3519:23;;3238:311;;;:::o;3555:90::-;3589:7;3632:5;3625:13;3618:21;3607:32;;3555:90;;;:::o;3651:77::-;3688:7;3717:5;3706:16;;3651:77;;;:::o;3734:::-;3771:7;3800:5;3789:16;;3734:77;;;:::o;3817:281::-;3900:27;3922:4;3900:27;:::i;:::-;3892:6;3888:40;4030:6;4018:10;4015:22;3994:18;3982:10;3979:34;3976:62;3973:88;;;4041:18;;:::i;:::-;3973:88;4081:10;4077:2;4070:22;3860:238;3817:281;;:::o;4104:233::-;4143:3;4166:24;4184:5;4166:24;:::i;:::-;4157:33;;4212:66;4205:5;4202:77;4199:103;;;4282:18;;:::i;:::-;4199:103;4329:1;4322:5;4318:13;4311:20;;4104:233;;;:::o;4343:79::-;4382:7;4411:5;4400:16;;4343:79;;;:::o;4428:180::-;4476:77;4473:1;4466:88;4573:4;4570:1;4563:15;4597:4;4594:1;4587:15;4614:180;4662:77;4659:1;4652:88;4759:4;4756:1;4749:15;4783:4;4780:1;4773:15;4800:180;4848:77;4845:1;4838:88;4945:4;4942:1;4935:15;4969:4;4966:1;4959:15;4986:117;5095:1;5092;5085:12;5109:117;5218:1;5215;5208:12;5232:117;5341:1;5338;5331:12;5355:117;5464:1;5461;5454:12;5478:102;5519:6;5570:2;5566:7;5561:2;5554:5;5550:14;5546:28;5536:38;;5478:102;;;:::o;5586:122::-;5659:24;5677:5;5659:24;:::i;:::-;5652:5;5649:35;5639:63;;5698:1;5695;5688:12;5639:63;5586:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/cryptography/MerkleProof.sol\";\n\ncontract MerkleProofWrapper {\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) public pure returns (bool) {\n        return MerkleProof.verify(proof, root, leaf);\n    }\n}\n",
  "sourcePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/MerkleProofWrapper.sol",
  "ast": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/MerkleProofWrapper.sol",
    "exportedSymbols": {
      "MerkleProof": [
        24270
      ],
      "MerkleProofWrapper": [
        11217
      ]
    },
    "id": 11218,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11195,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:81"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "../utils/cryptography/MerkleProof.sol",
        "id": 11196,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11218,
        "sourceUnit": 24271,
        "src": "58:47:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11217,
        "linearizedBaseContracts": [
          11217
        ],
        "name": "MerkleProofWrapper",
        "nameLocation": "116:18:81",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11215,
              "nodeType": "Block",
              "src": "266:61:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11210,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11199,
                        "src": "302:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 11211,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11201,
                        "src": "309:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 11212,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11203,
                        "src": "315:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 11208,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24270,
                        "src": "283:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$24270_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 11209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24269,
                      "src": "283:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 11213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "283:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11207,
                  "id": 11214,
                  "nodeType": "Return",
                  "src": "276:44:81"
                }
              ]
            },
            "functionSelector": "5a9a49c7",
            "id": 11216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "150:6:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11199,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "183:5:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "166:22:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11197,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "166:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 11198,
                    "nodeType": "ArrayTypeName",
                    "src": "166:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11201,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "206:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "198:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11200,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11203,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "228:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "220:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11202,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "156:82:81"
            },
            "returnParameters": {
              "id": 11207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "260:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "259:6:81"
            },
            "scope": 11217,
            "src": "141:186:81",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11218,
        "src": "107:222:81",
        "usedErrors": []
      }
    ],
    "src": "33:297:81"
  },
  "legacyAST": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/mocks/MerkleProofWrapper.sol",
    "exportedSymbols": {
      "MerkleProof": [
        24270
      ],
      "MerkleProofWrapper": [
        11217
      ]
    },
    "id": 11218,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11195,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:81"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "../utils/cryptography/MerkleProof.sol",
        "id": 11196,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11218,
        "sourceUnit": 24271,
        "src": "58:47:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11217,
        "linearizedBaseContracts": [
          11217
        ],
        "name": "MerkleProofWrapper",
        "nameLocation": "116:18:81",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11215,
              "nodeType": "Block",
              "src": "266:61:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11210,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11199,
                        "src": "302:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 11211,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11201,
                        "src": "309:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 11212,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11203,
                        "src": "315:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 11208,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24270,
                        "src": "283:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$24270_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 11209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24269,
                      "src": "283:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 11213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "283:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11207,
                  "id": 11214,
                  "nodeType": "Return",
                  "src": "276:44:81"
                }
              ]
            },
            "functionSelector": "5a9a49c7",
            "id": 11216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "150:6:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11199,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "183:5:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "166:22:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11197,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "166:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 11198,
                    "nodeType": "ArrayTypeName",
                    "src": "166:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11201,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "206:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "198:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11200,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11203,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "228:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "220:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11202,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "156:82:81"
            },
            "returnParameters": {
              "id": 11207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "260:4:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "259:6:81"
            },
            "scope": 11217,
            "src": "141:186:81",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11218,
        "src": "107:222:81",
        "usedErrors": []
      }
    ],
    "src": "33:297:81"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-12T03:39:31.352Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}