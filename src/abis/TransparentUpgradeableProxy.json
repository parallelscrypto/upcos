{
  "contractName": "TransparentUpgradeableProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xca2eb23a188f213d914fad982985d07e491dbc9960a387d4469bfce5c48911b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a1e908606999ea3e1462e8122f0bcef4e0afe1fa5a578168587278bc4ceb352\",\"dweb:/ipfs/QmQ2BaCjVQXMT1qE6M2XJ9A669aeScTySfH5zGGqwPJyJt\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xcbccf806d646bd9e2594650917208245d45998b887d5fc914de424247f5f9f9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4b5f0125f6d8cfa940403990d54dd9921eb339bfdb011c11cb6a17088301ff1\",\"dweb:/ipfs/QmZXzn8XkJjKEyBy3zPqsssQJGqirhgipdGsjQBYMNArZ4\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x8ddea9f930f26e588ea606f44c90d2623560c908e38614a03a4ca78aea8f9202\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fdf3a59554497c50ed8f4ffccd4ebcf73e49e1324e81ec05128d54d1b73c293\",\"dweb:/ipfs/QmRZtNA2Lx58eAqTXb5DGWxCmH2vxGGuzG6KgBU5fgbzip\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x5615339d191e77be7e46319b67856f9355786f705b7b3c4a7237ab70c1864ab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c6a52e49bd374890523443ac6e20fa0ca09ff8d65d5adbca6f2c8733758eea\",\"dweb:/ipfs/QmXXccov4bGGVqg6BwYc8QU9JwCNHmVYePj1ZYpgkxTbpF\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x2bf89a0dae89f861c5e8013478e650e918d98d376e75393867ccec88b0bf2b90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1348768c56af9dc4c777b3bc91b63b1e1483dd509485e5d315f75c36fb65e5f0\",\"dweb:/ipfs/QmSYVLUfuQxQx2xfuorQMggn9W8v3TPygrdUp8hFzEzrrG\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d15d280d1f868f59a8264dc73f7ea8c51f10d78aac864b2f2ad29412d187ff5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c5c1fe2972d97dca1af03884c78315eb261bb486bacfadd04b0f440fdcfd6e\",\"dweb:/ipfs/QmTNTSdUSzUKWEeTH2A37RDXJ2Xf5jfTTpLuy1oudPPE8N\"]}},\"version\":1}",
  "bytecode": "0x608060405260405162001a5d38038062001a5d83398181016040528101906200002991906200068a565b828160017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6200005d919062000964565b60001b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b1462000095576200009462000a49565b5b620000a9828260006200012f60201b60201c565b505060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610460001c620000dd919062000964565b60001b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b1462000115576200011462000a49565b5b62000126826200017260201b60201c565b50505062000c02565b6200014083620001d060201b60201c565b6000825111806200014e5750805b156200016d576200016b83836200022760201b6200034f1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620001a36200025d60201b60201c565b82604051620001b49291906200081c565b60405180910390a1620001cd81620002c160201b60201c565b50565b620001e181620003b260201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606062000255838360405180606001604052806027815260200162001a36602791396200048860201b60201c565b905092915050565b6000620002987fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200056c60201b6200037c1760201c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000334576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032b906200086d565b60405180910390fd5b806200036e7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200056c60201b6200037c1760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620003c8816200057660201b620003861760201c565b6200040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000401906200088f565b60405180910390fd5b80620004447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200056c60201b6200037c1760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606200049b846200057660201b60201c565b620004dd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004d490620008b1565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405162000507919062000803565b600060405180830381855af49150503d806000811462000544576040519150601f19603f3d011682016040523d82523d6000602084013e62000549565b606091505b5091509150620005618282866200058960201b60201c565b925050509392505050565b6000819050919050565b600080823b905060008111915050919050565b606083156200059b57829050620005ee565b600083511115620005af5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005e5919062000849565b60405180910390fd5b9392505050565b60006200060c6200060684620008fc565b620008d3565b9050828152602081018484840111156200062b576200062a62000adb565b5b62000638848285620009dd565b509392505050565b600081519050620006518162000be8565b92915050565b600082601f8301126200066f576200066e62000ad6565b5b815162000681848260208601620005f5565b91505092915050565b600080600060608486031215620006a657620006a562000ae5565b5b6000620006b68682870162000640565b9350506020620006c98682870162000640565b925050604084015167ffffffffffffffff811115620006ed57620006ec62000ae0565b5b620006fb8682870162000657565b9150509250925092565b62000710816200099f565b82525050565b6000620007238262000932565b6200072f818562000948565b935062000741818560208601620009dd565b80840191505092915050565b60006200075a826200093d565b62000766818562000953565b935062000778818560208601620009dd565b620007838162000aea565b840191505092915050565b60006200079d60268362000953565b9150620007aa8262000afb565b604082019050919050565b6000620007c4602d8362000953565b9150620007d18262000b4a565b604082019050919050565b6000620007eb60268362000953565b9150620007f88262000b99565b604082019050919050565b600062000811828462000716565b915081905092915050565b600060408201905062000833600083018562000705565b62000842602083018462000705565b9392505050565b600060208201905081810360008301526200086581846200074d565b905092915050565b6000602082019050818103600083015262000888816200078e565b9050919050565b60006020820190508181036000830152620008aa81620007b5565b9050919050565b60006020820190508181036000830152620008cc81620007dc565b9050919050565b6000620008df620008f2565b9050620008ed828262000a13565b919050565b6000604051905090565b600067ffffffffffffffff8211156200091a576200091962000aa7565b5b620009258262000aea565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006200097182620009d3565b91506200097e83620009d3565b92508282101562000994576200099362000a78565b5b828203905092915050565b6000620009ac82620009b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620009fd578082015181840152602081019050620009e0565b8381111562000a0d576000848401525b50505050565b62000a1e8262000aea565b810181811067ffffffffffffffff8211171562000a405762000a3f62000aa7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b62000bf3816200099f565b811462000bff57600080fd5b50565b610e248062000c126000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100905780635c60da1b146100ac5780638f283970146100d7578063f851a440146101005761005d565b3661005d5761005b61012b565b005b61006561012b565b005b34801561007357600080fd5b5061008e600480360381019061008991906108fe565b610145565b005b6100aa60048036038101906100a5919061092b565b6101ac565b005b3480156100b857600080fd5b506100c161024a565b6040516100ce9190610aa7565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f991906108fe565b6102a2565b005b34801561010c57600080fd5b506101156102f7565b6040516101229190610aa7565b60405180910390f35b610133610399565b61014361013e610419565b610428565b565b61014d61044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101a05761019b816040518060200160405280600081525060006104a5565b6101a9565b6101a861012b565b5b50565b6101b461044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561023c576102378383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060016104a5565b610245565b61024461012b565b5b505050565b600061025461044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102965761028f610419565b905061029f565b61029e61012b565b5b90565b6102aa61044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102eb576102e6816104d1565b6102f4565b6102f361012b565b5b50565b600061030161044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103435761033c61044e565b905061034c565b61034b61012b565b5b90565b60606103748383604051806060016040528060278152602001610dc86027913961051d565b905092915050565b6000819050919050565b600080823b905060008111915050919050565b6103a161044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690610b6d565b60405180910390fd5b6104176105ea565b565b60006104236105ec565b905090565b3660008037600080366000845af43d6000803e8060008114610449573d6000f35b3d6000fd5b600061047c7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104ae83610643565b6000825111806104bb5750805b156104cc576104ca838361034f565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104fa61044e565b82604051610509929190610ac2565b60405180910390a161051a81610692565b50565b606061052884610386565b610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e90610b4d565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161058f9190610a90565b600060405180830381855af49150503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b50915091506105df828286610773565b925050509392505050565b565b600061061a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61064c816107da565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f990610b0d565b60405180910390fd5b8061072f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60608315610783578290506107d3565b6000835111156107965782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca9190610aeb565b60405180910390fd5b9392505050565b6107e381610386565b610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990610b2d565b60405180910390fd5b8061084f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506108a281610db0565b92915050565b60008083601f8401126108be576108bd610c29565b5b8235905067ffffffffffffffff8111156108db576108da610c24565b5b6020830191508360018202830111156108f7576108f6610c2e565b5b9250929050565b60006020828403121561091457610913610c38565b5b600061092284828501610893565b91505092915050565b60008060006040848603121561094457610943610c38565b5b600061095286828701610893565b935050602084013567ffffffffffffffff81111561097357610972610c33565b5b61097f868287016108a8565b92509250509250925092565b61099481610bbf565b82525050565b60006109a582610b8d565b6109af8185610ba3565b93506109bf818560208601610bf1565b80840191505092915050565b60006109d682610b98565b6109e08185610bae565b93506109f0818560208601610bf1565b6109f981610c3d565b840191505092915050565b6000610a11602683610bae565b9150610a1c82610c4e565b604082019050919050565b6000610a34602d83610bae565b9150610a3f82610c9d565b604082019050919050565b6000610a57602683610bae565b9150610a6282610cec565b604082019050919050565b6000610a7a604283610bae565b9150610a8582610d3b565b606082019050919050565b6000610a9c828461099a565b915081905092915050565b6000602082019050610abc600083018461098b565b92915050565b6000604082019050610ad7600083018561098b565b610ae4602083018461098b565b9392505050565b60006020820190508181036000830152610b0581846109cb565b905092915050565b60006020820190508181036000830152610b2681610a04565b9050919050565b60006020820190508181036000830152610b4681610a27565b9050919050565b60006020820190508181036000830152610b6681610a4a565b9050919050565b60006020820190508181036000830152610b8681610a6d565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610bca82610bd1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610c0f578082015181840152602081019050610bf4565b83811115610c1e576000848401525b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b610db981610bbf565b8114610dc457600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209040e47c472889e58b59dfbaeaf53d08756c46d86c9fd3e0eecb4dd722cacf2164736f6c63430008070033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100905780635c60da1b146100ac5780638f283970146100d7578063f851a440146101005761005d565b3661005d5761005b61012b565b005b61006561012b565b005b34801561007357600080fd5b5061008e600480360381019061008991906108fe565b610145565b005b6100aa60048036038101906100a5919061092b565b6101ac565b005b3480156100b857600080fd5b506100c161024a565b6040516100ce9190610aa7565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f991906108fe565b6102a2565b005b34801561010c57600080fd5b506101156102f7565b6040516101229190610aa7565b60405180910390f35b610133610399565b61014361013e610419565b610428565b565b61014d61044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101a05761019b816040518060200160405280600081525060006104a5565b6101a9565b6101a861012b565b5b50565b6101b461044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561023c576102378383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060016104a5565b610245565b61024461012b565b5b505050565b600061025461044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102965761028f610419565b905061029f565b61029e61012b565b5b90565b6102aa61044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102eb576102e6816104d1565b6102f4565b6102f361012b565b5b50565b600061030161044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103435761033c61044e565b905061034c565b61034b61012b565b5b90565b60606103748383604051806060016040528060278152602001610dc86027913961051d565b905092915050565b6000819050919050565b600080823b905060008111915050919050565b6103a161044e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690610b6d565b60405180910390fd5b6104176105ea565b565b60006104236105ec565b905090565b3660008037600080366000845af43d6000803e8060008114610449573d6000f35b3d6000fd5b600061047c7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104ae83610643565b6000825111806104bb5750805b156104cc576104ca838361034f565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104fa61044e565b82604051610509929190610ac2565b60405180910390a161051a81610692565b50565b606061052884610386565b610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e90610b4d565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161058f9190610a90565b600060405180830381855af49150503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b50915091506105df828286610773565b925050509392505050565b565b600061061a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61064c816107da565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f990610b0d565b60405180910390fd5b8061072f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60608315610783578290506107d3565b6000835111156107965782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca9190610aeb565b60405180910390fd5b9392505050565b6107e381610386565b610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990610b2d565b60405180910390fd5b8061084f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506108a281610db0565b92915050565b60008083601f8401126108be576108bd610c29565b5b8235905067ffffffffffffffff8111156108db576108da610c24565b5b6020830191508360018202830111156108f7576108f6610c2e565b5b9250929050565b60006020828403121561091457610913610c38565b5b600061092284828501610893565b91505092915050565b60008060006040848603121561094457610943610c38565b5b600061095286828701610893565b935050602084013567ffffffffffffffff81111561097357610972610c33565b5b61097f868287016108a8565b92509250509250925092565b61099481610bbf565b82525050565b60006109a582610b8d565b6109af8185610ba3565b93506109bf818560208601610bf1565b80840191505092915050565b60006109d682610b98565b6109e08185610bae565b93506109f0818560208601610bf1565b6109f981610c3d565b840191505092915050565b6000610a11602683610bae565b9150610a1c82610c4e565b604082019050919050565b6000610a34602d83610bae565b9150610a3f82610c9d565b604082019050919050565b6000610a57602683610bae565b9150610a6282610cec565b604082019050919050565b6000610a7a604283610bae565b9150610a8582610d3b565b606082019050919050565b6000610a9c828461099a565b915081905092915050565b6000602082019050610abc600083018461098b565b92915050565b6000604082019050610ad7600083018561098b565b610ae4602083018461098b565b9392505050565b60006020820190508181036000830152610b0581846109cb565b905092915050565b60006020820190508181036000830152610b2681610a04565b9050919050565b60006020820190508181036000830152610b4681610a27565b9050919050565b60006020820190508181036000830152610b6681610a4a565b9050919050565b60006020820190508181036000830152610b8681610a6d565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610bca82610bd1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610c0f578082015181840152602081019050610bf4565b83811115610c1e576000848401525b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b610db981610bbf565b8114610dc457600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209040e47c472889e58b59dfbaeaf53d08756c46d86c9fd3e0eecb4dd722cacf2164736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "1549:3556:111:-:0;;;1823:254;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1938:6;1946:5;1037:1:104;992:41;984:50;;:54;;;;:::i;:::-;976:63;;901:66:105;952:20:104;;:87;945:95;;;;:::i;:::-;;1050:39;1068:6;1076:5;1083;1050:17;;;:39;;:::i;:::-;879:217;;2037:1:111::1;2001:32;1993:41;;:45;;;;:::i;:::-;1985:54;;3993:66:105;1970:11:111;;:69;1963:77;;;;:::i;:::-;;2050:20;2063:6;2050:12;;;:20;;:::i;:::-;1823:254:::0;;;1549:3556;;2054:295:105;2192:29;2203:17;2192:10;;;:29;;:::i;:::-;2249:1;2235:4;:11;:15;:28;;;;2254:9;2235:28;2231:112;;;2279:53;2308:17;2327:4;2279:28;;;;;:53;;:::i;:::-;;2231:112;2054:295;;;:::o;4775:135::-;4839:35;4852:11;:9;;;:11;;:::i;:::-;4865:8;4839:35;;;;;;;:::i;:::-;;;;;;;;4884:19;4894:8;4884:9;;;:19;;:::i;:::-;4775:135;:::o;1768:152::-;1834:37;1853:17;1834:18;;;:37;;:::i;:::-;1895:17;1886:27;;;;;;;;;;;;1768:152;:::o;6170:198:160:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6277:84;;6170:198;;;;:::o;4259:122:105:-;4303:7;4329:39;3993:66;4356:11;;4329:26;;;;;:39;;:::i;:::-;:45;;;;;;;;;;;;4322:52;;4259:122;:::o;4463:201::-;4546:1;4526:22;;:8;:22;;;;4518:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4649:8;4601:39;3993:66;4628:11;;4601:26;;;;;:39;;:::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;4463:201;:::o;1403:259::-;1484:37;1503:17;1484:18;;;;;:37;;:::i;:::-;1476:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1638:17;1581:48;901:66;1608:20;;1581:26;;;;;:48;;:::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1403:259;:::o;6554:387:160:-;6695:12;6727:18;6738:6;6727:10;;;:18;;:::i;:::-;6719:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6800:12;6814:23;6841:6;:19;;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6799:67;;;;6883:51;6900:7;6909:10;6921:12;6883:16;;;:51;;:::i;:::-;6876:58;;;;6554:387;;;;;:::o;1542:147:166:-;1603:21;1669:4;1659:14;;1542:147;;;:::o;718:377:160:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;7161:692::-;7307:12;7335:7;7331:516;;;7365:10;7358:17;;;;7331:516;7496:1;7476:10;:17;:21;7472:365;;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;;;;;;;;;;:::i;:::-;;;;;;;;7161:692;;;;;;:::o;7:419:191:-;95:5;120:65;136:48;177:6;136:48;:::i;:::-;120:65;:::i;:::-;111:74;;208:6;201:5;194:21;246:4;239:5;235:16;284:3;275:6;270:3;266:16;263:25;260:112;;;291:79;;:::i;:::-;260:112;381:39;413:6;408:3;403;381:39;:::i;:::-;101:325;7:419;;;;;:::o;432:143::-;489:5;520:6;514:13;505:22;;536:33;563:5;536:33;:::i;:::-;432:143;;;;:::o;594:353::-;660:5;709:3;702:4;694:6;690:17;686:27;676:122;;717:79;;:::i;:::-;676:122;827:6;821:13;852:89;937:3;929:6;922:4;914:6;910:17;852:89;:::i;:::-;843:98;;666:281;594:353;;;;:::o;953:834::-;1050:6;1058;1066;1115:2;1103:9;1094:7;1090:23;1086:32;1083:119;;;1121:79;;:::i;:::-;1083:119;1241:1;1266:64;1322:7;1313:6;1302:9;1298:22;1266:64;:::i;:::-;1256:74;;1212:128;1379:2;1405:64;1461:7;1452:6;1441:9;1437:22;1405:64;:::i;:::-;1395:74;;1350:129;1539:2;1528:9;1524:18;1518:25;1570:18;1562:6;1559:30;1556:117;;;1592:79;;:::i;:::-;1556:117;1697:73;1762:7;1753:6;1742:9;1738:22;1697:73;:::i;:::-;1687:83;;1489:291;953:834;;;;;:::o;1793:118::-;1880:24;1898:5;1880:24;:::i;:::-;1875:3;1868:37;1793:118;;:::o;1917:373::-;2021:3;2049:38;2081:5;2049:38;:::i;:::-;2103:88;2184:6;2179:3;2103:88;:::i;:::-;2096:95;;2200:52;2245:6;2240:3;2233:4;2226:5;2222:16;2200:52;:::i;:::-;2277:6;2272:3;2268:16;2261:23;;2025:265;1917:373;;;;:::o;2296:364::-;2384:3;2412:39;2445:5;2412:39;:::i;:::-;2467:71;2531:6;2526:3;2467:71;:::i;:::-;2460:78;;2547:52;2592:6;2587:3;2580:4;2573:5;2569:16;2547:52;:::i;:::-;2624:29;2646:6;2624:29;:::i;:::-;2619:3;2615:39;2608:46;;2388:272;2296:364;;;;:::o;2666:366::-;2808:3;2829:67;2893:2;2888:3;2829:67;:::i;:::-;2822:74;;2905:93;2994:3;2905:93;:::i;:::-;3023:2;3018:3;3014:12;3007:19;;2666:366;;;:::o;3038:::-;3180:3;3201:67;3265:2;3260:3;3201:67;:::i;:::-;3194:74;;3277:93;3366:3;3277:93;:::i;:::-;3395:2;3390:3;3386:12;3379:19;;3038:366;;;:::o;3410:::-;3552:3;3573:67;3637:2;3632:3;3573:67;:::i;:::-;3566:74;;3649:93;3738:3;3649:93;:::i;:::-;3767:2;3762:3;3758:12;3751:19;;3410:366;;;:::o;3782:271::-;3912:3;3934:93;4023:3;4014:6;3934:93;:::i;:::-;3927:100;;4044:3;4037:10;;3782:271;;;;:::o;4059:332::-;4180:4;4218:2;4207:9;4203:18;4195:26;;4231:71;4299:1;4288:9;4284:17;4275:6;4231:71;:::i;:::-;4312:72;4380:2;4369:9;4365:18;4356:6;4312:72;:::i;:::-;4059:332;;;;;:::o;4397:313::-;4510:4;4548:2;4537:9;4533:18;4525:26;;4597:9;4591:4;4587:20;4583:1;4572:9;4568:17;4561:47;4625:78;4698:4;4689:6;4625:78;:::i;:::-;4617:86;;4397:313;;;;:::o;4716:419::-;4882:4;4920:2;4909:9;4905:18;4897:26;;4969:9;4963:4;4959:20;4955:1;4944:9;4940:17;4933:47;4997:131;5123:4;4997:131;:::i;:::-;4989:139;;4716:419;;;:::o;5141:::-;5307:4;5345:2;5334:9;5330:18;5322:26;;5394:9;5388:4;5384:20;5380:1;5369:9;5365:17;5358:47;5422:131;5548:4;5422:131;:::i;:::-;5414:139;;5141:419;;;:::o;5566:::-;5732:4;5770:2;5759:9;5755:18;5747:26;;5819:9;5813:4;5809:20;5805:1;5794:9;5790:17;5783:47;5847:131;5973:4;5847:131;:::i;:::-;5839:139;;5566:419;;;:::o;5991:129::-;6025:6;6052:20;;:::i;:::-;6042:30;;6081:33;6109:4;6101:6;6081:33;:::i;:::-;5991:129;;;:::o;6126:75::-;6159:6;6192:2;6186:9;6176:19;;6126:75;:::o;6207:307::-;6268:4;6358:18;6350:6;6347:30;6344:56;;;6380:18;;:::i;:::-;6344:56;6418:29;6440:6;6418:29;:::i;:::-;6410:37;;6502:4;6496;6492:15;6484:23;;6207:307;;;:::o;6520:98::-;6571:6;6605:5;6599:12;6589:22;;6520:98;;;:::o;6624:99::-;6676:6;6710:5;6704:12;6694:22;;6624:99;;;:::o;6729:147::-;6830:11;6867:3;6852:18;;6729:147;;;;:::o;6882:169::-;6966:11;7000:6;6995:3;6988:19;7040:4;7035:3;7031:14;7016:29;;6882:169;;;;:::o;7057:191::-;7097:4;7117:20;7135:1;7117:20;:::i;:::-;7112:25;;7151:20;7169:1;7151:20;:::i;:::-;7146:25;;7190:1;7187;7184:8;7181:34;;;7195:18;;:::i;:::-;7181:34;7240:1;7237;7233:9;7225:17;;7057:191;;;;:::o;7254:96::-;7291:7;7320:24;7338:5;7320:24;:::i;:::-;7309:35;;7254:96;;;:::o;7356:126::-;7393:7;7433:42;7426:5;7422:54;7411:65;;7356:126;;;:::o;7488:77::-;7525:7;7554:5;7543:16;;7488:77;;;:::o;7571:307::-;7639:1;7649:113;7663:6;7660:1;7657:13;7649:113;;;7748:1;7743:3;7739:11;7733:18;7729:1;7724:3;7720:11;7713:39;7685:2;7682:1;7678:10;7673:15;;7649:113;;;7780:6;7777:1;7774:13;7771:101;;;7860:1;7851:6;7846:3;7842:16;7835:27;7771:101;7620:258;7571:307;;;:::o;7884:281::-;7967:27;7989:4;7967:27;:::i;:::-;7959:6;7955:40;8097:6;8085:10;8082:22;8061:18;8049:10;8046:34;8043:62;8040:88;;;8108:18;;:::i;:::-;8040:88;8148:10;8144:2;8137:22;7927:238;7884:281;;:::o;8171:180::-;8219:77;8216:1;8209:88;8316:4;8313:1;8306:15;8340:4;8337:1;8330:15;8357:180;8405:77;8402:1;8395:88;8502:4;8499:1;8492:15;8526:4;8523:1;8516:15;8543:180;8591:77;8588:1;8581:88;8688:4;8685:1;8678:15;8712:4;8709:1;8702:15;8729:117;8838:1;8835;8828:12;8852:117;8961:1;8958;8951:12;8975:117;9084:1;9081;9074:12;9098:117;9207:1;9204;9197:12;9221:102;9262:6;9313:2;9309:7;9304:2;9297:5;9293:14;9289:28;9279:38;;9221:102;;;:::o;9329:225::-;9469:34;9465:1;9457:6;9453:14;9446:58;9538:8;9533:2;9525:6;9521:15;9514:33;9329:225;:::o;9560:232::-;9700:34;9696:1;9688:6;9684:14;9677:58;9769:15;9764:2;9756:6;9752:15;9745:40;9560:232;:::o;9798:225::-;9938:34;9934:1;9926:6;9922:14;9915:58;10007:8;10002:2;9994:6;9990:15;9983:33;9798:225;:::o;10029:122::-;10102:24;10120:5;10102:24;:::i;:::-;10095:5;10092:35;10082:63;;10141:1;10138;10131:12;10082:63;10029:122;:::o;1549:3556:111:-;;;;;;;",
  "deployedSourceMap": "1549:3556:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2833:11:106;:9;:11::i;:::-;1549:3556:111;;2610:11:106;:9;:11::i;:::-;1549:3556:111;3947:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4457:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3350:129;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3684:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2794:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2257:110:106;2305:17;:15;:17::i;:::-;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;3947:134:111:-;2265:11;:9;:11::i;:::-;2251:25;;:10;:25;;;2247:99;;;4020:54:::1;4038:17;4057:9;;;;;;;;;;;::::0;4068:5:::1;4020:17;:54::i;:::-;2247:99:::0;;;2324:11;:9;:11::i;:::-;2247:99;3947:134;:::o;4457:164::-;2265:11;:9;:11::i;:::-;2251:25;;:10;:25;;;2247:99;;;4566:48:::1;4584:17;4603:4;;4566:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4609:4;4566:17;:48::i;:::-;2247:99:::0;;;2324:11;:9;:11::i;:::-;2247:99;4457:164;;;:::o;3350:129::-;3402:23;2265:11;:9;:11::i;:::-;2251:25;;:10;:25;;;2247:99;;;3455:17:::1;:15;:17::i;:::-;3437:35;;2247:99:::0;;;2324:11;:9;:11::i;:::-;2247:99;3350:129;:::o;3684:103::-;2265:11;:9;:11::i;:::-;2251:25;;:10;:25;;;2247:99;;;3758:22:::1;3771:8;3758:12;:22::i;:::-;2247:99:::0;;;2324:11;:9;:11::i;:::-;2247:99;3684:103;:::o;2794:96::-;2837:14;2265:11;:9;:11::i;:::-;2251:25;;:10;:25;;;2247:99;;;2872:11:::1;:9;:11::i;:::-;2863:20;;2247:99:::0;;;2324:11;:9;:11::i;:::-;2247:99;2794:96;:::o;6170:198:160:-;6253:12;6284:77;6305:6;6313:4;6284:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6277:84;;6170:198;;;;:::o;1542:147:166:-;1603:21;1669:4;1659:14;;1542:147;;;:::o;718:377:160:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;4896:207:111:-;4981:11;:9;:11::i;:::-;4967:25;;:10;:25;;;;4959:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;5073:23;:21;:23::i;:::-;4896:207::o;1174:140:104:-;1241:12;1272:35;:33;:35::i;:::-;1265:42;;1174:140;:::o;883:895:106:-;1221:14;1218:1;1215;1202:34;1435:1;1432;1416:14;1413:1;1397:14;1390:5;1377:60;1511:16;1508:1;1505;1490:38;1549:6;1621:1;1616:66;;;;1731:16;1728:1;1721:27;1616:66;1651:16;1648:1;1641:27;4259:122:105;4303:7;4329:39;3993:66;4356:11;;4329:26;:39::i;:::-;:45;;;;;;;;;;;;4322:52;;4259:122;:::o;2054:295::-;2192:29;2203:17;2192:10;:29::i;:::-;2249:1;2235:4;:11;:15;:28;;;;2254:9;2235:28;2231:112;;;2279:53;2308:17;2327:4;2279:28;:53::i;:::-;;2231:112;2054:295;;;:::o;4775:135::-;4839:35;4852:11;:9;:11::i;:::-;4865:8;4839:35;;;;;;;:::i;:::-;;;;;;;;4884:19;4894:8;4884:9;:19::i;:::-;4775:135;:::o;6554:387:160:-;6695:12;6727:18;6738:6;6727:10;:18::i;:::-;6719:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6800:12;6814:23;6841:6;:19;;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6799:67;;;;6883:51;6900:7;6909:10;6921:12;6883:16;:51::i;:::-;6876:58;;;;6554:387;;;;;:::o;3132:46:106:-;:::o;1172:140:105:-;1225:7;1251:48;901:66;1278:20;;1251:26;:48::i;:::-;:54;;;;;;;;;;;;1244:61;;1172:140;:::o;1768:152::-;1834:37;1853:17;1834:18;:37::i;:::-;1895:17;1886:27;;;;;;;;;;;;1768:152;:::o;4463:201::-;4546:1;4526:22;;:8;:22;;;;4518:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4649:8;4601:39;3993:66;4628:11;;4601:26;:39::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;4463:201;:::o;7161:692:160:-;7307:12;7335:7;7331:516;;;7365:10;7358:17;;;;7331:516;7496:1;7476:10;:17;:21;7472:365;;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;;;;;;;;;;:::i;:::-;;;;;;;;7161:692;;;;;;:::o;1403:259:105:-;1484:37;1503:17;1484:18;:37::i;:::-;1476:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1638:17;1581:48;901:66;1608:20;;1581:26;:48::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1403:259;:::o;7:139:191:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;165:552::-;222:8;232:6;282:3;275:4;267:6;263:17;259:27;249:122;;290:79;;:::i;:::-;249:122;403:6;390:20;380:30;;433:18;425:6;422:30;419:117;;;455:79;;:::i;:::-;419:117;569:4;561:6;557:17;545:29;;623:3;615:4;607:6;603:17;593:8;589:32;586:41;583:128;;;630:79;;:::i;:::-;583:128;165:552;;;;;:::o;723:329::-;782:6;831:2;819:9;810:7;806:23;802:32;799:119;;;837:79;;:::i;:::-;799:119;957:1;982:53;1027:7;1018:6;1007:9;1003:22;982:53;:::i;:::-;972:63;;928:117;723:329;;;;:::o;1058:672::-;1137:6;1145;1153;1202:2;1190:9;1181:7;1177:23;1173:32;1170:119;;;1208:79;;:::i;:::-;1170:119;1328:1;1353:53;1398:7;1389:6;1378:9;1374:22;1353:53;:::i;:::-;1343:63;;1299:117;1483:2;1472:9;1468:18;1455:32;1514:18;1506:6;1503:30;1500:117;;;1536:79;;:::i;:::-;1500:117;1649:64;1705:7;1696:6;1685:9;1681:22;1649:64;:::i;:::-;1631:82;;;;1426:297;1058:672;;;;;:::o;1736:118::-;1823:24;1841:5;1823:24;:::i;:::-;1818:3;1811:37;1736:118;;:::o;1860:373::-;1964:3;1992:38;2024:5;1992:38;:::i;:::-;2046:88;2127:6;2122:3;2046:88;:::i;:::-;2039:95;;2143:52;2188:6;2183:3;2176:4;2169:5;2165:16;2143:52;:::i;:::-;2220:6;2215:3;2211:16;2204:23;;1968:265;1860:373;;;;:::o;2239:364::-;2327:3;2355:39;2388:5;2355:39;:::i;:::-;2410:71;2474:6;2469:3;2410:71;:::i;:::-;2403:78;;2490:52;2535:6;2530:3;2523:4;2516:5;2512:16;2490:52;:::i;:::-;2567:29;2589:6;2567:29;:::i;:::-;2562:3;2558:39;2551:46;;2331:272;2239:364;;;;:::o;2609:366::-;2751:3;2772:67;2836:2;2831:3;2772:67;:::i;:::-;2765:74;;2848:93;2937:3;2848:93;:::i;:::-;2966:2;2961:3;2957:12;2950:19;;2609:366;;;:::o;2981:::-;3123:3;3144:67;3208:2;3203:3;3144:67;:::i;:::-;3137:74;;3220:93;3309:3;3220:93;:::i;:::-;3338:2;3333:3;3329:12;3322:19;;2981:366;;;:::o;3353:::-;3495:3;3516:67;3580:2;3575:3;3516:67;:::i;:::-;3509:74;;3592:93;3681:3;3592:93;:::i;:::-;3710:2;3705:3;3701:12;3694:19;;3353:366;;;:::o;3725:::-;3867:3;3888:67;3952:2;3947:3;3888:67;:::i;:::-;3881:74;;3964:93;4053:3;3964:93;:::i;:::-;4082:2;4077:3;4073:12;4066:19;;3725:366;;;:::o;4097:271::-;4227:3;4249:93;4338:3;4329:6;4249:93;:::i;:::-;4242:100;;4359:3;4352:10;;4097:271;;;;:::o;4374:222::-;4467:4;4505:2;4494:9;4490:18;4482:26;;4518:71;4586:1;4575:9;4571:17;4562:6;4518:71;:::i;:::-;4374:222;;;;:::o;4602:332::-;4723:4;4761:2;4750:9;4746:18;4738:26;;4774:71;4842:1;4831:9;4827:17;4818:6;4774:71;:::i;:::-;4855:72;4923:2;4912:9;4908:18;4899:6;4855:72;:::i;:::-;4602:332;;;;;:::o;4940:313::-;5053:4;5091:2;5080:9;5076:18;5068:26;;5140:9;5134:4;5130:20;5126:1;5115:9;5111:17;5104:47;5168:78;5241:4;5232:6;5168:78;:::i;:::-;5160:86;;4940:313;;;;:::o;5259:419::-;5425:4;5463:2;5452:9;5448:18;5440:26;;5512:9;5506:4;5502:20;5498:1;5487:9;5483:17;5476:47;5540:131;5666:4;5540:131;:::i;:::-;5532:139;;5259:419;;;:::o;5684:::-;5850:4;5888:2;5877:9;5873:18;5865:26;;5937:9;5931:4;5927:20;5923:1;5912:9;5908:17;5901:47;5965:131;6091:4;5965:131;:::i;:::-;5957:139;;5684:419;;;:::o;6109:::-;6275:4;6313:2;6302:9;6298:18;6290:26;;6362:9;6356:4;6352:20;6348:1;6337:9;6333:17;6326:47;6390:131;6516:4;6390:131;:::i;:::-;6382:139;;6109:419;;;:::o;6534:::-;6700:4;6738:2;6727:9;6723:18;6715:26;;6787:9;6781:4;6777:20;6773:1;6762:9;6758:17;6751:47;6815:131;6941:4;6815:131;:::i;:::-;6807:139;;6534:419;;;:::o;7040:98::-;7091:6;7125:5;7119:12;7109:22;;7040:98;;;:::o;7144:99::-;7196:6;7230:5;7224:12;7214:22;;7144:99;;;:::o;7249:147::-;7350:11;7387:3;7372:18;;7249:147;;;;:::o;7402:169::-;7486:11;7520:6;7515:3;7508:19;7560:4;7555:3;7551:14;7536:29;;7402:169;;;;:::o;7577:96::-;7614:7;7643:24;7661:5;7643:24;:::i;:::-;7632:35;;7577:96;;;:::o;7679:126::-;7716:7;7756:42;7749:5;7745:54;7734:65;;7679:126;;;:::o;7811:307::-;7879:1;7889:113;7903:6;7900:1;7897:13;7889:113;;;7988:1;7983:3;7979:11;7973:18;7969:1;7964:3;7960:11;7953:39;7925:2;7922:1;7918:10;7913:15;;7889:113;;;8020:6;8017:1;8014:13;8011:101;;;8100:1;8091:6;8086:3;8082:16;8075:27;8011:101;7860:258;7811:307;;;:::o;8124:117::-;8233:1;8230;8223:12;8247:117;8356:1;8353;8346:12;8370:117;8479:1;8476;8469:12;8493:117;8602:1;8599;8592:12;8616:117;8725:1;8722;8715:12;8739:102;8780:6;8831:2;8827:7;8822:2;8815:5;8811:14;8807:28;8797:38;;8739:102;;;:::o;8847:225::-;8987:34;8983:1;8975:6;8971:14;8964:58;9056:8;9051:2;9043:6;9039:15;9032:33;8847:225;:::o;9078:232::-;9218:34;9214:1;9206:6;9202:14;9195:58;9287:15;9282:2;9274:6;9270:15;9263:40;9078:232;:::o;9316:225::-;9456:34;9452:1;9444:6;9440:14;9433:58;9525:8;9520:2;9512:6;9508:15;9501:33;9316:225;:::o;9547:290::-;9687:34;9683:1;9675:6;9671:14;9664:58;9756:34;9751:2;9743:6;9739:15;9732:59;9825:4;9820:2;9812:6;9808:15;9801:29;9547:290;:::o;9843:122::-;9916:24;9934:5;9916:24;:::i;:::-;9909:5;9906:35;9896:63;;9955:1;9952;9945:12;9896:63;9843:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(\n        address _logic,\n        address admin_,\n        bytes memory _data\n    ) payable ERC1967Proxy(_logic, _data) {\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function admin() external ifAdmin returns (address admin_) {\n        admin_ = _getAdmin();\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function implementation() external ifAdmin returns (address implementation_) {\n        implementation_ = _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\n     */\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\n        _changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\n     */\n    function upgradeTo(address newImplementation) external ifAdmin {\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\n        _upgradeToAndCall(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\n     */\n    function _beforeFallback() internal virtual override {\n        require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n        super._beforeFallback();\n    }\n}\n",
  "sourcePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
  "ast": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
    "exportedSymbols": {
      "Address": [
        23192
      ],
      "ERC1967Proxy": [
        13933
      ],
      "ERC1967Upgrade": [
        14282
      ],
      "IBeacon": [
        14426
      ],
      "Proxy": [
        14334
      ],
      "StorageSlot": [
        23599
      ],
      "TransparentUpgradeableProxy": [
        14801
      ]
    },
    "id": 14802,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14639,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:111"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "../ERC1967/ERC1967Proxy.sol",
        "id": 14640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14802,
        "sourceUnit": 13934,
        "src": "58:37:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14642,
              "name": "ERC1967Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13933,
              "src": "1589:12:111"
            },
            "id": 14643,
            "nodeType": "InheritanceSpecifier",
            "src": "1589:12:111"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14641,
          "nodeType": "StructuredDocumentation",
          "src": "97:1451:111",
          "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
        },
        "fullyImplemented": true,
        "id": 14801,
        "linearizedBaseContracts": [
          14801,
          13933,
          14282,
          14334
        ],
        "name": "TransparentUpgradeableProxy",
        "nameLocation": "1558:27:111",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14677,
              "nodeType": "Block",
              "src": "1953:124:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 14670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14658,
                          "name": "_ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14122,
                          "src": "1970:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 14668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 14664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2011:21:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 14663,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "2001:9:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 14665,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2001:32:111",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 14662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1993:7:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 14661,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1993:7:111",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 14666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1993:41:111",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 14667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2037:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1993:45:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1985:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 14659,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1985:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1985:54:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1970:69:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14657,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1963:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:77:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14672,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:77:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14674,
                        "name": "admin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14648,
                        "src": "2063:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14673,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14185,
                      "src": "2050:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 14675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14676,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:20:111"
                }
              ]
            },
            "documentation": {
              "id": 14644,
              "nodeType": "StructuredDocumentation",
              "src": "1608:210:111",
              "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
            },
            "id": 14678,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14653,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14646,
                    "src": "1938:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 14654,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14650,
                    "src": "1946:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 14655,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 14652,
                  "name": "ERC1967Proxy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13933,
                  "src": "1925:12:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1925:27:111"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14646,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1852:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14678,
                  "src": "1844:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14648,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "1876:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14678,
                  "src": "1868:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14650,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1905:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14678,
                  "src": "1892:18:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14649,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:82:111"
            },
            "returnParameters": {
              "id": 14656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:111"
            },
            "scope": 14801,
            "src": "1823:254:111",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14693,
              "nodeType": "Block",
              "src": "2237:115:111",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 14681,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2251:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2251:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14683,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14142,
                        "src": "2265:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 14684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2265:11:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2251:25:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 14691,
                    "nodeType": "Block",
                    "src": "2310:36:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 14688,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14312,
                            "src": "2324:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 14689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2324:11:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14690,
                        "nodeType": "ExpressionStatement",
                        "src": "2324:11:111"
                      }
                    ]
                  },
                  "id": 14692,
                  "nodeType": "IfStatement",
                  "src": "2247:99:111",
                  "trueBody": {
                    "id": 14687,
                    "nodeType": "Block",
                    "src": "2278:26:111",
                    "statements": [
                      {
                        "id": 14686,
                        "nodeType": "PlaceholderStatement",
                        "src": "2292:1:111"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 14679,
              "nodeType": "StructuredDocumentation",
              "src": "2083:130:111",
              "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
            },
            "id": 14694,
            "name": "ifAdmin",
            "nameLocation": "2227:7:111",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2234:2:111"
            },
            "src": "2218:134:111",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14707,
              "nodeType": "Block",
              "src": "2853:37:111",
              "statements": [
                {
                  "expression": {
                    "id": 14705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14702,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14700,
                      "src": "2863:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14703,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14142,
                        "src": "2872:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 14704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2872:11:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2863:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14706,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:20:111"
                }
              ]
            },
            "documentation": {
              "id": 14695,
              "nodeType": "StructuredDocumentation",
              "src": "2358:431:111",
              "text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
            },
            "functionSelector": "f851a440",
            "id": 14708,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14698,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14697,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "2820:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "2820:7:111"
              }
            ],
            "name": "admin",
            "nameLocation": "2803:5:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:2:111"
            },
            "returnParameters": {
              "id": 14701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14700,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2845:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14708,
                  "src": "2837:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2836:16:111"
            },
            "scope": 14801,
            "src": "2794:96:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14721,
              "nodeType": "Block",
              "src": "3427:52:111",
              "statements": [
                {
                  "expression": {
                    "id": 14719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14716,
                      "name": "implementation_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14714,
                      "src": "3437:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14717,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          13932
                        ],
                        "referencedDeclaration": 13932,
                        "src": "3455:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 14718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3455:17:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3437:35:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14720,
                  "nodeType": "ExpressionStatement",
                  "src": "3437:35:111"
                }
              ]
            },
            "documentation": {
              "id": 14709,
              "nodeType": "StructuredDocumentation",
              "src": "2896:449:111",
              "text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "functionSelector": "5c60da1b",
            "id": 14722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14712,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14711,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "3385:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "3385:7:111"
              }
            ],
            "name": "implementation",
            "nameLocation": "3359:14:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3373:2:111"
            },
            "returnParameters": {
              "id": 14715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14714,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "3410:15:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14722,
                  "src": "3402:23:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3401:25:111"
            },
            "scope": 14801,
            "src": "3350:129:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14734,
              "nodeType": "Block",
              "src": "3748:39:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14731,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14725,
                        "src": "3771:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14730,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14185,
                      "src": "3758:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 14732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14733,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:22:111"
                }
              ]
            },
            "documentation": {
              "id": 14723,
              "nodeType": "StructuredDocumentation",
              "src": "3485:194:111",
              "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
            },
            "functionSelector": "8f283970",
            "id": 14735,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14727,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "3740:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:7:111"
              }
            ],
            "name": "changeAdmin",
            "nameLocation": "3693:11:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14725,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "3713:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14735,
                  "src": "3705:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3704:18:111"
            },
            "returnParameters": {
              "id": 14729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:0:111"
            },
            "scope": 14801,
            "src": "3684:103:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14752,
              "nodeType": "Block",
              "src": "4010:71:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14744,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14738,
                        "src": "4038:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 14747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4063:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 14746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4057:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 14745,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4057:5:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4057:9:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 14749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4068:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14743,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14033,
                      "src": "4020:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 14750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4020:54:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14751,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:54:111"
                }
              ]
            },
            "documentation": {
              "id": 14736,
              "nodeType": "StructuredDocumentation",
              "src": "3793:149:111",
              "text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
            },
            "functionSelector": "3659cfe6",
            "id": 14753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14740,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "4002:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "4002:7:111"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "3956:9:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14738,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3974:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14753,
                  "src": "3966:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3965:27:111"
            },
            "returnParameters": {
              "id": 14742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4010:0:111"
            },
            "scope": 14801,
            "src": "3947:134:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14769,
              "nodeType": "Block",
              "src": "4556:65:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14764,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14756,
                        "src": "4584:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14765,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14758,
                        "src": "4603:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 14766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4609:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14763,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14033,
                      "src": "4566:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 14767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:48:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14768,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:48:111"
                }
              ]
            },
            "documentation": {
              "id": 14754,
              "nodeType": "StructuredDocumentation",
              "src": "4087:365:111",
              "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
            },
            "functionSelector": "4f1ef286",
            "id": 14770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14761,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14760,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "4548:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "4548:7:111"
              }
            ],
            "name": "upgradeToAndCall",
            "nameLocation": "4466:16:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14756,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4491:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14770,
                  "src": "4483:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4483:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14758,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4525:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14770,
                  "src": "4510:19:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14757,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4482:48:111"
            },
            "returnParameters": {
              "id": 14762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4556:0:111"
            },
            "scope": 14801,
            "src": "4457:164:111",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14779,
              "nodeType": "Block",
              "src": "4740:35:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14776,
                      "name": "_getAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14142,
                      "src": "4757:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 14777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4757:11:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 14775,
                  "id": 14778,
                  "nodeType": "Return",
                  "src": "4750:18:111"
                }
              ]
            },
            "documentation": {
              "id": 14771,
              "nodeType": "StructuredDocumentation",
              "src": "4627:50:111",
              "text": " @dev Returns the current admin."
            },
            "id": 14780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_admin",
            "nameLocation": "4691:6:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4697:2:111"
            },
            "returnParameters": {
              "id": 14775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14780,
                  "src": "4731:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4730:9:111"
            },
            "scope": 14801,
            "src": "4682:93:111",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14333
            ],
            "body": {
              "id": 14799,
              "nodeType": "Block",
              "src": "4949:154:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14786,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4967:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4967:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 14788,
                            "name": "_getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14142,
                            "src": "4981:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 14789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4981:11:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4967:25:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                        "id": 14791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4994:68:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        },
                        "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        }
                      ],
                      "id": 14785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4959:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4959:104:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14793,
                  "nodeType": "ExpressionStatement",
                  "src": "4959:104:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 14794,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5073:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$14801_$",
                          "typeString": "type(contract super TransparentUpgradeableProxy)"
                        }
                      },
                      "id": 14796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14333,
                      "src": "5073:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 14797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5073:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14798,
                  "nodeType": "ExpressionStatement",
                  "src": "5073:23:111"
                }
              ]
            },
            "documentation": {
              "id": 14781,
              "nodeType": "StructuredDocumentation",
              "src": "4781:110:111",
              "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
            },
            "id": 14800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFallback",
            "nameLocation": "4905:15:111",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14783,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4940:8:111"
            },
            "parameters": {
              "id": 14782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:2:111"
            },
            "returnParameters": {
              "id": 14784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4949:0:111"
            },
            "scope": 14801,
            "src": "4896:207:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 14802,
        "src": "1549:3556:111",
        "usedErrors": []
      }
    ],
    "src": "33:5073:111"
  },
  "legacyAST": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
    "exportedSymbols": {
      "Address": [
        23192
      ],
      "ERC1967Proxy": [
        13933
      ],
      "ERC1967Upgrade": [
        14282
      ],
      "IBeacon": [
        14426
      ],
      "Proxy": [
        14334
      ],
      "StorageSlot": [
        23599
      ],
      "TransparentUpgradeableProxy": [
        14801
      ]
    },
    "id": 14802,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14639,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:111"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "../ERC1967/ERC1967Proxy.sol",
        "id": 14640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14802,
        "sourceUnit": 13934,
        "src": "58:37:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14642,
              "name": "ERC1967Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13933,
              "src": "1589:12:111"
            },
            "id": 14643,
            "nodeType": "InheritanceSpecifier",
            "src": "1589:12:111"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14641,
          "nodeType": "StructuredDocumentation",
          "src": "97:1451:111",
          "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
        },
        "fullyImplemented": true,
        "id": 14801,
        "linearizedBaseContracts": [
          14801,
          13933,
          14282,
          14334
        ],
        "name": "TransparentUpgradeableProxy",
        "nameLocation": "1558:27:111",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14677,
              "nodeType": "Block",
              "src": "1953:124:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 14670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14658,
                          "name": "_ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14122,
                          "src": "1970:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 14668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 14664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2011:21:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 14663,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "2001:9:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 14665,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2001:32:111",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 14662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1993:7:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 14661,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1993:7:111",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 14666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1993:41:111",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 14667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2037:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1993:45:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1985:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 14659,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1985:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1985:54:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1970:69:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14657,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1963:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:77:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14672,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:77:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14674,
                        "name": "admin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14648,
                        "src": "2063:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14673,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14185,
                      "src": "2050:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 14675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14676,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:20:111"
                }
              ]
            },
            "documentation": {
              "id": 14644,
              "nodeType": "StructuredDocumentation",
              "src": "1608:210:111",
              "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
            },
            "id": 14678,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14653,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14646,
                    "src": "1938:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 14654,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14650,
                    "src": "1946:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 14655,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 14652,
                  "name": "ERC1967Proxy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13933,
                  "src": "1925:12:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1925:27:111"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14646,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1852:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14678,
                  "src": "1844:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14648,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "1876:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14678,
                  "src": "1868:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14650,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1905:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14678,
                  "src": "1892:18:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14649,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:82:111"
            },
            "returnParameters": {
              "id": 14656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:111"
            },
            "scope": 14801,
            "src": "1823:254:111",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14693,
              "nodeType": "Block",
              "src": "2237:115:111",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 14685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 14681,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2251:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2251:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14683,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14142,
                        "src": "2265:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 14684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2265:11:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2251:25:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 14691,
                    "nodeType": "Block",
                    "src": "2310:36:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 14688,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14312,
                            "src": "2324:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 14689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2324:11:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14690,
                        "nodeType": "ExpressionStatement",
                        "src": "2324:11:111"
                      }
                    ]
                  },
                  "id": 14692,
                  "nodeType": "IfStatement",
                  "src": "2247:99:111",
                  "trueBody": {
                    "id": 14687,
                    "nodeType": "Block",
                    "src": "2278:26:111",
                    "statements": [
                      {
                        "id": 14686,
                        "nodeType": "PlaceholderStatement",
                        "src": "2292:1:111"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 14679,
              "nodeType": "StructuredDocumentation",
              "src": "2083:130:111",
              "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
            },
            "id": 14694,
            "name": "ifAdmin",
            "nameLocation": "2227:7:111",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2234:2:111"
            },
            "src": "2218:134:111",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14707,
              "nodeType": "Block",
              "src": "2853:37:111",
              "statements": [
                {
                  "expression": {
                    "id": 14705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14702,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14700,
                      "src": "2863:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14703,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14142,
                        "src": "2872:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 14704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2872:11:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2863:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14706,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:20:111"
                }
              ]
            },
            "documentation": {
              "id": 14695,
              "nodeType": "StructuredDocumentation",
              "src": "2358:431:111",
              "text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
            },
            "functionSelector": "f851a440",
            "id": 14708,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14698,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14697,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "2820:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "2820:7:111"
              }
            ],
            "name": "admin",
            "nameLocation": "2803:5:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:2:111"
            },
            "returnParameters": {
              "id": 14701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14700,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2845:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14708,
                  "src": "2837:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2836:16:111"
            },
            "scope": 14801,
            "src": "2794:96:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14721,
              "nodeType": "Block",
              "src": "3427:52:111",
              "statements": [
                {
                  "expression": {
                    "id": 14719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14716,
                      "name": "implementation_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14714,
                      "src": "3437:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14717,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          13932
                        ],
                        "referencedDeclaration": 13932,
                        "src": "3455:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 14718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3455:17:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3437:35:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14720,
                  "nodeType": "ExpressionStatement",
                  "src": "3437:35:111"
                }
              ]
            },
            "documentation": {
              "id": 14709,
              "nodeType": "StructuredDocumentation",
              "src": "2896:449:111",
              "text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "functionSelector": "5c60da1b",
            "id": 14722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14712,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14711,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "3385:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "3385:7:111"
              }
            ],
            "name": "implementation",
            "nameLocation": "3359:14:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3373:2:111"
            },
            "returnParameters": {
              "id": 14715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14714,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "3410:15:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14722,
                  "src": "3402:23:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3401:25:111"
            },
            "scope": 14801,
            "src": "3350:129:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14734,
              "nodeType": "Block",
              "src": "3748:39:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14731,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14725,
                        "src": "3771:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14730,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14185,
                      "src": "3758:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 14732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14733,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:22:111"
                }
              ]
            },
            "documentation": {
              "id": 14723,
              "nodeType": "StructuredDocumentation",
              "src": "3485:194:111",
              "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
            },
            "functionSelector": "8f283970",
            "id": 14735,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14727,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "3740:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:7:111"
              }
            ],
            "name": "changeAdmin",
            "nameLocation": "3693:11:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14725,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "3713:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14735,
                  "src": "3705:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3704:18:111"
            },
            "returnParameters": {
              "id": 14729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:0:111"
            },
            "scope": 14801,
            "src": "3684:103:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14752,
              "nodeType": "Block",
              "src": "4010:71:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14744,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14738,
                        "src": "4038:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 14747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4063:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 14746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4057:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 14745,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4057:5:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4057:9:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 14749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4068:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14743,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14033,
                      "src": "4020:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 14750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4020:54:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14751,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:54:111"
                }
              ]
            },
            "documentation": {
              "id": 14736,
              "nodeType": "StructuredDocumentation",
              "src": "3793:149:111",
              "text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
            },
            "functionSelector": "3659cfe6",
            "id": 14753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14740,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "4002:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "4002:7:111"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "3956:9:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14738,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3974:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14753,
                  "src": "3966:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3965:27:111"
            },
            "returnParameters": {
              "id": 14742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4010:0:111"
            },
            "scope": 14801,
            "src": "3947:134:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14769,
              "nodeType": "Block",
              "src": "4556:65:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14764,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14756,
                        "src": "4584:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14765,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14758,
                        "src": "4603:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 14766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4609:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14763,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14033,
                      "src": "4566:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 14767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:48:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14768,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:48:111"
                }
              ]
            },
            "documentation": {
              "id": 14754,
              "nodeType": "StructuredDocumentation",
              "src": "4087:365:111",
              "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
            },
            "functionSelector": "4f1ef286",
            "id": 14770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14761,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14760,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14694,
                  "src": "4548:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "4548:7:111"
              }
            ],
            "name": "upgradeToAndCall",
            "nameLocation": "4466:16:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14756,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4491:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14770,
                  "src": "4483:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4483:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14758,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4525:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 14770,
                  "src": "4510:19:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14757,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4482:48:111"
            },
            "returnParameters": {
              "id": 14762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4556:0:111"
            },
            "scope": 14801,
            "src": "4457:164:111",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14779,
              "nodeType": "Block",
              "src": "4740:35:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 14776,
                      "name": "_getAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14142,
                      "src": "4757:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 14777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4757:11:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 14775,
                  "id": 14778,
                  "nodeType": "Return",
                  "src": "4750:18:111"
                }
              ]
            },
            "documentation": {
              "id": 14771,
              "nodeType": "StructuredDocumentation",
              "src": "4627:50:111",
              "text": " @dev Returns the current admin."
            },
            "id": 14780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_admin",
            "nameLocation": "4691:6:111",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4697:2:111"
            },
            "returnParameters": {
              "id": 14775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14774,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14780,
                  "src": "4731:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4730:9:111"
            },
            "scope": 14801,
            "src": "4682:93:111",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14333
            ],
            "body": {
              "id": 14799,
              "nodeType": "Block",
              "src": "4949:154:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14786,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4967:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4967:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 14788,
                            "name": "_getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14142,
                            "src": "4981:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 14789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4981:11:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4967:25:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                        "id": 14791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4994:68:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        },
                        "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        }
                      ],
                      "id": 14785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4959:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4959:104:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14793,
                  "nodeType": "ExpressionStatement",
                  "src": "4959:104:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 14794,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5073:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$14801_$",
                          "typeString": "type(contract super TransparentUpgradeableProxy)"
                        }
                      },
                      "id": 14796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14333,
                      "src": "5073:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 14797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5073:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14798,
                  "nodeType": "ExpressionStatement",
                  "src": "5073:23:111"
                }
              ]
            },
            "documentation": {
              "id": 14781,
              "nodeType": "StructuredDocumentation",
              "src": "4781:110:111",
              "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
            },
            "id": 14800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFallback",
            "nameLocation": "4905:15:111",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14783,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4940:8:111"
            },
            "parameters": {
              "id": 14782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:2:111"
            },
            "returnParameters": {
              "id": 14784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4949:0:111"
            },
            "scope": 14801,
            "src": "4896:207:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 14802,
        "src": "1549:3556:111",
        "usedErrors": []
      }
    ],
    "src": "33:5073:111"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-12T03:39:31.475Z",
  "devdoc": {
    "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
    "kind": "dev",
    "methods": {
      "admin()": {
        "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
      },
      "changeAdmin(address)": {
        "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
      },
      "constructor": {
        "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
      },
      "implementation()": {
        "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}