{
  "contractName": "SignatureChecker",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x14351164423eade7f2dbac5ca9ab8aeded8694f3b2d7a9e0114a2b3b6558198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7588d5d5a23ccdccfb39eb015939560bdc26fd11efb7e5ff8af23f5a3ce8b003\",\"dweb:/ipfs/QmRuohtRJYDoFGazYwbcbz557HzmQDWuW9phW6Cm8tQhwN\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x9f91b5b7d47b8d16648934b20e61eb37b481f298ba472fd8d22e9252eda6165e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34a41f027547b54b5ae3dad6d7cc9a705950da847b343068e275e0689082021c\",\"dweb:/ipfs/QmX2EWc6ZQtfKMgYwqCip3dYLCd5gtj1CR5gn8ZjCWU7XM\"]},\"/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xaa5e46b1795a6b6de776566b5051eda3449c1be0b9404f5f7be3822faf907030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75efd87a04c667a391b931f9676554b2a02676baf275e7b54f20583ecc576c8c\",\"dweb:/ipfs/QmRJRoZKJj5e9d6jqedVLREDKxfWBEsdZDV4dgi9b7r97S\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047f343826603a9d8a5c0c2d2052dd3bb5e29b18ef1cf8e19171546029113519c64736f6c63430008070033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047f343826603a9d8a5c0c2d2052dd3bb5e29b18ef1cf8e19171546029113519c64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "685:548:171:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "685:548:171:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n * ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n * smart contract wallets such as Argent and Gnosis.\n *\n * Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n * through time. It could return true at block N and false at block N+1 (or the opposite).\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        if (Address.isContract(signer)) {\n            try IERC1271(signer).isValidSignature(hash, signature) returns (bytes4 magicValue) {\n                return magicValue == IERC1271.isValidSignature.selector;\n            } catch {\n                return false;\n            }\n        } else {\n            return ECDSA.recover(hash, signature) == signer;\n        }\n    }\n}\n",
  "sourcePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
  "ast": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        23192
      ],
      "ECDSA": [
        24199
      ],
      "IERC1271": [
        5753
      ],
      "SignatureChecker": [
        24327
      ]
    },
    "id": 24328,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24272,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:171"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 24273,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24328,
        "sourceUnit": 24200,
        "src": "58:21:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../Address.sol",
        "id": 24274,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24328,
        "sourceUnit": 23193,
        "src": "80:24:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 24275,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24328,
        "sourceUnit": 5754,
        "src": "105:39:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 24276,
          "nodeType": "StructuredDocumentation",
          "src": "146:538:171",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite).\n _Available since v4.1._"
        },
        "fullyImplemented": true,
        "id": 24327,
        "linearizedBaseContracts": [
          24327
        ],
        "name": "SignatureChecker",
        "nameLocation": "693:16:171",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24325,
              "nodeType": "Block",
              "src": "858:373:171",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 24289,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24278,
                        "src": "891:6:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24287,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23192,
                        "src": "872:7:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$23192_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 24288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22915,
                      "src": "872:18:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 24290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:26:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24323,
                    "nodeType": "Block",
                    "src": "1153:72:171",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 24321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 24317,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24280,
                                "src": "1188:4:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 24318,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24282,
                                "src": "1194:9:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 24315,
                                "name": "ECDSA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24199,
                                "src": "1174:5:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ECDSA_$24199_$",
                                  "typeString": "type(library ECDSA)"
                                }
                              },
                              "id": 24316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24077,
                              "src": "1174:13:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 24319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1174:30:171",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 24320,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24278,
                            "src": "1208:6:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1174:40:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 24286,
                        "id": 24322,
                        "nodeType": "Return",
                        "src": "1167:47:171"
                      }
                    ]
                  },
                  "id": 24324,
                  "nodeType": "IfStatement",
                  "src": "868:357:171",
                  "trueBody": {
                    "id": 24314,
                    "nodeType": "Block",
                    "src": "900:247:171",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 24307,
                              "nodeType": "Block",
                              "src": "997:88:171",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 24305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 24301,
                                      "name": "magicValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24299,
                                      "src": "1022:10:171",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 24302,
                                          "name": "IERC1271",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5753,
                                          "src": "1036:8:171",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1271_$5753_$",
                                            "typeString": "type(contract IERC1271)"
                                          }
                                        },
                                        "id": 24303,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "isValidSignature",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5752,
                                        "src": "1036:25:171",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
                                        }
                                      },
                                      "id": 24304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "1036:34:171",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "1022:48:171",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 24286,
                                  "id": 24306,
                                  "nodeType": "Return",
                                  "src": "1015:55:171"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 24308,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 24300,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 24299,
                                  "mutability": "mutable",
                                  "name": "magicValue",
                                  "nameLocation": "985:10:171",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 24308,
                                  "src": "978:17:171",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 24298,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "978:6:171",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "977:19:171"
                            },
                            "src": "969:116:171"
                          },
                          {
                            "block": {
                              "id": 24311,
                              "nodeType": "Block",
                              "src": "1092:45:171",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 24309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1117:5:171",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 24286,
                                  "id": 24310,
                                  "nodeType": "Return",
                                  "src": "1110:12:171"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 24312,
                            "nodeType": "TryCatchClause",
                            "src": "1086:51:171"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 24295,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24280,
                              "src": "952:4:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 24296,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24282,
                              "src": "958:9:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 24292,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24278,
                                  "src": "927:6:171",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 24291,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5753,
                                "src": "918:8:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$5753_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 24293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "918:16:171",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1271_$5753",
                                "typeString": "contract IERC1271"
                              }
                            },
                            "id": 24294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5752,
                            "src": "918:33:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 24297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "918:50:171",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 24313,
                        "nodeType": "TryStatement",
                        "src": "914:223:171"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 24326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "725:19:171",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24278,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "762:6:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "754:14:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:171",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24280,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "786:4:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "778:12:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24279,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24282,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "813:9:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "800:22:171",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24281,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:5:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:84:171"
            },
            "returnParameters": {
              "id": 24286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "852:4:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:4:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:6:171"
            },
            "scope": 24327,
            "src": "716:515:171",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 24328,
        "src": "685:548:171",
        "usedErrors": []
      }
    ],
    "src": "33:1201:171"
  },
  "legacyAST": {
    "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        23192
      ],
      "ECDSA": [
        24199
      ],
      "IERC1271": [
        5753
      ],
      "SignatureChecker": [
        24327
      ]
    },
    "id": 24328,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24272,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:171"
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 24273,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24328,
        "sourceUnit": 24200,
        "src": "58:21:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../Address.sol",
        "id": 24274,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24328,
        "sourceUnit": 23193,
        "src": "80:24:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/tenten/Projects/upcgold.io/src/contracts/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 24275,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24328,
        "sourceUnit": 5754,
        "src": "105:39:171",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 24276,
          "nodeType": "StructuredDocumentation",
          "src": "146:538:171",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite).\n _Available since v4.1._"
        },
        "fullyImplemented": true,
        "id": 24327,
        "linearizedBaseContracts": [
          24327
        ],
        "name": "SignatureChecker",
        "nameLocation": "693:16:171",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24325,
              "nodeType": "Block",
              "src": "858:373:171",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 24289,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24278,
                        "src": "891:6:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24287,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23192,
                        "src": "872:7:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$23192_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 24288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22915,
                      "src": "872:18:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 24290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:26:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24323,
                    "nodeType": "Block",
                    "src": "1153:72:171",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 24321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 24317,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24280,
                                "src": "1188:4:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 24318,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24282,
                                "src": "1194:9:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 24315,
                                "name": "ECDSA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24199,
                                "src": "1174:5:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ECDSA_$24199_$",
                                  "typeString": "type(library ECDSA)"
                                }
                              },
                              "id": 24316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24077,
                              "src": "1174:13:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 24319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1174:30:171",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 24320,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24278,
                            "src": "1208:6:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1174:40:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 24286,
                        "id": 24322,
                        "nodeType": "Return",
                        "src": "1167:47:171"
                      }
                    ]
                  },
                  "id": 24324,
                  "nodeType": "IfStatement",
                  "src": "868:357:171",
                  "trueBody": {
                    "id": 24314,
                    "nodeType": "Block",
                    "src": "900:247:171",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 24307,
                              "nodeType": "Block",
                              "src": "997:88:171",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 24305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 24301,
                                      "name": "magicValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24299,
                                      "src": "1022:10:171",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 24302,
                                          "name": "IERC1271",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5753,
                                          "src": "1036:8:171",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1271_$5753_$",
                                            "typeString": "type(contract IERC1271)"
                                          }
                                        },
                                        "id": 24303,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "isValidSignature",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5752,
                                        "src": "1036:25:171",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
                                        }
                                      },
                                      "id": 24304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "1036:34:171",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "1022:48:171",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 24286,
                                  "id": 24306,
                                  "nodeType": "Return",
                                  "src": "1015:55:171"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 24308,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 24300,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 24299,
                                  "mutability": "mutable",
                                  "name": "magicValue",
                                  "nameLocation": "985:10:171",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 24308,
                                  "src": "978:17:171",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 24298,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "978:6:171",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "977:19:171"
                            },
                            "src": "969:116:171"
                          },
                          {
                            "block": {
                              "id": 24311,
                              "nodeType": "Block",
                              "src": "1092:45:171",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 24309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1117:5:171",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 24286,
                                  "id": 24310,
                                  "nodeType": "Return",
                                  "src": "1110:12:171"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 24312,
                            "nodeType": "TryCatchClause",
                            "src": "1086:51:171"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 24295,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24280,
                              "src": "952:4:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 24296,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24282,
                              "src": "958:9:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 24292,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24278,
                                  "src": "927:6:171",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 24291,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5753,
                                "src": "918:8:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$5753_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 24293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "918:16:171",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1271_$5753",
                                "typeString": "contract IERC1271"
                              }
                            },
                            "id": 24294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5752,
                            "src": "918:33:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 24297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "918:50:171",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 24313,
                        "nodeType": "TryStatement",
                        "src": "914:223:171"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 24326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "725:19:171",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24278,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "762:6:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "754:14:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:171",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24280,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "786:4:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "778:12:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24279,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24282,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "813:9:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "800:22:171",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24281,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:5:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:84:171"
            },
            "returnParameters": {
              "id": 24286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24326,
                  "src": "852:4:171",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:4:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:6:171"
            },
            "scope": 24327,
            "src": "716:515:171",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 24328,
        "src": "685:548:171",
        "usedErrors": []
      }
    ],
    "src": "33:1201:171"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-12T03:39:31.679Z",
  "devdoc": {
    "details": "Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}